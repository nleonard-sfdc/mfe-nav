/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_sfdc_www_hgf_lwc_components_src_hgf_globalnavigation_globalnavigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation */ \"./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.ts\");\n\ncustomElements.define('hgf-globalnavigation', _node_modules_sfdc_www_hgf_lwc_components_src_hgf_globalnavigation_globalnavigation__WEBPACK_IMPORTED_MODULE_0__.default.CustomElementConstructor);\n\n\n\n//# sourceURL=webpack://mfe-nav/./index.js?");

/***/ }),

/***/ "./node_modules/@lwc/engine/dist/engine.cjs.js":
/*!*****************************************************!*\
  !*** ./node_modules/@lwc/engine/dist/engine.cjs.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* proxy-compat-disable */\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect() {\n    // Don't apply polyfill when ProxyCompat is enabled.\n    if ('getKey' in Proxy) {\n        return false;\n    }\n    const proxy = new Proxy([3, 4], {});\n    const res = [1, 2].concat(proxy);\n    return res.length !== 4;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { isConcatSpreadable } = Symbol;\nconst { isArray } = Array;\nconst { slice: ArraySlice, unshift: ArrayUnshift, shift: ArrayShift } = Array.prototype;\nfunction isObject(O) {\n    return typeof O === 'object' ? O !== null : typeof O === 'function';\n}\n// https://www.ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\nfunction isSpreadable(O) {\n    if (!isObject(O)) {\n        return false;\n    }\n    const spreadable = O[isConcatSpreadable];\n    return spreadable !== undefined ? Boolean(spreadable) : isArray(O);\n}\n// https://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat\nfunction ArrayConcatPolyfill(..._args) {\n    const O = Object(this);\n    const A = [];\n    let N = 0;\n    const items = ArraySlice.call(arguments);\n    ArrayUnshift.call(items, O);\n    while (items.length) {\n        const E = ArrayShift.call(items);\n        if (isSpreadable(E)) {\n            let k = 0;\n            const length = E.length;\n            for (k; k < length; k += 1, N += 1) {\n                if (k in E) {\n                    const subElement = E[k];\n                    A[N] = subElement;\n                }\n            }\n        }\n        else {\n            A[N] = E;\n            N += 1;\n        }\n    }\n    return A;\n}\nfunction apply() {\n    // eslint-disable-next-line no-extend-native\n    Array.prototype.concat = ArrayConcatPolyfill;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nif (detect()) {\n    apply();\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant(value, msg) {\n    if (!value) {\n        throw new Error(`Invariant Violation: ${msg}`);\n    }\n}\nfunction isTrue(value, msg) {\n    if (!value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction isFalse(value, msg) {\n    if (value) {\n        throw new Error(`Assert Violation: ${msg}`);\n    }\n}\nfunction fail(msg) {\n    throw new Error(msg);\n}\n\nvar assert = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    invariant: invariant,\n    isTrue: isTrue,\n    isFalse: isFalse,\n    fail: fail\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst { assign, create, defineProperties, defineProperty, freeze, getOwnPropertyDescriptor, getOwnPropertyNames, getPrototypeOf, hasOwnProperty, isFrozen, keys, seal, setPrototypeOf, } = Object;\nconst { isArray: isArray$1 } = Array;\nconst { filter: ArrayFilter, find: ArrayFind, indexOf: ArrayIndexOf, join: ArrayJoin, map: ArrayMap, push: ArrayPush, reduce: ArrayReduce, reverse: ArrayReverse, slice: ArraySlice$1, splice: ArraySplice, unshift: ArrayUnshift$1, forEach, } = Array.prototype;\nconst { fromCharCode: StringFromCharCode } = String;\nconst { charCodeAt: StringCharCodeAt, replace: StringReplace, slice: StringSlice, toLowerCase: StringToLowerCase, } = String.prototype;\nfunction isUndefined(obj) {\n    return obj === undefined;\n}\nfunction isNull(obj) {\n    return obj === null;\n}\nfunction isFalse$1(obj) {\n    return obj === false;\n}\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nfunction isObject$1(obj) {\n    return typeof obj === 'object';\n}\nconst OtS = {}.toString;\nfunction toString(obj) {\n    if (obj && obj.toString) {\n        // Arrays might hold objects with \"null\" prototype So using\n        // Array.prototype.toString directly will cause an error Iterate through\n        // all the items and handle individually.\n        if (isArray$1(obj)) {\n            return ArrayJoin.call(ArrayMap.call(obj, toString), ',');\n        }\n        return obj.toString();\n    }\n    else if (typeof obj === 'object') {\n        return OtS.call(obj);\n    }\n    else {\n        return obj + '';\n    }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n */\nconst AriaPropertyNames = [\n    'ariaActiveDescendant',\n    'ariaAtomic',\n    'ariaAutoComplete',\n    'ariaBusy',\n    'ariaChecked',\n    'ariaColCount',\n    'ariaColIndex',\n    'ariaColSpan',\n    'ariaControls',\n    'ariaCurrent',\n    'ariaDescribedBy',\n    'ariaDetails',\n    'ariaDisabled',\n    'ariaErrorMessage',\n    'ariaExpanded',\n    'ariaFlowTo',\n    'ariaHasPopup',\n    'ariaHidden',\n    'ariaInvalid',\n    'ariaKeyShortcuts',\n    'ariaLabel',\n    'ariaLabelledBy',\n    'ariaLevel',\n    'ariaLive',\n    'ariaModal',\n    'ariaMultiLine',\n    'ariaMultiSelectable',\n    'ariaOrientation',\n    'ariaOwns',\n    'ariaPlaceholder',\n    'ariaPosInSet',\n    'ariaPressed',\n    'ariaReadOnly',\n    'ariaRelevant',\n    'ariaRequired',\n    'ariaRoleDescription',\n    'ariaRowCount',\n    'ariaRowIndex',\n    'ariaRowSpan',\n    'ariaSelected',\n    'ariaSetSize',\n    'ariaSort',\n    'ariaValueMax',\n    'ariaValueMin',\n    'ariaValueNow',\n    'ariaValueText',\n    'role',\n];\nconst { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap } = /*@__PURE__*/ (() => {\n    const AriaAttrNameToPropNameMap = create(null);\n    const AriaPropNameToAttrNameMap = create(null);\n    // Synthetic creation of all AOM property descriptors for Custom Elements\n    forEach.call(AriaPropertyNames, (propName) => {\n        const attrName = StringToLowerCase.call(StringReplace.call(propName, /^aria/, () => 'aria-'));\n        AriaAttrNameToPropNameMap[attrName] = propName;\n        AriaPropNameToAttrNameMap[propName] = attrName;\n    });\n    return { AriaAttrNameToPropNameMap, AriaPropNameToAttrNameMap };\n})();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// We use this to detect symbol support in order to avoid the expensive symbol polyfill. Note that\n// we can't use typeof since it will fail when transpiling.\nconst hasNativeSymbolSupport = /*@__PURE__*/ (() => Symbol('x').toString() === 'Symbol(x)')();\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// This method abstracts the creation of symbols, so we can fallback to strings when native symbols\n// are not supported.\nfunction createHiddenField(key, namespace) {\n    return (hasNativeSymbolSupport ? Symbol(key) : `$$lwc-${namespace}-${key}$$`);\n}\nconst hiddenFieldsMap = new WeakMap();\nfunction setHiddenField(o, field, value) {\n    let valuesByField = hiddenFieldsMap.get(o);\n    if (isUndefined(valuesByField)) {\n        valuesByField = create(null);\n        hiddenFieldsMap.set(o, valuesByField);\n    }\n    valuesByField[field] = value;\n}\nfunction getHiddenField(o, field) {\n    const valuesByField = hiddenFieldsMap.get(o);\n    if (!isUndefined(valuesByField)) {\n        return valuesByField[field];\n    }\n}\n/**\n * Map composed of properties to attributes not following the HTML property to attribute mapping\n * convention.\n */\nconst NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING = new Map([\n    ['accessKey', 'accesskey'],\n    ['readOnly', 'readonly'],\n    ['tabIndex', 'tabindex'],\n    ['bgColor', 'bgcolor'],\n    ['colSpan', 'colspan'],\n    ['rowSpan', 'rowspan'],\n    ['contentEditable', 'contenteditable'],\n    ['crossOrigin', 'crossorigin'],\n    ['dateTime', 'datetime'],\n    ['formAction', 'formaction'],\n    ['isMap', 'ismap'],\n    ['maxLength', 'maxlength'],\n    ['minLength', 'minlength'],\n    ['noValidate', 'novalidate'],\n    ['useMap', 'usemap'],\n    ['htmlFor', 'for'],\n]);\n/**\n * Map associating previously transformed HTML property into HTML attribute.\n */\nconst CACHED_PROPERTY_ATTRIBUTE_MAPPING = new Map();\nfunction htmlPropertyToAttribute(propName) {\n    const ariaAttributeName = AriaPropNameToAttrNameMap[propName];\n    if (!isUndefined(ariaAttributeName)) {\n        return ariaAttributeName;\n    }\n    const specialAttributeName = NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined(specialAttributeName)) {\n        return specialAttributeName;\n    }\n    const cachedAttributeName = CACHED_PROPERTY_ATTRIBUTE_MAPPING.get(propName);\n    if (!isUndefined(cachedAttributeName)) {\n        return cachedAttributeName;\n    }\n    let attributeName = '';\n    for (let i = 0, len = propName.length; i < len; i++) {\n        const code = StringCharCodeAt.call(propName, i);\n        if (code >= 65 && // \"A\"\n            code <= 90 // \"Z\"\n        ) {\n            attributeName += '-' + StringFromCharCode(code + 32);\n        }\n        else {\n            attributeName += StringFromCharCode(code);\n        }\n    }\n    CACHED_PROPERTY_ATTRIBUTE_MAPPING.set(propName, attributeName);\n    return attributeName;\n}\n/** version: 1.17.5 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction detect$1(propName) {\n    return Object.getOwnPropertyDescriptor(Element.prototype, propName) === undefined;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst nodeToAriaPropertyValuesMap = new WeakMap();\nfunction getAriaPropertyMap(elm) {\n    let map = nodeToAriaPropertyValuesMap.get(elm);\n    if (map === undefined) {\n        map = {};\n        nodeToAriaPropertyValuesMap.set(elm, map);\n    }\n    return map;\n}\nfunction getNormalizedAriaPropertyValue(value) {\n    return value == null ? null : String(value);\n}\nfunction createAriaPropertyPropertyDescriptor(propName, attrName) {\n    return {\n        get() {\n            const map = getAriaPropertyMap(this);\n            if (hasOwnProperty.call(map, propName)) {\n                return map[propName];\n            }\n            // otherwise just reflect what's in the attribute\n            return this.hasAttribute(attrName) ? this.getAttribute(attrName) : null;\n        },\n        set(newValue) {\n            const normalizedValue = getNormalizedAriaPropertyValue(newValue);\n            const map = getAriaPropertyMap(this);\n            map[propName] = normalizedValue;\n            // reflect into the corresponding attribute\n            if (newValue === null) {\n                this.removeAttribute(attrName);\n            }\n            else {\n                this.setAttribute(attrName, newValue);\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    };\n}\nfunction patch(propName) {\n    // Typescript is inferring the wrong function type for this particular\n    // overloaded method: https://github.com/Microsoft/TypeScript/issues/27972\n    // @ts-ignore type-mismatch\n    const attrName = AriaPropNameToAttrNameMap[propName];\n    const descriptor = createAriaPropertyPropertyDescriptor(propName, attrName);\n    Object.defineProperty(Element.prototype, propName, descriptor);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ElementPrototypeAriaPropertyNames = keys(AriaPropNameToAttrNameMap);\nfor (let i = 0, len = ElementPrototypeAriaPropertyNames.length; i < len; i += 1) {\n    const propName = ElementPrototypeAriaPropertyNames[i];\n    if (detect$1(propName)) {\n        patch(propName);\n    }\n}\n\n/* proxy-compat-disable */\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction invariant$1(value, msg) {\n  if (!value) {\n    throw new Error(`Invariant Violation: ${msg}`);\n  }\n}\n\nfunction isTrue$1(value, msg) {\n  if (!value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction isFalse$2(value, msg) {\n  if (value) {\n    throw new Error(`Assert Violation: ${msg}`);\n  }\n}\n\nfunction fail$1(msg) {\n  throw new Error(msg);\n}\n\nvar assert$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  invariant: invariant$1,\n  isTrue: isTrue$1,\n  isFalse: isFalse$2,\n  fail: fail$1\n});\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst {\n  assign: assign$1,\n  create: create$1,\n  defineProperties: defineProperties$1,\n  defineProperty: defineProperty$1,\n  freeze: freeze$1,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$1,\n  getOwnPropertyNames: getOwnPropertyNames$1,\n  getPrototypeOf: getPrototypeOf$1,\n  hasOwnProperty: hasOwnProperty$1,\n  isFrozen: isFrozen$1,\n  keys: keys$1,\n  seal: seal$1,\n  setPrototypeOf: setPrototypeOf$1\n} = Object;\nconst {\n  isArray: isArray$2\n} = Array;\nconst {\n  filter: ArrayFilter$1,\n  find: ArrayFind$1,\n  indexOf: ArrayIndexOf$1,\n  join: ArrayJoin$1,\n  map: ArrayMap$1,\n  push: ArrayPush$1,\n  reduce: ArrayReduce$1,\n  reverse: ArrayReverse$1,\n  slice: ArraySlice$2,\n  splice: ArraySplice$1,\n  unshift: ArrayUnshift$2,\n  forEach: forEach$1\n} = Array.prototype;\nconst {\n  fromCharCode: StringFromCharCode$1\n} = String;\nconst {\n  charCodeAt: StringCharCodeAt$1,\n  replace: StringReplace$1,\n  slice: StringSlice$1,\n  toLowerCase: StringToLowerCase$1\n} = String.prototype;\n\nfunction isUndefined$1(obj) {\n  return obj === undefined;\n}\n\nfunction isNull$1(obj) {\n  return obj === null;\n}\n\nfunction isTrue$1$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1$1(obj) {\n  return obj === false;\n}\n\nfunction isFunction$1(obj) {\n  return typeof obj === 'function';\n}\n\nfunction isObject$2(obj) {\n  return typeof obj === 'object';\n}\n\nfunction isString(obj) {\n  return typeof obj === 'string';\n}\n\nfunction isNumber(obj) {\n  return typeof obj === 'number';\n}\n\nconst OtS$1 = {}.toString;\n\nfunction toString$1(obj) {\n  if (obj && obj.toString) {\n    // Arrays might hold objects with \"null\" prototype So using\n    // Array.prototype.toString directly will cause an error Iterate through\n    // all the items and handle individually.\n    if (isArray$2(obj)) {\n      return ArrayJoin$1.call(ArrayMap$1.call(obj, toString$1), ',');\n    }\n\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS$1.call(obj);\n  } else {\n    return obj + '';\n  }\n}\n\nfunction getPropertyDescriptor(o, p) {\n  do {\n    const d = getOwnPropertyDescriptor$1(o, p);\n\n    if (!isUndefined$1(d)) {\n      return d;\n    }\n\n    o = getPrototypeOf$1(o);\n  } while (o !== null);\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n * According to the following list, there are 48 aria attributes of which two (ariaDropEffect and\n * ariaGrabbed) are deprecated:\n * https://www.w3.org/TR/wai-aria-1.1/#x6-6-definitions-of-states-and-properties-all-aria-attributes\n *\n * The above list of 46 aria attributes is consistent with the following resources:\n * https://github.com/w3c/aria/pull/708/files#diff-eacf331f0ffc35d4b482f1d15a887d3bR11060\n * https://wicg.github.io/aom/spec/aria-reflection.html\n */\n\n\nconst AriaPropertyNames$1 = ['ariaActiveDescendant', 'ariaAtomic', 'ariaAutoComplete', 'ariaBusy', 'ariaChecked', 'ariaColCount', 'ariaColIndex', 'ariaColSpan', 'ariaControls', 'ariaCurrent', 'ariaDescribedBy', 'ariaDetails', 'ariaDisabled', 'ariaErrorMessage', 'ariaExpanded', 'ariaFlowTo', 'ariaHasPopup', 'ariaHidden', 'ariaInvalid', 'ariaKeyShortcuts', 'ariaLabel', 'ariaLabelledBy', 'ariaLevel', 'ariaLive', 'ariaModal', 'ariaMultiLine', 'ariaMultiSelectable', 'ariaOrientation', 'ariaOwns', 'ariaPlaceholder', 'ariaPosInSet', 'ariaPressed', 'ariaReadOnly', 'ariaRelevant', 'ariaRequired', 'ariaRoleDescription', 'ariaRowCount', 'ariaRowIndex', 'ariaRowSpan', 'ariaSelected', 'ariaSetSize', 'ariaSort', 'ariaValueMax', 'ariaValueMin', 'ariaValueNow', 'ariaValueText', 'role'];\n\nconst {\n  AriaAttrNameToPropNameMap: AriaAttrNameToPropNameMap$1,\n  AriaPropNameToAttrNameMap: AriaPropNameToAttrNameMap$1\n} = /*@__PURE__*/(() => {\n  const AriaAttrNameToPropNameMap = create$1(null);\n  const AriaPropNameToAttrNameMap = create$1(null); // Synthetic creation of all AOM property descriptors for Custom Elements\n\n  forEach$1.call(AriaPropertyNames$1, propName => {\n    const attrName = StringToLowerCase$1.call(StringReplace$1.call(propName, /^aria/, () => 'aria-'));\n    AriaAttrNameToPropNameMap[attrName] = propName;\n    AriaPropNameToAttrNameMap[propName] = attrName;\n  });\n  return {\n    AriaAttrNameToPropNameMap,\n    AriaPropNameToAttrNameMap\n  };\n})();\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// We use this to detect symbol support in order to avoid the expensive symbol polyfill. Note that\n// we can't use typeof since it will fail when transpiling.\n\n\nconst hasNativeSymbolSupport$1 = /*@__PURE__*/(() => Symbol('x').toString() === 'Symbol(x)')();\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// This method abstracts the creation of symbols, so we can fallback to strings when native symbols\n// are not supported.\n\n\nfunction createHiddenField$1(key, namespace) {\n  return hasNativeSymbolSupport$1 ? Symbol(key) : `$$lwc-${namespace}-${key}$$`;\n}\n\nconst hiddenFieldsMap$1 = new WeakMap();\n\nfunction setHiddenField$1(o, field, value) {\n  let valuesByField = hiddenFieldsMap$1.get(o);\n\n  if (isUndefined$1(valuesByField)) {\n    valuesByField = create$1(null);\n    hiddenFieldsMap$1.set(o, valuesByField);\n  }\n\n  valuesByField[field] = value;\n}\n\nfunction getHiddenField$1(o, field) {\n  const valuesByField = hiddenFieldsMap$1.get(o);\n\n  if (!isUndefined$1(valuesByField)) {\n    return valuesByField[field];\n  }\n}\n/**\n * Map composed of properties to attributes not following the HTML property to attribute mapping\n * convention.\n */\n\n\nconst NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING$1 = new Map([['accessKey', 'accesskey'], ['readOnly', 'readonly'], ['tabIndex', 'tabindex'], ['bgColor', 'bgcolor'], ['colSpan', 'colspan'], ['rowSpan', 'rowspan'], ['contentEditable', 'contenteditable'], ['crossOrigin', 'crossorigin'], ['dateTime', 'datetime'], ['formAction', 'formaction'], ['isMap', 'ismap'], ['maxLength', 'maxlength'], ['minLength', 'minlength'], ['noValidate', 'novalidate'], ['useMap', 'usemap'], ['htmlFor', 'for']]);\n/**\n * Map associating previously transformed HTML property into HTML attribute.\n */\n\nconst CACHED_PROPERTY_ATTRIBUTE_MAPPING$1 = new Map();\n\nfunction htmlPropertyToAttribute$1(propName) {\n  const ariaAttributeName = AriaPropNameToAttrNameMap$1[propName];\n\n  if (!isUndefined$1(ariaAttributeName)) {\n    return ariaAttributeName;\n  }\n\n  const specialAttributeName = NO_STANDARD_PROPERTY_ATTRIBUTE_MAPPING$1.get(propName);\n\n  if (!isUndefined$1(specialAttributeName)) {\n    return specialAttributeName;\n  }\n\n  const cachedAttributeName = CACHED_PROPERTY_ATTRIBUTE_MAPPING$1.get(propName);\n\n  if (!isUndefined$1(cachedAttributeName)) {\n    return cachedAttributeName;\n  }\n\n  let attributeName = '';\n\n  for (let i = 0, len = propName.length; i < len; i++) {\n    const code = StringCharCodeAt$1.call(propName, i);\n\n    if (code >= 65 && // \"A\"\n    code <= 90 // \"Z\"\n    ) {\n        attributeName += '-' + StringFromCharCode$1(code + 32);\n      } else {\n      attributeName += StringFromCharCode$1(code);\n    }\n  }\n\n  CACHED_PROPERTY_ATTRIBUTE_MAPPING$1.set(propName, attributeName);\n  return attributeName;\n}\n/** version: 1.17.5 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet nextTickCallbackQueue = [];\nconst SPACE_CHAR = 32;\nconst EmptyObject = seal$1(create$1(null));\nconst EmptyArray = seal$1([]);\n\nfunction flushCallbackQueue() {\n  if (true) {\n    if (nextTickCallbackQueue.length === 0) {\n      throw new Error(`Internal Error: If callbackQueue is scheduled, it is because there must be at least one callback on this pending queue.`);\n    }\n  }\n\n  const callbacks = nextTickCallbackQueue;\n  nextTickCallbackQueue = []; // reset to a new queue\n\n  for (let i = 0, len = callbacks.length; i < len; i += 1) {\n    callbacks[i]();\n  }\n}\n\nfunction addCallbackToNextTick(callback) {\n  if (true) {\n    if (!isFunction$1(callback)) {\n      throw new Error(`Internal Error: addCallbackToNextTick() can only accept a function callback`);\n    }\n  }\n\n  if (nextTickCallbackQueue.length === 0) {\n    Promise.resolve().then(flushCallbackQueue);\n  }\n\n  ArrayPush$1.call(nextTickCallbackQueue, callback);\n}\nfunction guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\n/*\n * Copyright (c) 2019, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  create: create$1$1\n} = Object;\nconst {\n  splice: ArraySplice$1$1,\n  indexOf: ArrayIndexOf$1$1,\n  push: ArrayPush$1$1\n} = Array.prototype;\nconst TargetToReactiveRecordMap = new WeakMap();\n\nfunction isUndefined$1$1(obj) {\n  return obj === undefined;\n}\n\nfunction getReactiveRecord(target) {\n  let reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (isUndefined$1$1(reactiveRecord)) {\n    const newRecord = create$1$1(null);\n    reactiveRecord = newRecord;\n    TargetToReactiveRecordMap.set(target, newRecord);\n  }\n\n  return reactiveRecord;\n}\n\nlet currentReactiveObserver = null;\nfunction valueMutated(target, key) {\n  const reactiveRecord = TargetToReactiveRecordMap.get(target);\n\n  if (!isUndefined$1$1(reactiveRecord)) {\n    const reactiveObservers = reactiveRecord[key];\n\n    if (!isUndefined$1$1(reactiveObservers)) {\n      for (let i = 0, len = reactiveObservers.length; i < len; i += 1) {\n        const ro = reactiveObservers[i];\n        ro.notify();\n      }\n    }\n  }\n}\nfunction valueObserved(target, key) {\n  // We should determine if an active Observing Record is present to track mutations.\n  if (currentReactiveObserver === null) {\n    return;\n  }\n\n  const ro = currentReactiveObserver;\n  const reactiveRecord = getReactiveRecord(target);\n  let reactiveObservers = reactiveRecord[key];\n\n  if (isUndefined$1$1(reactiveObservers)) {\n    reactiveObservers = [];\n    reactiveRecord[key] = reactiveObservers;\n  } else if (reactiveObservers[0] === ro) {\n    return; // perf optimization considering that most subscriptions will come from the same record\n  }\n\n  if (ArrayIndexOf$1$1.call(reactiveObservers, ro) === -1) {\n    ro.link(reactiveObservers);\n  }\n}\nclass ReactiveObserver {\n  constructor(callback) {\n    this.listeners = [];\n    this.callback = callback;\n  }\n\n  observe(job) {\n    const inceptionReactiveRecord = currentReactiveObserver;\n    currentReactiveObserver = this;\n    let error;\n\n    try {\n      job();\n    } catch (e) {\n      error = Object(e);\n    } finally {\n      currentReactiveObserver = inceptionReactiveRecord;\n\n      if (error !== undefined) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n    }\n  }\n  /**\n   * This method is responsible for disconnecting the Reactive Observer\n   * from any Reactive Record that has a reference to it, to prevent future\n   * notifications about previously recorded access.\n   */\n\n\n  reset() {\n    const {\n      listeners\n    } = this;\n    const len = listeners.length;\n\n    if (len > 0) {\n      for (let i = 0; i < len; i += 1) {\n        const set = listeners[i];\n        const pos = ArrayIndexOf$1$1.call(listeners[i], this);\n        ArraySplice$1$1.call(set, pos, 1);\n      }\n\n      listeners.length = 0;\n    }\n  } // friend methods\n\n\n  notify() {\n    this.callback.call(undefined, this);\n  }\n\n  link(reactiveObservers) {\n    ArrayPush$1$1.call(reactiveObservers, this); // we keep track of observing records where the observing record was added to so we can do some clean up later on\n\n    ArrayPush$1$1.call(this.listeners, reactiveObservers);\n  }\n\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction componentValueMutated(vm, key) {\n  valueMutated(vm.component, key);\n}\nfunction componentValueObserved(vm, key) {\n  valueObserved(vm.component, key);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getComponentTag(vm) {\n  return `<${StringToLowerCase$1.call(vm.tagName)}>`;\n} // TODO [#1695]: Unify getComponentStack and getErrorComponentStack\n\nfunction getComponentStack(vm) {\n  const stack = [];\n  let prefix = '';\n\n  while (!isNull$1(vm.owner)) {\n    ArrayPush$1.call(stack, prefix + getComponentTag(vm));\n    vm = vm.owner;\n    prefix += '\\t';\n  }\n\n  return ArrayJoin$1.call(stack, '\\n');\n}\nfunction getErrorComponentStack(vm) {\n  const wcStack = [];\n  let currentVm = vm;\n\n  while (!isNull$1(currentVm)) {\n    ArrayPush$1.call(wcStack, getComponentTag(currentVm));\n    currentVm = currentVm.owner;\n  }\n\n  return wcStack.reverse().join('\\n\\t');\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction logError(message, vm) {\n  let msg = `[LWC error]: ${message}`;\n\n  if (!isUndefined$1(vm)) {\n    msg = `${msg}\\n${getComponentStack(vm)}`;\n  }\n\n  if (false) {}\n\n  try {\n    throw new Error(msg);\n  } catch (e) {\n    /* eslint-disable-next-line no-console */\n    console.error(e);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction handleEvent(event, vnode) {\n  const {\n    type\n  } = event;\n  const {\n    data: {\n      on\n    }\n  } = vnode;\n  const handler = on && on[type]; // call event handler if exists\n\n  if (handler) {\n    handler.call(undefined, event);\n  }\n}\n\nfunction createListener() {\n  return function handler(event) {\n    handleEvent(event, handler.vnode);\n  };\n}\n\nfunction updateAllEventListeners(oldVnode, vnode) {\n  if (isUndefined$1(oldVnode.listener)) {\n    createAllEventListeners(vnode);\n  } else {\n    vnode.listener = oldVnode.listener;\n    vnode.listener.vnode = vnode;\n  }\n}\n\nfunction createAllEventListeners(vnode) {\n  const {\n    elm,\n    data: {\n      on\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  if (isUndefined$1(on)) {\n    return;\n  }\n\n  const listener = vnode.listener = createListener();\n  listener.vnode = vnode;\n  let name;\n\n  for (name in on) {\n    renderer.addEventListener(elm, name, listener);\n  }\n}\n\nvar modEvents = {\n  update: updateAllEventListeners,\n  create: createAllEventListeners\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst defaultDefHTMLPropertyNames = ['accessKey', 'dir', 'draggable', 'hidden', 'id', 'lang', 'spellcheck', 'tabIndex', 'title'];\n\nfunction offsetPropertyErrorMessage(name) {\n  return `Using the \\`${name}\\` property is an anti-pattern because it rounds the value to an integer. Instead, use the \\`getBoundingClientRect\\` method to obtain fractional values for the size of an element and its position relative to the viewport.`;\n} // Global HTML Attributes & Properties\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes\n// https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement\n\n\nconst globalHTMLProperties = assign$1(create$1(null), {\n  accessKey: {\n    attribute: 'accesskey'\n  },\n  accessKeyLabel: {\n    readOnly: true\n  },\n  className: {\n    attribute: 'class',\n    error: 'Using the `className` property is an anti-pattern because of slow runtime behavior and potential conflicts with classes provided by the owner element. Use the `classList` API instead.'\n  },\n  contentEditable: {\n    attribute: 'contenteditable'\n  },\n  dataset: {\n    readOnly: true,\n    error: \"Using the `dataset` property is an anti-pattern because it can't be statically analyzed. Expose each property individually using the `@api` decorator instead.\"\n  },\n  dir: {\n    attribute: 'dir'\n  },\n  draggable: {\n    attribute: 'draggable'\n  },\n  dropzone: {\n    attribute: 'dropzone',\n    readOnly: true\n  },\n  hidden: {\n    attribute: 'hidden'\n  },\n  id: {\n    attribute: 'id'\n  },\n  inputMode: {\n    attribute: 'inputmode'\n  },\n  lang: {\n    attribute: 'lang'\n  },\n  slot: {\n    attribute: 'slot',\n    error: 'Using the `slot` property is an anti-pattern.'\n  },\n  spellcheck: {\n    attribute: 'spellcheck'\n  },\n  style: {\n    attribute: 'style'\n  },\n  tabIndex: {\n    attribute: 'tabindex'\n  },\n  title: {\n    attribute: 'title'\n  },\n  translate: {\n    attribute: 'translate'\n  },\n  // additional \"global attributes\" that are not present in the link above.\n  isContentEditable: {\n    readOnly: true\n  },\n  offsetHeight: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetHeight')\n  },\n  offsetLeft: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetLeft')\n  },\n  offsetParent: {\n    readOnly: true\n  },\n  offsetTop: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetTop')\n  },\n  offsetWidth: {\n    readOnly: true,\n    error: offsetPropertyErrorMessage('offsetWidth')\n  },\n  role: {\n    attribute: 'role'\n  }\n});\nlet controlledElement = null;\nlet controlledAttributeName;\nfunction isAttributeLocked(elm, attrName) {\n  return elm !== controlledElement || attrName !== controlledAttributeName;\n}\nfunction lockAttribute(_elm, _key) {\n  controlledElement = null;\n  controlledAttributeName = undefined;\n}\nfunction unlockAttribute(elm, key) {\n  controlledElement = elm;\n  controlledAttributeName = key;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\nconst xmlNS = 'http://www.w3.org/XML/1998/namespace';\nconst ColonCharCode = 58;\n\nfunction updateAttrs(oldVnode, vnode) {\n  const {\n    data: {\n      attrs\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  if (isUndefined$1(attrs)) {\n    return;\n  }\n\n  let {\n    data: {\n      attrs: oldAttrs\n    }\n  } = oldVnode;\n\n  if (oldAttrs === attrs) {\n    return;\n  }\n\n  if (true) {\n    assert$1.invariant(isUndefined$1(oldAttrs) || keys$1(oldAttrs).join(',') === keys$1(attrs).join(','), `vnode.data.attrs cannot change shape.`);\n  }\n\n  const elm = vnode.elm;\n  const {\n    setAttribute,\n    removeAttribute\n  } = renderer;\n  let key;\n  oldAttrs = isUndefined$1(oldAttrs) ? EmptyObject : oldAttrs; // update modified attributes, add new attributes\n  // this routine is only useful for data-* attributes in all kind of elements\n  // and aria-* in standard elements (custom elements will use props for these)\n\n  for (key in attrs) {\n    const cur = attrs[key];\n    const old = oldAttrs[key];\n\n    if (old !== cur) {\n      unlockAttribute(elm, key);\n\n      if (StringCharCodeAt$1.call(key, 3) === ColonCharCode) {\n        // Assume xml namespace\n        setAttribute(elm, key, cur, xmlNS);\n      } else if (StringCharCodeAt$1.call(key, 5) === ColonCharCode) {\n        // Assume xlink namespace\n        setAttribute(elm, key, cur, xlinkNS);\n      } else if (isNull$1(cur)) {\n        removeAttribute(elm, key);\n      } else {\n        setAttribute(elm, key, cur);\n      }\n\n      lockAttribute();\n    }\n  }\n}\n\nconst emptyVNode = {\n  data: {}\n};\nvar modAttrs = {\n  create: vnode => updateAttrs(emptyVNode, vnode),\n  update: updateAttrs\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction isLiveBindingProp(sel, key) {\n  // For properties with live bindings, we read values from the DOM element\n  // instead of relying on internally tracked values.\n  return sel === 'input' && (key === 'value' || key === 'checked');\n}\n\nfunction update(oldVnode, vnode) {\n  const props = vnode.data.props;\n\n  if (isUndefined$1(props)) {\n    return;\n  }\n\n  const oldProps = oldVnode.data.props;\n\n  if (oldProps === props) {\n    return;\n  }\n\n  if (true) {\n    assert$1.invariant(isUndefined$1(oldProps) || keys$1(oldProps).join(',') === keys$1(props).join(','), 'vnode.data.props cannot change shape.');\n  }\n\n  const isFirstPatch = isUndefined$1(oldProps);\n  const {\n    elm,\n    sel,\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  for (const key in props) {\n    const cur = props[key]; // if it is the first time this element is patched, or the current value is different to the previous value...\n\n    if (isFirstPatch || cur !== (isLiveBindingProp(sel, key) ? renderer.getProperty(elm, key) : oldProps[key])) {\n      renderer.setProperty(elm, key, cur);\n    }\n  }\n}\n\nconst emptyVNode$1 = {\n  data: {}\n};\nvar modProps = {\n  create: vnode => update(emptyVNode$1, vnode),\n  update\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst classNameToClassMap = create$1(null);\n\nfunction getMapFromClassName(className) {\n  // Intentionally using == to match undefined and null values from computed style attribute\n  if (className == null) {\n    return EmptyObject;\n  } // computed class names must be string\n\n\n  className = isString(className) ? className : className + '';\n  let map = classNameToClassMap[className];\n\n  if (map) {\n    return map;\n  }\n\n  map = create$1(null);\n  let start = 0;\n  let o;\n  const len = className.length;\n\n  for (o = 0; o < len; o++) {\n    if (StringCharCodeAt$1.call(className, o) === SPACE_CHAR) {\n      if (o > start) {\n        map[StringSlice$1.call(className, start, o)] = true;\n      }\n\n      start = o + 1;\n    }\n  }\n\n  if (o > start) {\n    map[StringSlice$1.call(className, start, o)] = true;\n  }\n\n  classNameToClassMap[className] = map;\n\n  if (true) {\n    // just to make sure that this object never changes as part of the diffing algo\n    freeze$1(map);\n  }\n\n  return map;\n}\n\nfunction updateClassAttribute(oldVnode, vnode) {\n  const {\n    elm,\n    data: {\n      className: newClass\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n  const {\n    data: {\n      className: oldClass\n    }\n  } = oldVnode;\n\n  if (oldClass === newClass) {\n    return;\n  }\n\n  const classList = renderer.getClassList(elm);\n  const newClassMap = getMapFromClassName(newClass);\n  const oldClassMap = getMapFromClassName(oldClass);\n  let name;\n\n  for (name in oldClassMap) {\n    // remove only if it is not in the new class collection and it is not set from within the instance\n    if (isUndefined$1(newClassMap[name])) {\n      classList.remove(name);\n    }\n  }\n\n  for (name in newClassMap) {\n    if (isUndefined$1(oldClassMap[name])) {\n      classList.add(name);\n    }\n  }\n}\n\nconst emptyVNode$2 = {\n  data: {}\n};\nvar modComputedClassName = {\n  create: vnode => updateClassAttribute(emptyVNode$2, vnode),\n  update: updateClassAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction updateStyleAttribute(oldVnode, vnode) {\n  const {\n    elm,\n    data: {\n      style: newStyle\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n  const {\n    setAttribute,\n    removeAttribute\n  } = renderer;\n\n  if (oldVnode.data.style === newStyle) {\n    return;\n  }\n\n  if (!isString(newStyle) || newStyle === '') {\n    removeAttribute(elm, 'style');\n  } else {\n    setAttribute(elm, 'style', newStyle);\n  }\n}\n\nconst emptyVNode$3 = {\n  data: {}\n};\nvar modComputedStyle = {\n  create: vnode => updateStyleAttribute(emptyVNode$3, vnode),\n  update: updateStyleAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline classnames into an object. It's faster to set the\n// different classnames properties individually instead of via a string.\n\nfunction createClassAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      classMap\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  if (isUndefined$1(classMap)) {\n    return;\n  }\n\n  const classList = renderer.getClassList(elm);\n\n  for (const name in classMap) {\n    classList.add(name);\n  }\n}\n\nvar modStaticClassName = {\n  create: createClassAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// The compiler takes care of transforming the inline style into an object. It's faster to set the\n// different style properties individually instead of via a string.\n\nfunction createStyleAttribute(vnode) {\n  const {\n    elm,\n    data: {\n      styleMap\n    },\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  if (isUndefined$1(styleMap)) {\n    return;\n  }\n\n  for (const name in styleMap) {\n    renderer.setCSSStyleProperty(elm, name, styleMap[name]);\n  }\n}\n\nvar modStaticStyle = {\n  create: createStyleAttribute\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n/**\n@license\nCopyright (c) 2015 Simon Friis Vindum.\nThis code may only be used under the MIT License found at\nhttps://github.com/snabbdom/snabbdom/blob/master/LICENSE\nCode distributed by Snabbdom as part of the Snabbdom project at\nhttps://github.com/snabbdom/snabbdom/\n*/\nfunction isUndef(s) {\n  return s === undefined;\n}\n\nfunction sameVnode(vnode1, vnode2) {\n  return vnode1.key === vnode2.key && vnode1.sel === vnode2.sel;\n}\n\nfunction isVNode(vnode) {\n  return vnode != null;\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  const map = {};\n  let j, key, ch; // TODO [#1637]: simplify this by assuming that all vnodes has keys\n\n  for (j = beginIdx; j <= endIdx; ++j) {\n    ch = children[j];\n\n    if (isVNode(ch)) {\n      key = ch.key;\n\n      if (key !== undefined) {\n        map[key] = j;\n      }\n    }\n  }\n\n  return map;\n}\n\nfunction addVnodes(parentElm, before, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx];\n\n    if (isVNode(ch)) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, parentElm, before);\n    }\n  }\n}\n\nfunction removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    const ch = vnodes[startIdx]; // text nodes do not have logic associated to them\n\n    if (isVNode(ch)) {\n      ch.hook.remove(ch, parentElm);\n    }\n  }\n}\n\nfunction updateDynamicChildren(parentElm, oldCh, newCh) {\n  let oldStartIdx = 0;\n  let newStartIdx = 0;\n  let oldEndIdx = oldCh.length - 1;\n  let oldStartVnode = oldCh[0];\n  let oldEndVnode = oldCh[oldEndIdx];\n  const newChEnd = newCh.length - 1;\n  let newEndIdx = newChEnd;\n  let newStartVnode = newCh[0];\n  let newEndVnode = newCh[newEndIdx];\n  let oldKeyToIdx;\n  let idxInOld;\n  let elmToMove;\n  let before;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (!isVNode(oldStartVnode)) {\n      oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left\n    } else if (!isVNode(oldEndVnode)) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (!isVNode(newStartVnode)) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (!isVNode(newEndVnode)) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newStartVnode)) {\n      patchVnode(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (sameVnode(oldEndVnode, newEndVnode)) {\n      patchVnode(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      patchVnode(oldStartVnode, newEndVnode);\n      newEndVnode.hook.move(oldStartVnode, parentElm, oldEndVnode.owner.renderer.nextSibling(oldEndVnode.elm));\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (sameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      patchVnode(oldEndVnode, newStartVnode);\n      newStartVnode.hook.move(oldEndVnode, parentElm, oldStartVnode.elm);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      if (oldKeyToIdx === undefined) {\n        oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n      }\n\n      idxInOld = oldKeyToIdx[newStartVnode.key];\n\n      if (isUndef(idxInOld)) {\n        // New element\n        newStartVnode.hook.create(newStartVnode);\n        newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        elmToMove = oldCh[idxInOld];\n\n        if (isVNode(elmToMove)) {\n          if (elmToMove.sel !== newStartVnode.sel) {\n            // New element\n            newStartVnode.hook.create(newStartVnode);\n            newStartVnode.hook.insert(newStartVnode, parentElm, oldStartVnode.elm);\n          } else {\n            patchVnode(elmToMove, newStartVnode);\n            oldCh[idxInOld] = undefined;\n            newStartVnode.hook.move(elmToMove, parentElm, oldStartVnode.elm);\n          }\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n  }\n\n  if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {\n    if (oldStartIdx > oldEndIdx) {\n      // There's some cases in which the sub array of vnodes to be inserted is followed by null(s) and an\n      // already processed vnode, in such cases the vnodes to be inserted should be before that processed vnode.\n      let i = newEndIdx;\n      let n;\n\n      do {\n        n = newCh[++i];\n      } while (!isVNode(n) && i < newChEnd);\n\n      before = isVNode(n) ? n.elm : null;\n      addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx);\n    } else {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n}\nfunction updateStaticChildren(parentElm, oldCh, newCh) {\n  const oldChLength = oldCh.length;\n  const newChLength = newCh.length;\n\n  if (oldChLength === 0) {\n    // the old list is empty, we can directly insert anything new\n    addVnodes(parentElm, null, newCh, 0, newChLength);\n    return;\n  }\n\n  if (newChLength === 0) {\n    // the old list is nonempty and the new list is empty so we can directly remove all old nodes\n    // this is the case in which the dynamic children of an if-directive should be removed\n    removeVnodes(parentElm, oldCh, 0, oldChLength);\n    return;\n  } // if the old list is not empty, the new list MUST have the same\n  // amount of nodes, that's why we call this static children\n\n\n  let referenceElm = null;\n\n  for (let i = newChLength - 1; i >= 0; i -= 1) {\n    const vnode = newCh[i];\n    const oldVNode = oldCh[i];\n\n    if (vnode !== oldVNode) {\n      if (isVNode(oldVNode)) {\n        if (isVNode(vnode)) {\n          // both vnodes must be equivalent, and se just need to patch them\n          patchVnode(oldVNode, vnode);\n          referenceElm = vnode.elm;\n        } else {\n          // removing the old vnode since the new one is null\n          oldVNode.hook.remove(oldVNode, parentElm);\n        }\n      } else if (isVNode(vnode)) {\n        // this condition is unnecessary\n        vnode.hook.create(vnode); // insert the new node one since the old one is null\n\n        vnode.hook.insert(vnode, parentElm, referenceElm);\n        referenceElm = vnode.elm;\n      }\n    }\n  }\n}\n\nfunction patchVnode(oldVnode, vnode) {\n  if (oldVnode !== vnode) {\n    vnode.elm = oldVnode.elm;\n    vnode.hook.update(oldVnode, vnode);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction generateDataDescriptor(options) {\n  return assign$1({\n    configurable: true,\n    enumerable: true,\n    writable: true\n  }, options);\n}\n\nfunction generateAccessorDescriptor(options) {\n  return assign$1({\n    configurable: true,\n    enumerable: true\n  }, options);\n}\n\nlet isDomMutationAllowed = false;\nfunction unlockDomMutation() {\n  if (false) {}\n\n  isDomMutationAllowed = true;\n}\nfunction lockDomMutation() {\n  if (false) {}\n\n  isDomMutationAllowed = false;\n}\n\nfunction logMissingPortalError(name, type) {\n  return logError(`The \\`${name}\\` ${type} is available only on elements that use the \\`lwc:dom=\"manual\"\\` directive.`);\n}\n\nfunction patchElementWithRestrictions(elm, options) {\n  if (false) {}\n\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  const descriptors = {\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on Element.`);\n      }\n\n    })\n  }; // Apply extra restriction related to DOM manipulation if the element is not a portal.\n\n  if (isFalse$1$1(options.isPortal)) {\n    const {\n      appendChild,\n      insertBefore,\n      removeChild,\n      replaceChild\n    } = elm;\n    const originalNodeValueDescriptor = getPropertyDescriptor(elm, 'nodeValue');\n    const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n    const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n    assign$1(descriptors, {\n      appendChild: generateDataDescriptor({\n        value(aChild) {\n          logMissingPortalError('appendChild', 'method');\n          return appendChild.call(this, aChild);\n        }\n\n      }),\n      insertBefore: generateDataDescriptor({\n        value(newNode, referenceNode) {\n          if (!isDomMutationAllowed) {\n            logMissingPortalError('insertBefore', 'method');\n          }\n\n          return insertBefore.call(this, newNode, referenceNode);\n        }\n\n      }),\n      removeChild: generateDataDescriptor({\n        value(aChild) {\n          if (!isDomMutationAllowed) {\n            logMissingPortalError('removeChild', 'method');\n          }\n\n          return removeChild.call(this, aChild);\n        }\n\n      }),\n      replaceChild: generateDataDescriptor({\n        value(newChild, oldChild) {\n          logMissingPortalError('replaceChild', 'method');\n          return replaceChild.call(this, newChild, oldChild);\n        }\n\n      }),\n      nodeValue: generateAccessorDescriptor({\n        get() {\n          return originalNodeValueDescriptor.get.call(this);\n        },\n\n        set(value) {\n          if (!isDomMutationAllowed) {\n            logMissingPortalError('nodeValue', 'property');\n          }\n\n          originalNodeValueDescriptor.set.call(this, value);\n        }\n\n      }),\n      textContent: generateAccessorDescriptor({\n        get() {\n          return originalTextContentDescriptor.get.call(this);\n        },\n\n        set(value) {\n          logMissingPortalError('textContent', 'property');\n          originalTextContentDescriptor.set.call(this, value);\n        }\n\n      }),\n      innerHTML: generateAccessorDescriptor({\n        get() {\n          return originalInnerHTMLDescriptor.get.call(this);\n        },\n\n        set(value) {\n          logMissingPortalError('innerHTML', 'property');\n          return originalInnerHTMLDescriptor.set.call(this, value);\n        }\n\n      })\n    });\n  }\n\n  defineProperties$1(elm, descriptors);\n}\n\nfunction getShadowRootRestrictionsDescriptors(sr) {\n  if (false) {} // Disallowing properties in dev mode only to avoid people doing the wrong\n  // thing when using the real shadow root, because if that's the case,\n  // the component will not work when running with synthetic shadow.\n\n\n  const originalAddEventListener = sr.addEventListener;\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(sr, 'innerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(sr, 'textContent');\n  return {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on ShadowRoot.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on ShadowRoot.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into its Component's shadow root\n        if (!isUndefined$1(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    })\n  };\n} // Custom Elements Restrictions:\n// -----------------------------\n\n\nfunction getCustomElementRestrictionsDescriptors(elm) {\n  if (false) {}\n\n  const originalAddEventListener = elm.addEventListener;\n  const originalInnerHTMLDescriptor = getPropertyDescriptor(elm, 'innerHTML');\n  const originalOuterHTMLDescriptor = getPropertyDescriptor(elm, 'outerHTML');\n  const originalTextContentDescriptor = getPropertyDescriptor(elm, 'textContent');\n  return {\n    innerHTML: generateAccessorDescriptor({\n      get() {\n        return originalInnerHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set innerHTML on HTMLElement.`);\n      }\n\n    }),\n    outerHTML: generateAccessorDescriptor({\n      get() {\n        return originalOuterHTMLDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set outerHTML on HTMLElement.`);\n      }\n\n    }),\n    textContent: generateAccessorDescriptor({\n      get() {\n        return originalTextContentDescriptor.get.call(this);\n      },\n\n      set(_value) {\n        throw new TypeError(`Invalid attempt to set textContent on HTMLElement.`);\n      }\n\n    }),\n    addEventListener: generateDataDescriptor({\n      value(type, listener, options) {\n        // TODO [#420]: this is triggered when the component author attempts to add a listener\n        // programmatically into a lighting element node\n        if (!isUndefined$1(options)) {\n          logError('The `addEventListener` method in `LightningElement` does not support any options.', getAssociatedVMIfPresent(this));\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalAddEventListener.apply(this, arguments);\n      }\n\n    })\n  };\n}\n\nfunction getComponentRestrictionsDescriptors() {\n  if (false) {}\n\n  return {\n    tagName: generateAccessorDescriptor({\n      get() {\n        throw new Error(`Usage of property \\`tagName\\` is disallowed because the component itself does` + ` not know which tagName will be used to create the element, therefore writing` + ` code that check for that value is error prone.`);\n      },\n\n      configurable: true,\n      enumerable: false\n    })\n  };\n}\n\nfunction getLightningElementPrototypeRestrictionsDescriptors(proto) {\n  if (false) {}\n\n  const originalDispatchEvent = proto.dispatchEvent;\n  const descriptors = {\n    dispatchEvent: generateDataDescriptor({\n      value(event) {\n        const vm = getAssociatedVM(this);\n\n        if (!isNull$1(event) && isObject$2(event)) {\n          const {\n            type\n          } = event;\n\n          if (!/^[a-z][a-z0-9_]*$/.test(type)) {\n            logError(`Invalid event type \"${type}\" dispatched in element ${getComponentTag(vm)}.` + ` Event name must start with a lowercase letter and followed only lowercase` + ` letters, numbers, and underscores`, vm);\n          }\n        } // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n\n\n        return originalDispatchEvent.apply(this, arguments);\n      }\n\n    })\n  };\n  forEach$1.call(getOwnPropertyNames$1(globalHTMLProperties), propName => {\n    if (propName in proto) {\n      return; // no need to redefine something that we are already exposing\n    }\n\n    descriptors[propName] = generateAccessorDescriptor({\n      get() {\n        const {\n          error,\n          attribute\n        } = globalHTMLProperties[propName];\n        const msg = [];\n        msg.push(`Accessing the global HTML property \"${propName}\" is disabled.`);\n\n        if (error) {\n          msg.push(error);\n        } else if (attribute) {\n          msg.push(`Instead access it via \\`this.getAttribute(\"${attribute}\")\\`.`);\n        }\n\n        logError(msg.join('\\n'), getAssociatedVM(this));\n      },\n\n      set() {\n        const {\n          readOnly\n        } = globalHTMLProperties[propName];\n\n        if (readOnly) {\n          logError(`The global HTML property \\`${propName}\\` is read-only.`, getAssociatedVM(this));\n        }\n      }\n\n    });\n  });\n  return descriptors;\n} // This routine will prevent access to certain properties on a shadow root instance to guarantee\n// that all components will work fine in IE11 and other browsers without shadow dom support.\n\n\nfunction patchShadowRootWithRestrictions(sr) {\n  defineProperties$1(sr, getShadowRootRestrictionsDescriptors(sr));\n}\nfunction patchCustomElementWithRestrictions(elm) {\n  const restrictionsDescriptors = getCustomElementRestrictionsDescriptors(elm);\n  const elmProto = getPrototypeOf$1(elm);\n  setPrototypeOf$1(elm, create$1(elmProto, restrictionsDescriptors));\n}\nfunction patchComponentWithRestrictions(cmp) {\n  defineProperties$1(cmp, getComponentRestrictionsDescriptors());\n}\nfunction patchLightningElementPrototypeWithRestrictions(proto) {\n  defineProperties$1(proto, getLightningElementPrototypeRestrictionsDescriptors(proto));\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// This is a temporary workaround to get the @lwc/engine-server to evaluate in node without having\n// to inject at runtime.\nconst HTMLElementConstructor = typeof HTMLElement !== 'undefined' ? HTMLElement : function () {};\nconst HTMLElementPrototype = HTMLElementConstructor.prototype;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This is a descriptor map that contains\n * all standard properties that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base HTML Element and\n * Base Lightning Element should support.\n */\n\nconst HTMLElementOriginalDescriptors = create$1(null);\nforEach$1.call(keys$1(AriaPropNameToAttrNameMap$1), propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, some properties are on Element.prototype instead of HTMLElement, just to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);\n\n  if (!isUndefined$1(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\nforEach$1.call(defaultDefHTMLPropertyNames, propName => {\n  // Note: intentionally using our in-house getPropertyDescriptor instead of getOwnPropertyDescriptor here because\n  // in IE11, id property is on Element.prototype instead of HTMLElement, and we suspect that more will fall into\n  // this category, so, better to be sure.\n  const descriptor = getPropertyDescriptor(HTMLElementPrototype, propName);\n\n  if (!isUndefined$1(descriptor)) {\n    HTMLElementOriginalDescriptors[propName] = descriptor;\n  }\n});\n\n/**\n * Copyright (C) 2017 salesforce.com, inc.\n */\nconst {\n  isArray: isArray$1$1\n} = Array;\nconst {\n  getPrototypeOf: getPrototypeOf$1$1,\n  create: ObjectCreate,\n  defineProperty: ObjectDefineProperty,\n  defineProperties: ObjectDefineProperties,\n  isExtensible,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$1$1,\n  getOwnPropertyNames: getOwnPropertyNames$1$1,\n  getOwnPropertySymbols,\n  preventExtensions,\n  hasOwnProperty: hasOwnProperty$1$1\n} = Object;\nconst {\n  push: ArrayPush$2,\n  concat: ArrayConcat,\n  map: ArrayMap$1$1\n} = Array.prototype;\nconst OtS$1$1 = {}.toString;\n\nfunction toString$1$1(obj) {\n  if (obj && obj.toString) {\n    return obj.toString();\n  } else if (typeof obj === 'object') {\n    return OtS$1$1.call(obj);\n  } else {\n    return obj + '';\n  }\n}\n\nfunction isUndefined$2(obj) {\n  return obj === undefined;\n}\n\nfunction isFunction$1$1(obj) {\n  return typeof obj === 'function';\n}\n\nconst proxyToValueMap = new WeakMap();\n\nfunction registerProxy(proxy, value) {\n  proxyToValueMap.set(proxy, value);\n}\n\nconst unwrap = replicaOrAny => proxyToValueMap.get(replicaOrAny) || replicaOrAny;\n\nclass BaseProxyHandler {\n  constructor(membrane, value) {\n    this.originalTarget = value;\n    this.membrane = membrane;\n  } // Shared utility methods\n\n\n  wrapDescriptor(descriptor) {\n    if (hasOwnProperty$1$1.call(descriptor, 'value')) {\n      descriptor.value = this.wrapValue(descriptor.value);\n    } else {\n      const {\n        set: originalSet,\n        get: originalGet\n      } = descriptor;\n\n      if (!isUndefined$2(originalGet)) {\n        descriptor.get = this.wrapGetter(originalGet);\n      }\n\n      if (!isUndefined$2(originalSet)) {\n        descriptor.set = this.wrapSetter(originalSet);\n      }\n    }\n\n    return descriptor;\n  }\n\n  copyDescriptorIntoShadowTarget(shadowTarget, key) {\n    const {\n      originalTarget\n    } = this; // Note: a property might get defined multiple times in the shadowTarget\n    //       but it will always be compatible with the previous descriptor\n    //       to preserve the object invariants, which makes these lines safe.\n\n    const originalDescriptor = getOwnPropertyDescriptor$1$1(originalTarget, key);\n\n    if (!isUndefined$2(originalDescriptor)) {\n      const wrappedDesc = this.wrapDescriptor(originalDescriptor);\n      ObjectDefineProperty(shadowTarget, key, wrappedDesc);\n    }\n  }\n\n  lockShadowTarget(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    const targetKeys = ArrayConcat.call(getOwnPropertyNames$1$1(originalTarget), getOwnPropertySymbols(originalTarget));\n    targetKeys.forEach(key => {\n      this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n    });\n    const {\n      membrane: {\n        tagPropertyKey\n      }\n    } = this;\n\n    if (!isUndefined$2(tagPropertyKey) && !hasOwnProperty$1$1.call(shadowTarget, tagPropertyKey)) {\n      ObjectDefineProperty(shadowTarget, tagPropertyKey, ObjectCreate(null));\n    }\n\n    preventExtensions(shadowTarget);\n  } // Shared Traps\n\n\n  apply(shadowTarget, thisArg, argArray) {\n    /* No op */\n  }\n\n  construct(shadowTarget, argArray, newTarget) {\n    /* No op */\n  }\n\n  get(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved\n      }\n    } = this;\n    const value = originalTarget[key];\n    valueObserved(originalTarget, key);\n    return this.wrapValue(value);\n  }\n\n  has(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        tagPropertyKey,\n        valueObserved\n      }\n    } = this;\n    valueObserved(originalTarget, key); // since key is never going to be undefined, and tagPropertyKey might be undefined\n    // we can simply compare them as the second part of the condition.\n\n    return key in originalTarget || key === tagPropertyKey;\n  }\n\n  ownKeys(shadowTarget) {\n    const {\n      originalTarget,\n      membrane: {\n        tagPropertyKey\n      }\n    } = this; // if the membrane tag key exists and it is not in the original target, we add it to the keys.\n\n    const keys = isUndefined$2(tagPropertyKey) || hasOwnProperty$1$1.call(originalTarget, tagPropertyKey) ? [] : [tagPropertyKey]; // small perf optimization using push instead of concat to avoid creating an extra array\n\n    ArrayPush$2.apply(keys, getOwnPropertyNames$1$1(originalTarget));\n    ArrayPush$2.apply(keys, getOwnPropertySymbols(originalTarget));\n    return keys;\n  }\n\n  isExtensible(shadowTarget) {\n    const {\n      originalTarget\n    } = this; // optimization to avoid attempting to lock down the shadowTarget multiple times\n\n    if (!isExtensible(shadowTarget)) {\n      return false; // was already locked down\n    }\n\n    if (!isExtensible(originalTarget)) {\n      this.lockShadowTarget(shadowTarget);\n      return false;\n    }\n\n    return true;\n  }\n\n  getPrototypeOf(shadowTarget) {\n    const {\n      originalTarget\n    } = this;\n    return getPrototypeOf$1$1(originalTarget);\n  }\n\n  getOwnPropertyDescriptor(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueObserved,\n        tagPropertyKey\n      }\n    } = this; // keys looked up via getOwnPropertyDescriptor need to be reactive\n\n    valueObserved(originalTarget, key);\n    let desc = getOwnPropertyDescriptor$1$1(originalTarget, key);\n\n    if (isUndefined$2(desc)) {\n      if (key !== tagPropertyKey) {\n        return undefined;\n      } // if the key is the membrane tag key, and is not in the original target,\n      // we produce a synthetic descriptor and install it on the shadow target\n\n\n      desc = {\n        value: undefined,\n        writable: false,\n        configurable: false,\n        enumerable: false\n      };\n      ObjectDefineProperty(shadowTarget, tagPropertyKey, desc);\n      return desc;\n    }\n\n    if (desc.configurable === false) {\n      // updating the descriptor to non-configurable on the shadow\n      this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n    } // Note: by accessing the descriptor, the key is marked as observed\n    // but access to the value, setter or getter (if available) cannot observe\n    // mutations, just like regular methods, in which case we just do nothing.\n\n\n    return this.wrapDescriptor(desc);\n  }\n\n}\n\nconst getterMap = new WeakMap();\nconst setterMap = new WeakMap();\nconst reverseGetterMap = new WeakMap();\nconst reverseSetterMap = new WeakMap();\n\nclass ReactiveProxyHandler extends BaseProxyHandler {\n  wrapValue(value) {\n    return this.membrane.getProxy(value);\n  }\n\n  wrapGetter(originalGet) {\n    const wrappedGetter = getterMap.get(originalGet);\n\n    if (!isUndefined$2(wrappedGetter)) {\n      return wrappedGetter;\n    }\n\n    const handler = this;\n\n    const get = function () {\n      // invoking the original getter with the original target\n      return handler.wrapValue(originalGet.call(unwrap(this)));\n    };\n\n    getterMap.set(originalGet, get);\n    reverseGetterMap.set(get, originalGet);\n    return get;\n  }\n\n  wrapSetter(originalSet) {\n    const wrappedSetter = setterMap.get(originalSet);\n\n    if (!isUndefined$2(wrappedSetter)) {\n      return wrappedSetter;\n    }\n\n    const set = function (v) {\n      // invoking the original setter with the original target\n      originalSet.call(unwrap(this), unwrap(v));\n    };\n\n    setterMap.set(originalSet, set);\n    reverseSetterMap.set(set, originalSet);\n    return set;\n  }\n\n  unwrapDescriptor(descriptor) {\n    if (hasOwnProperty$1$1.call(descriptor, 'value')) {\n      // dealing with a data descriptor\n      descriptor.value = unwrap(descriptor.value);\n    } else {\n      const {\n        set,\n        get\n      } = descriptor;\n\n      if (!isUndefined$2(get)) {\n        descriptor.get = this.unwrapGetter(get);\n      }\n\n      if (!isUndefined$2(set)) {\n        descriptor.set = this.unwrapSetter(set);\n      }\n    }\n\n    return descriptor;\n  }\n\n  unwrapGetter(redGet) {\n    const reverseGetter = reverseGetterMap.get(redGet);\n\n    if (!isUndefined$2(reverseGetter)) {\n      return reverseGetter;\n    }\n\n    const handler = this;\n\n    const get = function () {\n      // invoking the red getter with the proxy of this\n      return unwrap(redGet.call(handler.wrapValue(this)));\n    };\n\n    getterMap.set(get, redGet);\n    reverseGetterMap.set(redGet, get);\n    return get;\n  }\n\n  unwrapSetter(redSet) {\n    const reverseSetter = reverseSetterMap.get(redSet);\n\n    if (!isUndefined$2(reverseSetter)) {\n      return reverseSetter;\n    }\n\n    const handler = this;\n\n    const set = function (v) {\n      // invoking the red setter with the proxy of this\n      redSet.call(handler.wrapValue(this), handler.wrapValue(v));\n    };\n\n    setterMap.set(set, redSet);\n    reverseSetterMap.set(redSet, set);\n    return set;\n  }\n\n  set(shadowTarget, key, value) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    const oldValue = originalTarget[key];\n\n    if (oldValue !== value) {\n      originalTarget[key] = value;\n      valueMutated(originalTarget, key);\n    } else if (key === 'length' && isArray$1$1(originalTarget)) {\n      // fix for issue #236: push will add the new index, and by the time length\n      // is updated, the internal length is already equal to the new length value\n      // therefore, the oldValue is equal to the value. This is the forking logic\n      // to support this use case.\n      valueMutated(originalTarget, key);\n    }\n\n    return true;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated\n      }\n    } = this;\n    delete originalTarget[key];\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (true) {\n      throw new Error(`Invalid setPrototypeOf invocation for reactive proxy ${toString$1$1(this.originalTarget)}. Prototype of reactive objects cannot be changed.`);\n    }\n  }\n\n  preventExtensions(shadowTarget) {\n    if (isExtensible(shadowTarget)) {\n      const {\n        originalTarget\n      } = this;\n      preventExtensions(originalTarget); // if the originalTarget is a proxy itself, it might reject\n      // the preventExtension call, in which case we should not attempt to lock down\n      // the shadow target.\n\n      if (isExtensible(originalTarget)) {\n        return false;\n      }\n\n      this.lockShadowTarget(shadowTarget);\n    }\n\n    return true;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    const {\n      originalTarget,\n      membrane: {\n        valueMutated,\n        tagPropertyKey\n      }\n    } = this;\n\n    if (key === tagPropertyKey && !hasOwnProperty$1$1.call(originalTarget, key)) {\n      // To avoid leaking the membrane tag property into the original target, we must\n      // be sure that the original target doesn't have yet.\n      // NOTE: we do not return false here because Object.freeze and equivalent operations\n      // will attempt to set the descriptor to the same value, and expect no to throw. This\n      // is an small compromise for the sake of not having to diff the descriptors.\n      return true;\n    }\n\n    ObjectDefineProperty(originalTarget, key, this.unwrapDescriptor(descriptor)); // intentionally testing if false since it could be undefined as well\n\n    if (descriptor.configurable === false) {\n      this.copyDescriptorIntoShadowTarget(shadowTarget, key);\n    }\n\n    valueMutated(originalTarget, key);\n    return true;\n  }\n\n}\n\nconst getterMap$1 = new WeakMap();\nconst setterMap$1 = new WeakMap();\n\nclass ReadOnlyHandler extends BaseProxyHandler {\n  wrapValue(value) {\n    return this.membrane.getReadOnlyProxy(value);\n  }\n\n  wrapGetter(originalGet) {\n    const wrappedGetter = getterMap$1.get(originalGet);\n\n    if (!isUndefined$2(wrappedGetter)) {\n      return wrappedGetter;\n    }\n\n    const handler = this;\n\n    const get = function () {\n      // invoking the original getter with the original target\n      return handler.wrapValue(originalGet.call(unwrap(this)));\n    };\n\n    getterMap$1.set(originalGet, get);\n    return get;\n  }\n\n  wrapSetter(originalSet) {\n    const wrappedSetter = setterMap$1.get(originalSet);\n\n    if (!isUndefined$2(wrappedSetter)) {\n      return wrappedSetter;\n    }\n\n    const handler = this;\n\n    const set = function (v) {\n      if (true) {\n        const {\n          originalTarget\n        } = handler;\n        throw new Error(`Invalid mutation: Cannot invoke a setter on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n      }\n    };\n\n    setterMap$1.set(originalSet, set);\n    return set;\n  }\n\n  set(shadowTarget, key, value) {\n    if (true) {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot set \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  deleteProperty(shadowTarget, key) {\n    if (true) {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot delete \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n  setPrototypeOf(shadowTarget, prototype) {\n    if (true) {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid prototype mutation: Cannot set prototype on \"${originalTarget}\". \"${originalTarget}\" prototype is read-only.`);\n    }\n  }\n\n  preventExtensions(shadowTarget) {\n    if (true) {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot preventExtensions on ${originalTarget}\". \"${originalTarget} is read-only.`);\n    }\n\n    return false;\n  }\n\n  defineProperty(shadowTarget, key, descriptor) {\n    if (true) {\n      const {\n        originalTarget\n      } = this;\n      throw new Error(`Invalid mutation: Cannot defineProperty \"${key.toString()}\" on \"${originalTarget}\". \"${originalTarget}\" is read-only.`);\n    }\n\n    return false;\n  }\n\n}\n\nfunction extract(objectOrArray) {\n  if (isArray$1$1(objectOrArray)) {\n    return objectOrArray.map(item => {\n      const original = unwrap(item);\n\n      if (original !== item) {\n        return extract(original);\n      }\n\n      return item;\n    });\n  }\n\n  const obj = ObjectCreate(getPrototypeOf$1$1(objectOrArray));\n  const names = getOwnPropertyNames$1$1(objectOrArray);\n  return ArrayConcat.call(names, getOwnPropertySymbols(objectOrArray)).reduce((seed, key) => {\n    const item = objectOrArray[key];\n    const original = unwrap(item);\n\n    if (original !== item) {\n      seed[key] = extract(original);\n    } else {\n      seed[key] = item;\n    }\n\n    return seed;\n  }, obj);\n}\n\nconst formatter = {\n  header: plainOrProxy => {\n    const originalTarget = unwrap(plainOrProxy); // if originalTarget is falsy or not unwrappable, exit\n\n    if (!originalTarget || originalTarget === plainOrProxy) {\n      return null;\n    }\n\n    const obj = extract(plainOrProxy);\n    return ['object', {\n      object: obj\n    }];\n  },\n  hasBody: () => {\n    return false;\n  },\n  body: () => {\n    return null;\n  }\n}; // Inspired from paulmillr/es6-shim\n// https://github.com/paulmillr/es6-shim/blob/master/es6-shim.js#L176-L185\n\nfunction getGlobal() {\n  // the only reliable means to get the global object is `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof __webpack_require__.g !== 'undefined') {\n    return __webpack_require__.g;\n  } // Gracefully degrade if not able to locate the global object\n\n\n  return {};\n}\n\nfunction init() {\n  if (false) {}\n\n  const global = getGlobal(); // Custom Formatter for Dev Tools. To enable this, open Chrome Dev Tools\n  //  - Go to Settings,\n  //  - Under console, select \"Enable custom formatters\"\n  // For more information, https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview\n\n  const devtoolsFormatters = global.devtoolsFormatters || [];\n  ArrayPush$2.call(devtoolsFormatters, formatter);\n  global.devtoolsFormatters = devtoolsFormatters;\n}\n\nif (true) {\n  init();\n}\n\nconst ObjectDotPrototype = Object.prototype;\n\nfunction defaultValueIsObservable(value) {\n  // intentionally checking for null\n  if (value === null) {\n    return false;\n  } // treat all non-object types, including undefined, as non-observable values\n\n\n  if (typeof value !== 'object') {\n    return false;\n  }\n\n  if (isArray$1$1(value)) {\n    return true;\n  }\n\n  const proto = getPrototypeOf$1$1(value);\n  return proto === ObjectDotPrototype || proto === null || getPrototypeOf$1$1(proto) === null;\n}\n\nconst defaultValueObserved = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueMutated = (obj, key) => {\n  /* do nothing */\n};\n\nconst defaultValueDistortion = value => value;\n\nfunction createShadowTarget(value) {\n  return isArray$1$1(value) ? [] : {};\n}\n\nclass ReactiveMembrane {\n  constructor(options) {\n    this.valueDistortion = defaultValueDistortion;\n    this.valueMutated = defaultValueMutated;\n    this.valueObserved = defaultValueObserved;\n    this.valueIsObservable = defaultValueIsObservable;\n    this.objectGraph = new WeakMap();\n\n    if (!isUndefined$2(options)) {\n      const {\n        valueDistortion,\n        valueMutated,\n        valueObserved,\n        valueIsObservable,\n        tagPropertyKey\n      } = options;\n      this.valueDistortion = isFunction$1$1(valueDistortion) ? valueDistortion : defaultValueDistortion;\n      this.valueMutated = isFunction$1$1(valueMutated) ? valueMutated : defaultValueMutated;\n      this.valueObserved = isFunction$1$1(valueObserved) ? valueObserved : defaultValueObserved;\n      this.valueIsObservable = isFunction$1$1(valueIsObservable) ? valueIsObservable : defaultValueIsObservable;\n      this.tagPropertyKey = tagPropertyKey;\n    }\n  }\n\n  getProxy(value) {\n    const unwrappedValue = unwrap(value);\n    const distorted = this.valueDistortion(unwrappedValue);\n\n    if (this.valueIsObservable(distorted)) {\n      const o = this.getReactiveState(unwrappedValue, distorted); // when trying to extract the writable version of a readonly\n      // we return the readonly.\n\n      return o.readOnly === value ? value : o.reactive;\n    }\n\n    return distorted;\n  }\n\n  getReadOnlyProxy(value) {\n    value = unwrap(value);\n    const distorted = this.valueDistortion(value);\n\n    if (this.valueIsObservable(distorted)) {\n      return this.getReactiveState(value, distorted).readOnly;\n    }\n\n    return distorted;\n  }\n\n  unwrapProxy(p) {\n    return unwrap(p);\n  }\n\n  getReactiveState(value, distortedValue) {\n    const {\n      objectGraph\n    } = this;\n    let reactiveState = objectGraph.get(distortedValue);\n\n    if (reactiveState) {\n      return reactiveState;\n    }\n\n    const membrane = this;\n    reactiveState = {\n      get reactive() {\n        const reactiveHandler = new ReactiveProxyHandler(membrane, distortedValue); // caching the reactive proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), reactiveHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'reactive', {\n          value: proxy\n        });\n        return proxy;\n      },\n\n      get readOnly() {\n        const readOnlyHandler = new ReadOnlyHandler(membrane, distortedValue); // caching the readOnly proxy after the first time it is accessed\n\n        const proxy = new Proxy(createShadowTarget(distortedValue), readOnlyHandler);\n        registerProxy(proxy, value);\n        ObjectDefineProperty(this, 'readOnly', {\n          value: proxy\n        });\n        return proxy;\n      }\n\n    };\n    objectGraph.set(distortedValue, reactiveState);\n    return reactiveState;\n  }\n\n}\n/** version: 1.0.0 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst lockerLivePropertyKey = Symbol.for('@@lockerLiveValue');\n\nfunction valueDistortion(value) {\n  return value;\n}\n\nconst reactiveMembrane = new ReactiveMembrane({\n  valueObserved,\n  valueMutated,\n  valueDistortion,\n  tagPropertyKey: lockerLivePropertyKey\n});\n/**\n * EXPERIMENTAL: This function implements an unwrap mechanism that\n * works for observable membrane objects. This API is subject to\n * change or being removed.\n */\n\nconst unwrap$1 = function (value) {\n  const unwrapped = reactiveMembrane.unwrapProxy(value);\n\n  if (unwrapped !== value) {\n    // if value is a proxy, unwrap to access original value and apply distortion\n    return valueDistortion(unwrapped);\n  }\n\n  return value;\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This operation is called with a descriptor of an standard html property\n * that a Custom Element can support (including AOM properties), which\n * determines what kind of capabilities the Base Lightning Element should support. When producing the new descriptors\n * for the Base Lightning Element, it also include the reactivity bit, so the standard property is reactive.\n */\n\nfunction createBridgeToElementDescriptor(propName, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction$1(get)) {\n    if (true) {\n      assert$1.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard getter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  if (!isFunction$1(set)) {\n    if (true) {\n      assert$1.fail(`Detected invalid public property descriptor for HTMLElement.prototype.${propName} definition. Missing the standard setter.`);\n    }\n\n    throw new TypeError();\n  }\n\n  return {\n    enumerable,\n    configurable,\n\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (true) {\n          logError(`The value of property \\`${propName}\\` can't be read from the constructor because the owner component hasn't set the value yet. Instead, use the constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      componentValueObserved(vm, propName);\n      return get.call(vm.elm);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (true) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert$1.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${propName}`);\n        assert$1.invariant(!isUpdatingTemplate, `When updating the template of ${vmBeingRendered}, one of the accessors used by the template has side effects on the state of ${vm}.${propName}`);\n        assert$1.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n        assert$1.invariant(!isObject$2(newValue) || isNull$1(newValue), `Invalid value \"${newValue}\" for \"${propName}\" of ${vm}. Value cannot be an object, must be a primitive value.`);\n      }\n\n      if (newValue !== vm.cmpProps[propName]) {\n        vm.cmpProps[propName] = newValue;\n        componentValueMutated(vm, propName);\n      }\n\n      return set.call(vm.elm, newValue);\n    }\n\n  };\n}\n/**\n * This class is the base class for any LWC element.\n * Some elements directly extends this class, others implement it via inheritance.\n **/\n\n\nfunction BaseLightningElementConstructor() {\n  var _a; // This should be as performant as possible, while any initialization should be done lazily\n\n\n  if (isNull$1(vmBeingConstructed)) {\n    throw new ReferenceError('Illegal constructor');\n  }\n\n  const vm = vmBeingConstructed;\n  const {\n    elm,\n    mode,\n    renderer,\n    def: {\n      ctor,\n      bridge\n    }\n  } = vm;\n\n  if (true) {\n    (_a = renderer.assertInstanceOfHTMLElement) === null || _a === void 0 ? void 0 : _a.call(renderer, vm.elm, `Component creation requires a DOM element to be associated to ${vm}.`);\n  }\n\n  const component = this;\n  setPrototypeOf$1(elm, bridge.prototype);\n  const cmpRoot = renderer.attachShadow(elm, {\n    mode,\n    delegatesFocus: !!ctor.delegatesFocus,\n    '$$lwc-synthetic-mode$$': true\n  });\n  vm.component = this;\n  vm.cmpRoot = cmpRoot; // Locker hooks assignment. When the LWC engine run with Locker, Locker intercepts all the new\n  // component creation and passes hooks to instrument all the component interactions with the\n  // engine. We are intentionally hiding this argument from the formal API of LightningElement\n  // because we don't want folks to know about it just yet.\n\n  if (arguments.length === 1) {\n    const {\n      callHook,\n      setHook,\n      getHook\n    } = arguments[0];\n    vm.callHook = callHook;\n    vm.setHook = setHook;\n    vm.getHook = getHook;\n  } // Making the component instance a live value when using Locker to support expandos.\n\n\n  defineProperty$1(component, lockerLivePropertyKey, EmptyObject); // Linking elm, shadow root and component with the VM.\n\n  associateVM(component, vm);\n  associateVM(cmpRoot, vm);\n  associateVM(elm, vm); // Adding extra guard rails in DEV mode.\n\n  if (true) {\n    patchCustomElementWithRestrictions(elm);\n    patchComponentWithRestrictions(component);\n    patchShadowRootWithRestrictions(cmpRoot);\n  }\n\n  return this;\n}\n\nBaseLightningElementConstructor.prototype = {\n  constructor: BaseLightningElementConstructor,\n\n  dispatchEvent(event) {\n    const {\n      elm,\n      renderer: {\n        dispatchEvent\n      }\n    } = getAssociatedVM(this);\n    return dispatchEvent(elm, event);\n  },\n\n  addEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        addEventListener\n      }\n    } = vm;\n\n    if (true) {\n      const vmBeingRendered = getVMBeingRendered();\n      assert$1.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert$1.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm} by adding an event listener for \"${type}\".`);\n      assert$1.invariant(isFunction$1(listener), `Invalid second argument for this.addEventListener() in ${vm} for event \"${type}\". Expected an EventListener but received ${listener}.`);\n    }\n\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    addEventListener(elm, type, wrappedListener, options);\n  },\n\n  removeEventListener(type, listener, options) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        removeEventListener\n      }\n    } = vm;\n    const wrappedListener = getWrappedComponentsListener(vm, listener);\n    removeEventListener(elm, type, wrappedListener, options);\n  },\n\n  hasAttribute(name) {\n    const {\n      elm,\n      renderer: {\n        getAttribute\n      }\n    } = getAssociatedVM(this);\n    return !isNull$1(getAttribute(elm, name));\n  },\n\n  hasAttributeNS(namespace, name) {\n    const {\n      elm,\n      renderer: {\n        getAttribute\n      }\n    } = getAssociatedVM(this);\n    return !isNull$1(getAttribute(elm, name, namespace));\n  },\n\n  removeAttribute(name) {\n    const {\n      elm,\n      renderer: {\n        removeAttribute\n      }\n    } = getAssociatedVM(this);\n    unlockAttribute(elm, name);\n    removeAttribute(elm, name);\n    lockAttribute();\n  },\n\n  removeAttributeNS(namespace, name) {\n    const {\n      elm,\n      renderer: {\n        removeAttribute\n      }\n    } = getAssociatedVM(this);\n    unlockAttribute(elm, name);\n    removeAttribute(elm, name, namespace);\n    lockAttribute();\n  },\n\n  getAttribute(name) {\n    const {\n      elm,\n      renderer: {\n        getAttribute\n      }\n    } = getAssociatedVM(this);\n    return getAttribute(elm, name);\n  },\n\n  getAttributeNS(namespace, name) {\n    const {\n      elm,\n      renderer: {\n        getAttribute\n      }\n    } = getAssociatedVM(this);\n    return getAttribute(elm, name, namespace);\n  },\n\n  setAttribute(name, value) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        setAttribute\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, name);\n    setAttribute(elm, name, value);\n    lockAttribute();\n  },\n\n  setAttributeNS(namespace, name, value) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        setAttribute\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `Failed to construct '${getComponentTag(vm)}': The result must not have attributes.`);\n    }\n\n    unlockAttribute(elm, name);\n    setAttribute(elm, name, value, namespace);\n    lockAttribute();\n  },\n\n  getBoundingClientRect() {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        getBoundingClientRect\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `this.getBoundingClientRect() should not be called during the construction of the custom element for ${getComponentTag(vm)} because the element is not yet in the DOM, instead, you can use it in one of the available life-cycle hooks.`);\n    }\n\n    return getBoundingClientRect(elm);\n  },\n\n  querySelector(selectors) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        querySelector\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `this.querySelector() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    return querySelector(elm, selectors);\n  },\n\n  querySelectorAll(selectors) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        querySelectorAll\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `this.querySelectorAll() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    return querySelectorAll(elm, selectors);\n  },\n\n  getElementsByTagName(tagNameOrWildCard) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        getElementsByTagName\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `this.getElementsByTagName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    return getElementsByTagName(elm, tagNameOrWildCard);\n  },\n\n  getElementsByClassName(names) {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        getElementsByClassName\n      }\n    } = vm;\n\n    if (true) {\n      assert$1.isFalse(isBeingConstructed(vm), `this.getElementsByClassName() cannot be called during the construction of the custom element for ${getComponentTag(vm)} because no children has been added to this element yet.`);\n    }\n\n    return getElementsByClassName(elm, names);\n  },\n\n  get isConnected() {\n    const {\n      elm,\n      renderer: {\n        isConnected\n      }\n    } = getAssociatedVM(this);\n    return isConnected(elm);\n  },\n\n  get classList() {\n    const vm = getAssociatedVM(this);\n    const {\n      elm,\n      renderer: {\n        getClassList\n      }\n    } = vm;\n\n    if (true) {\n      // TODO [#1290]: this still fails in dev but works in production, eventually, we should\n      // just throw in all modes\n      assert$1.isFalse(isBeingConstructed(vm), `Failed to construct ${vm}: The result must not have attributes. Adding or tampering with classname in constructor is not allowed in a web component, use connectedCallback() instead.`);\n    }\n\n    return getClassList(elm);\n  },\n\n  get template() {\n    const vm = getAssociatedVM(this);\n    return vm.cmpRoot;\n  },\n\n  get shadowRoot() {\n    // From within the component instance, the shadowRoot is always reported as \"closed\".\n    // Authors should rely on this.template instead.\n    return null;\n  },\n\n  render() {\n    const vm = getAssociatedVM(this);\n    return vm.def.template;\n  },\n\n  toString() {\n    const vm = getAssociatedVM(this);\n    return `[object ${vm.def.name}]`;\n  }\n\n};\nconst lightningBasedDescriptors = create$1(null);\n\nfor (const propName in HTMLElementOriginalDescriptors) {\n  lightningBasedDescriptors[propName] = createBridgeToElementDescriptor(propName, HTMLElementOriginalDescriptors[propName]);\n}\n\ndefineProperties$1(BaseLightningElementConstructor.prototype, lightningBasedDescriptors);\ndefineProperty$1(BaseLightningElementConstructor, 'CustomElementConstructor', {\n  get() {\n    // If required, a runtime-specific implementation must be defined.\n    throw new ReferenceError('The current runtime does not support CustomElementConstructor.');\n  },\n\n  configurable: true\n});\n\nif (true) {\n  patchLightningElementPrototypeWithRestrictions(BaseLightningElementConstructor.prototype);\n} // @ts-ignore\n\n\nconst BaseLightningElement = BaseLightningElementConstructor;\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * @wire decorator to wire fields and methods to a wire adapter in\n * LWC Components. This function implements the internals of this\n * decorator.\n */\n\nfunction wire(_adapter, _config) {\n  if (true) {\n    assert$1.fail('@wire(adapter, config?) may only be used as a decorator.');\n  }\n\n  throw new Error();\n}\nfunction internalWireFieldDecorator(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(value) {\n      const vm = getAssociatedVM(this);\n      /**\n       * Reactivity for wired fields is provided in wiring.\n       * We intentionally add reactivity here since this is just\n       * letting the author to do the wrong thing, but it will keep our\n       * system to be backward compatible.\n       */\n\n      if (value !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = value;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction track(target) {\n  if (arguments.length === 1) {\n    return reactiveMembrane.getProxy(target);\n  }\n\n  if (true) {\n    assert$1.fail(`@track decorator can only be used with one argument to return a trackable object, or as a decorator function.`);\n  }\n\n  throw new Error();\n}\nfunction internalTrackDecorator(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (true) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert$1.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n        assert$1.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n      }\n\n      const reactiveOrAnyValue = reactiveMembrane.getProxy(newValue);\n\n      if (reactiveOrAnyValue !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = reactiveOrAnyValue;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/**\n * Copyright (C) 2018 salesforce.com, inc.\n */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst {\n  assign: assign$1$1,\n  create: create$2,\n  defineProperties: defineProperties$1$1,\n  defineProperty: defineProperty$1$1,\n  freeze: freeze$1$1,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor$2,\n  getOwnPropertyNames: getOwnPropertyNames$2,\n  getPrototypeOf: getPrototypeOf$2,\n  hasOwnProperty: hasOwnProperty$2,\n  isFrozen: isFrozen$1$1,\n  keys: keys$1$1,\n  seal: seal$1$1,\n  setPrototypeOf: setPrototypeOf$1$1\n} = Object;\n\nfunction isUndefined$3(obj) {\n  return obj === undefined;\n}\n\nfunction isTrue$1$1$1(obj) {\n  return obj === true;\n}\n\nfunction isFalse$1$1$1(obj) {\n  return obj === false;\n}\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// Inspired from: https://mathiasbynens.be/notes/globalthis\n\n\nconst _globalThis = /*@__PURE__*/function () {\n  // On recent browsers, `globalThis` is already defined. In this case return it directly.\n  if (typeof globalThis === 'object') {\n    return globalThis;\n  }\n\n  let _globalThis;\n\n  try {\n    // eslint-disable-next-line no-extend-native\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this;\n      },\n      configurable: true\n    }); // __magic__ is undefined in Safari 10 and IE10 and older.\n    // @ts-ignore\n    // eslint-disable-next-line no-undef\n\n    _globalThis = __magic__; // @ts-ignore\n\n    delete Object.prototype.__magic__;\n  } catch (ex) {// In IE8, Object.defineProperty only works on DOM objects.\n  } finally {\n    // If the magic above fails for some reason we assume that we are in a legacy browser.\n    // Assume `window` exists in this case.\n    if (typeof _globalThis === 'undefined') {\n      // @ts-ignore\n      _globalThis = window;\n    }\n  }\n\n  return _globalThis;\n}();\n/** version: 1.17.5 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\n\nif (!_globalThis.lwcRuntimeFlags) {\n  Object.defineProperty(_globalThis, 'lwcRuntimeFlags', {\n    value: create$2(null)\n  });\n}\n\nconst runtimeFlags = _globalThis.lwcRuntimeFlags; // This function is not supported for use within components and is meant for\n// configuring runtime feature flags during app initialization.\n\nfunction setFeatureFlag(name, value) {\n  const isBoolean = isTrue$1$1$1(value) || isFalse$1$1$1(value);\n\n  if (!isBoolean) {\n    const message = `Failed to set the value \"${value}\" for the runtime feature flag \"${name}\". Runtime feature flags can only be set to a boolean value.`;\n\n    if (true) {\n      throw new TypeError(message);\n    } else {}\n  }\n\n  if (isUndefined$3(featureFlagLookup[name])) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to set the value \"${value}\" for the runtime feature flag \"${name}\" because it is undefined. Possible reasons are that 1) it was misspelled or 2) it was removed from the @lwc/features package.`);\n    return;\n  }\n\n  if (true) {\n    // Allow the same flag to be set more than once outside of production to enable testing\n    runtimeFlags[name] = value;\n  } else {}\n} // This function is exposed to components to facilitate testing so we add a\n// check to make sure it is not invoked in production.\n\n\nfunction setFeatureFlagForTest(name, value) {\n  if (true) {\n    return setFeatureFlag(name, value);\n  }\n}\n\nconst featureFlagLookup = {\n  ENABLE_REACTIVE_SETTER: null,\n  ENABLE_HMR: null,\n  // Flag to toggle on/off the enforcement of innerText/outerText shadow dom semantic in elements when using synthetic shadow.\n  // Note: Elements outside the lwc boundary are controlled by the ENABLE_ELEMENT_PATCH flag.\n  DISABLE_INNER_OUTER_TEXT_PATCH: null,\n  // Flags to toggle on/off the enforcement of shadow dom semantic in element/node outside lwc boundary when using synthetic shadow.\n  ENABLE_ELEMENT_PATCH: null,\n  ENABLE_NODE_LIST_PATCH: null,\n  ENABLE_HTML_COLLECTIONS_PATCH: null,\n  ENABLE_NODE_PATCH: null\n};\n/** version: 1.17.5 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction api() {\n  if (true) {\n    assert$1.fail(`@api decorator can only be used as a decorator function.`);\n  }\n\n  throw new Error();\n}\nfunction createPublicPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n\n      if (isBeingConstructed(vm)) {\n        if (true) {\n          logError(`Can’t read the value of property \\`${toString$1(key)}\\` from the constructor because the owner component hasn’t set the value yet. Instead, use the constructor to set a default value for the property.`, vm);\n        }\n\n        return;\n      }\n\n      componentValueObserved(vm, key);\n      return vm.cmpProps[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (true) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert$1.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n        assert$1.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n      }\n\n      vm.cmpProps[key] = newValue;\n      componentValueMutated(vm, key);\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\nclass AccessorReactiveObserver extends ReactiveObserver {\n  constructor(vm, set) {\n    super(() => {\n      if (isFalse$1$1(this.debouncing)) {\n        this.debouncing = true;\n        addCallbackToNextTick(() => {\n          if (isTrue$1$1(this.debouncing)) {\n            const {\n              value\n            } = this;\n            const {\n              isDirty: dirtyStateBeforeSetterCall,\n              component,\n              idx\n            } = vm;\n            set.call(component, value); // de-bouncing after the call to the original setter to prevent\n            // infinity loop if the setter itself is mutating things that\n            // were accessed during the previous invocation.\n\n            this.debouncing = false;\n\n            if (isTrue$1$1(vm.isDirty) && isFalse$1$1(dirtyStateBeforeSetterCall) && idx > 0) {\n              // immediate rehydration due to a setter driven mutation, otherwise\n              // the component will get rendered on the second tick, which it is not\n              // desirable.\n              rerenderVM(vm);\n            }\n          }\n        });\n      }\n    });\n    this.debouncing = false;\n  }\n\n  reset(value) {\n    super.reset();\n    this.debouncing = false;\n\n    if (arguments.length > 0) {\n      this.value = value;\n    }\n  }\n\n}\nfunction createPublicAccessorDescriptor(key, descriptor) {\n  const {\n    get,\n    set,\n    enumerable,\n    configurable\n  } = descriptor;\n\n  if (!isFunction$1(get)) {\n    if (true) {\n      assert$1.invariant(isFunction$1(get), `Invalid compiler output for public accessor ${toString$1(key)} decorated with @api`);\n    }\n\n    throw new Error();\n  }\n\n  return {\n    get() {\n      if (true) {\n        // Assert that the this value is an actual Component with an associated VM.\n        getAssociatedVM(this);\n      }\n\n      return get.call(this);\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (true) {\n        const vmBeingRendered = getVMBeingRendered();\n        assert$1.invariant(!isInvokingRender, `${vmBeingRendered}.render() method has side effects on the state of ${vm}.${toString$1(key)}`);\n        assert$1.invariant(!isUpdatingTemplate, `Updating the template of ${vmBeingRendered} has side effects on the state of ${vm}.${toString$1(key)}`);\n      }\n\n      if (set) {\n        if (runtimeFlags.ENABLE_REACTIVE_SETTER) {\n          let ro = vm.oar[key];\n\n          if (isUndefined$1(ro)) {\n            ro = vm.oar[key] = new AccessorReactiveObserver(vm, set);\n          } // every time we invoke this setter from outside (through this wrapper setter)\n          // we should reset the value and then debounce just in case there is a pending\n          // invocation the next tick that is not longer relevant since the value is changing\n          // from outside.\n\n\n          ro.reset(newValue);\n          ro.observe(() => {\n            set.call(this, newValue);\n          });\n        } else {\n          set.call(this, newValue);\n        }\n      } else if (true) {\n        assert$1.fail(`Invalid attempt to set a new value for property ${toString$1(key)} of ${vm} that does not has a setter decorated with @api.`);\n      }\n    },\n\n    enumerable,\n    configurable\n  };\n}\n\nfunction createObservedFieldPropertyDescriptor(key) {\n  return {\n    get() {\n      const vm = getAssociatedVM(this);\n      componentValueObserved(vm, key);\n      return vm.cmpFields[key];\n    },\n\n    set(newValue) {\n      const vm = getAssociatedVM(this);\n\n      if (newValue !== vm.cmpFields[key]) {\n        vm.cmpFields[key] = newValue;\n        componentValueMutated(vm, key);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nvar PropType;\n\n(function (PropType) {\n  PropType[PropType[\"Field\"] = 0] = \"Field\";\n  PropType[PropType[\"Set\"] = 1] = \"Set\";\n  PropType[PropType[\"Get\"] = 2] = \"Get\";\n  PropType[PropType[\"GetSet\"] = 3] = \"GetSet\";\n})(PropType || (PropType = {}));\n\nfunction getClassDescriptorType(descriptor) {\n  if (isFunction$1(descriptor.value)) {\n    return 'method';\n  } else if (isFunction$1(descriptor.set) || isFunction$1(descriptor.get)) {\n    return 'accessor';\n  } else {\n    return 'field';\n  }\n}\n\nfunction validateObservedField(Ctor, fieldName, descriptor) {\n  if (!isUndefined$1(descriptor)) {\n    const type = getClassDescriptorType(descriptor);\n    assert$1.fail(`Invalid observed ${fieldName} field. Found a duplicate ${type} with the same name.`);\n  }\n}\n\nfunction validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor) {\n  if (!isUndefined$1(descriptor)) {\n    const type = getClassDescriptorType(descriptor);\n    assert$1.fail(`Invalid @track ${fieldName} field. Found a duplicate ${type} with the same name.`);\n  }\n}\n\nfunction validateFieldDecoratedWithWire(Ctor, fieldName, descriptor) {\n  if (!isUndefined$1(descriptor)) {\n    const type = getClassDescriptorType(descriptor);\n    assert$1.fail(`Invalid @wire ${fieldName} field. Found a duplicate ${type} with the same name.`);\n  }\n}\n\nfunction validateMethodDecoratedWithWire(Ctor, methodName, descriptor) {\n  if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse$1$1(descriptor.writable)) {\n    assert$1.fail(`Invalid @wire ${methodName} method.`);\n  }\n}\n\nfunction validateFieldDecoratedWithApi(Ctor, fieldName, descriptor) {\n  if (!isUndefined$1(descriptor)) {\n    const type = getClassDescriptorType(descriptor);\n    assert$1.fail(`Invalid @api ${fieldName} field. Found a duplicate ${type} with the same name.`);\n  }\n}\n\nfunction validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor) {\n  if (isUndefined$1(descriptor)) {\n    assert$1.fail(`Invalid @api get ${fieldName} accessor.`);\n  } else if (isFunction$1(descriptor.set)) {\n    assert$1.isTrue(isFunction$1(descriptor.get), `Missing getter for property ${fieldName} decorated with @api in ${Ctor}. You cannot have a setter without the corresponding getter.`);\n  } else if (!isFunction$1(descriptor.get)) {\n    assert$1.fail(`Missing @api get ${fieldName} accessor.`);\n  }\n}\n\nfunction validateMethodDecoratedWithApi(Ctor, methodName, descriptor) {\n  if (isUndefined$1(descriptor) || !isFunction$1(descriptor.value) || isFalse$1$1(descriptor.writable)) {\n    assert$1.fail(`Invalid @api ${methodName} method.`);\n  }\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by user-land code.\n */\n\n\nfunction registerDecorators(Ctor, meta) {\n  const proto = Ctor.prototype;\n  const {\n    publicProps,\n    publicMethods,\n    wire,\n    track,\n    fields\n  } = meta;\n  const apiMethods = create$1(null);\n  const apiFields = create$1(null);\n  const wiredMethods = create$1(null);\n  const wiredFields = create$1(null);\n  const observedFields = create$1(null);\n  const apiFieldsConfig = create$1(null);\n  let descriptor;\n\n  if (!isUndefined$1(publicProps)) {\n    for (const fieldName in publicProps) {\n      const propConfig = publicProps[fieldName];\n      apiFieldsConfig[fieldName] = propConfig.config;\n      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n\n      if (propConfig.config > 0) {\n        // accessor declaration\n        if (true) {\n          validateAccessorDecoratedWithApi(Ctor, fieldName, descriptor);\n        }\n\n        if (isUndefined$1(descriptor)) {\n          throw new Error();\n        }\n\n        descriptor = createPublicAccessorDescriptor(fieldName, descriptor);\n      } else {\n        // field declaration\n        if (true) {\n          validateFieldDecoratedWithApi(Ctor, fieldName, descriptor);\n        }\n\n        descriptor = createPublicPropertyDescriptor(fieldName);\n      }\n\n      apiFields[fieldName] = descriptor;\n      defineProperty$1(proto, fieldName, descriptor);\n    }\n  }\n\n  if (!isUndefined$1(publicMethods)) {\n    forEach$1.call(publicMethods, methodName => {\n      descriptor = getOwnPropertyDescriptor$1(proto, methodName);\n\n      if (true) {\n        validateMethodDecoratedWithApi(Ctor, methodName, descriptor);\n      }\n\n      if (isUndefined$1(descriptor)) {\n        throw new Error();\n      }\n\n      apiMethods[methodName] = descriptor;\n    });\n  }\n\n  if (!isUndefined$1(wire)) {\n    for (const fieldOrMethodName in wire) {\n      const {\n        adapter,\n        method,\n        config: configCallback,\n        dynamic = []\n      } = wire[fieldOrMethodName];\n      descriptor = getOwnPropertyDescriptor$1(proto, fieldOrMethodName);\n\n      if (method === 1) {\n        if (true) {\n          assert$1.isTrue(adapter, `@wire on method \"${fieldOrMethodName}\": adapter id must be truthy.`);\n          validateMethodDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n        }\n\n        if (isUndefined$1(descriptor)) {\n          throw new Error();\n        }\n\n        wiredMethods[fieldOrMethodName] = descriptor;\n        storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic);\n      } else {\n        if (true) {\n          assert$1.isTrue(adapter, `@wire on field \"${fieldOrMethodName}\": adapter id must be truthy.`);\n          validateFieldDecoratedWithWire(Ctor, fieldOrMethodName, descriptor);\n        }\n\n        descriptor = internalWireFieldDecorator(fieldOrMethodName);\n        wiredFields[fieldOrMethodName] = descriptor;\n        storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic);\n        defineProperty$1(proto, fieldOrMethodName, descriptor);\n      }\n    }\n  }\n\n  if (!isUndefined$1(track)) {\n    for (const fieldName in track) {\n      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n\n      if (true) {\n        validateFieldDecoratedWithTrack(Ctor, fieldName, descriptor);\n      }\n\n      descriptor = internalTrackDecorator(fieldName);\n      defineProperty$1(proto, fieldName, descriptor);\n    }\n  }\n\n  if (!isUndefined$1(fields)) {\n    for (let i = 0, n = fields.length; i < n; i++) {\n      const fieldName = fields[i];\n      descriptor = getOwnPropertyDescriptor$1(proto, fieldName);\n\n      if (true) {\n        validateObservedField(Ctor, fieldName, descriptor);\n      }\n\n      observedFields[fieldName] = createObservedFieldPropertyDescriptor(fieldName);\n    }\n  }\n\n  setDecoratorsMeta(Ctor, {\n    apiMethods,\n    apiFields,\n    apiFieldsConfig,\n    wiredMethods,\n    wiredFields,\n    observedFields\n  });\n  return Ctor;\n}\nconst signedDecoratorToMetaMap = new Map();\n\nfunction setDecoratorsMeta(Ctor, meta) {\n  signedDecoratorToMetaMap.set(Ctor, meta);\n}\n\nconst defaultMeta = {\n  apiMethods: EmptyObject,\n  apiFields: EmptyObject,\n  apiFieldsConfig: EmptyObject,\n  wiredMethods: EmptyObject,\n  wiredFields: EmptyObject,\n  observedFields: EmptyObject\n};\nfunction getDecoratorsMeta(Ctor) {\n  const meta = signedDecoratorToMetaMap.get(Ctor);\n  return isUndefined$1(meta) ? defaultMeta : meta;\n}\n\nconst signedTemplateSet = new Set();\nfunction defaultEmptyTemplate() {\n  return [];\n}\nsignedTemplateSet.add(defaultEmptyTemplate);\nfunction isTemplateRegistered(tpl) {\n  return signedTemplateSet.has(tpl);\n}\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerTemplate(tpl) {\n  signedTemplateSet.add(tpl); // chaining this method as a way to wrap existing\n  // assignment of templates easily, without too much transformation\n\n  return tpl;\n}\n/**\n * EXPERIMENTAL: This function acts like a hook for Lightning Locker\n * Service and other similar libraries to sanitize vulnerable attributes.\n * This API is subject to change or being removed.\n */\n\nfunction sanitizeAttribute(tagName, namespaceUri, attrName, attrValue) {\n  // locker-service patches this function during runtime to sanitize vulnerable attributes.\n  // when ran off-core this function becomes a noop and returns the user authored value.\n  return attrValue;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n// from the element instance, and get the value or set a new value on the component.\n// This means that across different elements, similar names can get the exact same\n// descriptor, so we can cache them:\n\nconst cachedGetterByKey = create$1(null);\nconst cachedSetterByKey = create$1(null);\n\nfunction createGetter(key) {\n  let fn = cachedGetterByKey[key];\n\n  if (isUndefined$1(fn)) {\n    fn = cachedGetterByKey[key] = function () {\n      const vm = getAssociatedVM(this);\n      const {\n        getHook\n      } = vm;\n      return getHook(vm.component, key);\n    };\n  }\n\n  return fn;\n}\n\nfunction createSetter(key) {\n  let fn = cachedSetterByKey[key];\n\n  if (isUndefined$1(fn)) {\n    fn = cachedSetterByKey[key] = function (newValue) {\n      const vm = getAssociatedVM(this);\n      const {\n        setHook\n      } = vm;\n      newValue = reactiveMembrane.getReadOnlyProxy(newValue);\n      setHook(vm.component, key, newValue);\n    };\n  }\n\n  return fn;\n}\n\nfunction createMethodCaller(methodName) {\n  return function () {\n    const vm = getAssociatedVM(this);\n    const {\n      callHook,\n      component\n    } = vm;\n    const fn = component[methodName];\n    return callHook(vm.component, fn, ArraySlice$2.call(arguments));\n  };\n}\n\nfunction createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback) {\n  return function attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) {\n      // Ignore same values.\n      return;\n    }\n\n    const propName = attributeToPropMap[attrName];\n\n    if (isUndefined$1(propName)) {\n      if (!isUndefined$1(superAttributeChangedCallback)) {\n        // delegate unknown attributes to the super.\n        // Typescript does not like it when you treat the `arguments` object as an array\n        // @ts-ignore type-mismatch\n        superAttributeChangedCallback.apply(this, arguments);\n      }\n\n      return;\n    }\n\n    if (!isAttributeLocked(this, attrName)) {\n      // Ignore changes triggered by the engine itself during:\n      // * diffing when public props are attempting to reflect to the DOM\n      // * component via `this.setAttribute()`, should never update the prop\n      // Both cases, the setAttribute call is always wrapped by the unlocking of the\n      // attribute to be changed\n      return;\n    } // Reflect attribute change to the corresponding property when changed from outside.\n\n\n    this[propName] = newValue;\n  };\n}\n\nfunction HTMLBridgeElementFactory(SuperClass, props, methods) {\n  let HTMLBridgeElement;\n  /**\n   * Modern browsers will have all Native Constructors as regular Classes\n   * and must be instantiated with the new keyword. In older browsers,\n   * specifically IE11, those are objects with a prototype property defined,\n   * since they are not supposed to be extended or instantiated with the\n   * new keyword. This forking logic supports both cases, specifically because\n   * wc.ts relies on the construction path of the bridges to create new\n   * fully qualifying web components.\n   */\n\n  if (isFunction$1(SuperClass)) {\n    HTMLBridgeElement = class extends SuperClass {};\n  } else {\n    HTMLBridgeElement = function () {\n      // Bridge classes are not supposed to be instantiated directly in\n      // browsers that do not support web components.\n      throw new TypeError('Illegal constructor');\n    }; // prototype inheritance dance\n\n\n    setPrototypeOf$1(HTMLBridgeElement, SuperClass);\n    setPrototypeOf$1(HTMLBridgeElement.prototype, SuperClass.prototype);\n    defineProperty$1(HTMLBridgeElement.prototype, 'constructor', {\n      writable: true,\n      configurable: true,\n      value: HTMLBridgeElement\n    });\n  } // generating the hash table for attributes to avoid duplicate fields and facilitate validation\n  // and false positives in case of inheritance.\n\n\n  const attributeToPropMap = create$1(null);\n  const {\n    attributeChangedCallback: superAttributeChangedCallback\n  } = SuperClass.prototype;\n  const {\n    observedAttributes: superObservedAttributes = []\n  } = SuperClass;\n  const descriptors = create$1(null); // expose getters and setters for each public props on the new Element Bridge\n\n  for (let i = 0, len = props.length; i < len; i += 1) {\n    const propName = props[i];\n    attributeToPropMap[htmlPropertyToAttribute$1(propName)] = propName;\n    descriptors[propName] = {\n      get: createGetter(propName),\n      set: createSetter(propName),\n      enumerable: true,\n      configurable: true\n    };\n  } // expose public methods as props on the new Element Bridge\n\n\n  for (let i = 0, len = methods.length; i < len; i += 1) {\n    const methodName = methods[i];\n    descriptors[methodName] = {\n      value: createMethodCaller(methodName),\n      writable: true,\n      configurable: true\n    };\n  } // creating a new attributeChangedCallback per bridge because they are bound to the corresponding\n  // map of attributes to props. We do this after all other props and methods to avoid the possibility\n  // of getting overrule by a class declaration in user-land, and we make it non-writable, non-configurable\n  // to preserve this definition.\n\n\n  descriptors.attributeChangedCallback = {\n    value: createAttributeChangedCallback(attributeToPropMap, superAttributeChangedCallback)\n  }; // Specify attributes for which we want to reflect changes back to their corresponding\n  // properties via attributeChangedCallback.\n\n  defineProperty$1(HTMLBridgeElement, 'observedAttributes', {\n    get() {\n      return [...superObservedAttributes, ...keys$1(attributeToPropMap)];\n    }\n\n  });\n  defineProperties$1(HTMLBridgeElement.prototype, descriptors);\n  return HTMLBridgeElement;\n}\nconst BaseBridgeElement = HTMLBridgeElementFactory(HTMLElementConstructor, getOwnPropertyNames$1(HTMLElementOriginalDescriptors), []);\nfreeze$1(BaseBridgeElement);\nseal$1(BaseBridgeElement.prototype);\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction resolveCircularModuleDependency(fn) {\n  return fn();\n}\nfunction isCircularModuleDependency(obj) {\n  return isFunction$1(obj) && hasOwnProperty$1.call(obj, '__circular__');\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst swappedTemplateMap = new WeakMap();\nconst swappedComponentMap = new WeakMap();\nconst swappedStyleMap = new WeakMap();\nconst activeTemplates = new WeakMap();\nconst activeComponents = new WeakMap();\nconst activeStyles = new WeakMap();\n\nfunction rehydrateHotTemplate(tpl) {\n  const list = activeTemplates.get(tpl);\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      if (isFalse$1$1(vm.isDirty)) {\n        // forcing the vm to rehydrate in the micro-task:\n        markComponentAsDirty(vm);\n        scheduleRehydration(vm);\n      }\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this template, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return true;\n}\n\nfunction rehydrateHotStyle(style) {\n  const list = activeStyles.get(style);\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      // if a style definition is swapped, we must reset\n      // vm's template content in the next micro-task:\n      forceRehydration(vm);\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this style, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return true;\n}\n\nfunction rehydrateHotComponent(Ctor) {\n  const list = activeComponents.get(Ctor);\n  let canRefreshAllInstances = true;\n\n  if (!isUndefined$1(list)) {\n    list.forEach(vm => {\n      const {\n        owner\n      } = vm;\n\n      if (!isNull$1(owner)) {\n        // if a component class definition is swapped, we must reset\n        // owner's template content in the next micro-task:\n        forceRehydration(owner);\n      } else {\n        // the hot swapping for components only work for instances of components\n        // created from a template, root elements can't be swapped because we\n        // don't have a way to force the creation of the element with the same state\n        // of the current element.\n        // Instead, we can report the problem to the caller so it can take action,\n        // for example: reload the entire page.\n        canRefreshAllInstances = false;\n      }\n    }); // resetting the Set to release the memory of those vm references\n    // since they are not longer related to this constructor, instead\n    // they will get re-associated once these instances are rehydrated.\n\n    list.clear();\n  }\n\n  return canRefreshAllInstances;\n}\n\nfunction flattenStylesheets(stylesheets) {\n  const list = [];\n\n  for (const stylesheet of stylesheets) {\n    if (!Array.isArray(stylesheet)) {\n      list.push(stylesheet);\n    } else {\n      list.push(...flattenStylesheets(stylesheet));\n    }\n  }\n\n  return list;\n}\n\nfunction getTemplateOrSwappedTemplate(tpl) {\n  if (false) {}\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedTemplateMap.has(tpl) && !visited.has(tpl)) {\n      visited.add(tpl);\n      tpl = swappedTemplateMap.get(tpl);\n    }\n  }\n\n  return tpl;\n}\nfunction getComponentOrSwappedComponent(Ctor) {\n  if (false) {}\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedComponentMap.has(Ctor) && !visited.has(Ctor)) {\n      visited.add(Ctor);\n      Ctor = swappedComponentMap.get(Ctor);\n    }\n  }\n\n  return Ctor;\n}\nfunction getStyleOrSwappedStyle(style) {\n  if (false) {}\n\n  if (runtimeFlags.ENABLE_HMR) {\n    const visited = new Set();\n\n    while (swappedStyleMap.has(style) && !visited.has(style)) {\n      visited.add(style);\n      style = swappedStyleMap.get(style);\n    }\n  }\n\n  return style;\n}\nfunction setActiveVM(vm) {\n  if (false) {}\n\n  if (runtimeFlags.ENABLE_HMR) {\n    // tracking active component\n    const Ctor = vm.def.ctor;\n    let componentVMs = activeComponents.get(Ctor);\n\n    if (isUndefined$1(componentVMs)) {\n      componentVMs = new Set();\n      activeComponents.set(Ctor, componentVMs);\n    } // this will allow us to keep track of the hot components\n\n\n    componentVMs.add(vm); // tracking active template\n\n    const tpl = vm.cmpTemplate;\n\n    if (tpl) {\n      let templateVMs = activeTemplates.get(tpl);\n\n      if (isUndefined$1(templateVMs)) {\n        templateVMs = new Set();\n        activeTemplates.set(tpl, templateVMs);\n      } // this will allow us to keep track of the templates that are\n      // being used by a hot component\n\n\n      templateVMs.add(vm); // tracking active styles associated to template\n\n      const stylesheets = tpl.stylesheets;\n\n      if (!isUndefined$1(stylesheets)) {\n        flattenStylesheets(stylesheets).forEach(stylesheet => {\n          // this is necessary because we don't hold the list of styles\n          // in the vm, we only hold the selected (already swapped template)\n          // but the styles attached to the template might not be the actual\n          // active ones, but the swapped versions of those.\n          stylesheet = getStyleOrSwappedStyle(stylesheet);\n          let stylesheetVMs = activeStyles.get(stylesheet);\n\n          if (isUndefined$1(stylesheetVMs)) {\n            stylesheetVMs = new Set();\n            activeStyles.set(stylesheet, stylesheetVMs);\n          } // this will allow us to keep track of the stylesheet that are\n          // being used by a hot component\n\n\n          stylesheetVMs.add(vm);\n        });\n      }\n    }\n  }\n}\nfunction removeActiveVM(vm) {\n  if (false) {}\n\n  if (runtimeFlags.ENABLE_HMR) {\n    // tracking inactive component\n    const Ctor = vm.def.ctor;\n    let list = activeComponents.get(Ctor);\n\n    if (!isUndefined$1(list)) {\n      // deleting the vm from the set to avoid leaking memory\n      list.delete(vm);\n    } // removing inactive template\n\n\n    const tpl = vm.cmpTemplate;\n\n    if (tpl) {\n      list = activeTemplates.get(tpl);\n\n      if (!isUndefined$1(list)) {\n        // deleting the vm from the set to avoid leaking memory\n        list.delete(vm);\n      } // removing active styles associated to template\n\n\n      const styles = tpl.stylesheets;\n\n      if (!isUndefined$1(styles)) {\n        flattenStylesheets(styles).forEach(style => {\n          list = activeStyles.get(style);\n\n          if (!isUndefined$1(list)) {\n            // deleting the vm from the set to avoid leaking memory\n            list.delete(vm);\n          }\n        });\n      }\n    }\n  }\n}\nfunction swapTemplate(oldTpl, newTpl) {\n  if (true) {\n    if (isTemplateRegistered(oldTpl) && isTemplateRegistered(newTpl)) {\n      swappedTemplateMap.set(oldTpl, newTpl);\n      return rehydrateHotTemplate(oldTpl);\n    } else {\n      throw new TypeError(`Invalid Template`);\n    }\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\nfunction swapComponent(oldComponent, newComponent) {\n  if (true) {\n    if (isComponentConstructor(oldComponent) && isComponentConstructor(newComponent)) {\n      swappedComponentMap.set(oldComponent, newComponent);\n      return rehydrateHotComponent(oldComponent);\n    } else {\n      throw new TypeError(`Invalid Component`);\n    }\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\nfunction swapStyle(oldStyle, newStyle) {\n  if (true) {\n    // TODO [#1887]: once the support for registering styles is implemented\n    // we can add the validation of both styles around this block.\n    swappedStyleMap.set(oldStyle, newStyle);\n    return rehydrateHotStyle(oldStyle);\n  }\n\n  if (!runtimeFlags.ENABLE_HMR) {\n    throw new Error('HMR is not enabled');\n  }\n\n  return false;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CtorToDefMap = new WeakMap();\n\nfunction getCtorProto(Ctor) {\n  let proto = getPrototypeOf$1(Ctor);\n\n  if (isNull$1(proto)) {\n    throw new ReferenceError(`Invalid prototype chain for ${Ctor.name}, you must extend LightningElement.`);\n  } // covering the cases where the ref is circular in AMD\n\n\n  if (isCircularModuleDependency(proto)) {\n    const p = resolveCircularModuleDependency(proto);\n\n    if (true) {\n      if (isNull$1(p)) {\n        throw new ReferenceError(`Circular module dependency for ${Ctor.name}, must resolve to a constructor that extends LightningElement.`);\n      }\n    } // escape hatch for Locker and other abstractions to provide their own base class instead\n    // of our Base class without having to leak it to user-land. If the circular function returns\n    // itself, that's the signal that we have hit the end of the proto chain, which must always\n    // be base.\n\n\n    proto = p === proto ? BaseLightningElement : p;\n  }\n\n  return proto;\n}\n\nfunction createComponentDef(Ctor) {\n  if (true) {\n    const ctorName = Ctor.name; // Removing the following assert until https://bugs.webkit.org/show_bug.cgi?id=190140 is fixed.\n    // assert.isTrue(ctorName && isString(ctorName), `${toString(Ctor)} should have a \"name\" property with string value, but found ${ctorName}.`);\n\n    assert$1.isTrue(Ctor.constructor, `Missing ${ctorName}.constructor, ${ctorName} should have a \"constructor\" property.`);\n  }\n\n  const decoratorsMeta = getDecoratorsMeta(Ctor);\n  const {\n    apiFields,\n    apiFieldsConfig,\n    apiMethods,\n    wiredFields,\n    wiredMethods,\n    observedFields\n  } = decoratorsMeta;\n  const proto = Ctor.prototype;\n  let {\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  } = proto;\n  const superProto = getCtorProto(Ctor);\n  const superDef = superProto !== BaseLightningElement ? getComponentInternalDef(superProto) : lightingElementDef;\n  const bridge = HTMLBridgeElementFactory(superDef.bridge, keys$1(apiFields), keys$1(apiMethods));\n  const props = assign$1(create$1(null), superDef.props, apiFields);\n  const propsConfig = assign$1(create$1(null), superDef.propsConfig, apiFieldsConfig);\n  const methods = assign$1(create$1(null), superDef.methods, apiMethods);\n  const wire = assign$1(create$1(null), superDef.wire, wiredFields, wiredMethods);\n  connectedCallback = connectedCallback || superDef.connectedCallback;\n  disconnectedCallback = disconnectedCallback || superDef.disconnectedCallback;\n  renderedCallback = renderedCallback || superDef.renderedCallback;\n  errorCallback = errorCallback || superDef.errorCallback;\n  render = render || superDef.render;\n  const template = getComponentRegisteredTemplate(Ctor) || superDef.template;\n  const name = Ctor.name || superDef.name; // installing observed fields into the prototype.\n\n  defineProperties$1(proto, observedFields);\n  const def = {\n    ctor: Ctor,\n    name,\n    wire,\n    props,\n    propsConfig,\n    methods,\n    bridge,\n    template,\n    connectedCallback,\n    disconnectedCallback,\n    renderedCallback,\n    errorCallback,\n    render\n  };\n\n  if (true) {\n    freeze$1(Ctor.prototype);\n  }\n\n  return def;\n}\n/**\n * EXPERIMENTAL: This function allows for the identification of LWC constructors. This API is\n * subject to change or being removed.\n */\n\n\nfunction isComponentConstructor(ctor) {\n  if (!isFunction$1(ctor)) {\n    return false;\n  } // Fast path: LightningElement is part of the prototype chain of the constructor.\n\n\n  if (ctor.prototype instanceof BaseLightningElement) {\n    return true;\n  } // Slow path: LightningElement is not part of the prototype chain of the constructor, we need\n  // climb up the constructor prototype chain to check in case there are circular dependencies\n  // to resolve.\n\n\n  let current = ctor;\n\n  do {\n    if (isCircularModuleDependency(current)) {\n      const circularResolved = resolveCircularModuleDependency(current); // If the circular function returns itself, that's the signal that we have hit the end\n      // of the proto chain, which must always be a valid base constructor.\n\n      if (circularResolved === current) {\n        return true;\n      }\n\n      current = circularResolved;\n    }\n\n    if (current === BaseLightningElement) {\n      return true;\n    }\n  } while (!isNull$1(current) && (current = getPrototypeOf$1(current))); // Finally return false if the LightningElement is not part of the prototype chain.\n\n\n  return false;\n}\nfunction getComponentInternalDef(Ctor) {\n  if (true) {\n    Ctor = getComponentOrSwappedComponent(Ctor);\n  }\n\n  let def = CtorToDefMap.get(Ctor);\n\n  if (isUndefined$1(def)) {\n    if (isCircularModuleDependency(Ctor)) {\n      const resolvedCtor = resolveCircularModuleDependency(Ctor);\n      def = getComponentInternalDef(resolvedCtor); // Cache the unresolved component ctor too. The next time if the same unresolved ctor is used,\n      // look up the definition in cache instead of re-resolving and recreating the def.\n\n      CtorToDefMap.set(Ctor, def);\n      return def;\n    }\n\n    if (!isComponentConstructor(Ctor)) {\n      throw new TypeError(`${Ctor} is not a valid component, or does not extends LightningElement from \"lwc\". You probably forgot to add the extend clause on the class declaration.`);\n    }\n\n    def = createComponentDef(Ctor);\n    CtorToDefMap.set(Ctor, def);\n  }\n\n  return def;\n}\nconst lightingElementDef = {\n  ctor: BaseLightningElement,\n  name: BaseLightningElement.name,\n  props: lightningBasedDescriptors,\n  propsConfig: EmptyObject,\n  methods: EmptyObject,\n  wire: EmptyObject,\n  bridge: BaseBridgeElement,\n  template: defaultEmptyTemplate,\n  render: BaseLightningElement.prototype.render\n};\nvar PropDefType;\n\n(function (PropDefType) {\n  PropDefType[\"any\"] = \"any\";\n})(PropDefType || (PropDefType = {}));\n/**\n * EXPERIMENTAL: This function allows for the collection of internal component metadata. This API is\n * subject to change or being removed.\n */\n\n\nfunction getComponentDef(Ctor) {\n  const def = getComponentInternalDef(Ctor); // From the internal def object, we need to extract the info that is useful\n  // for some external services, e.g.: Locker Service, usually, all they care\n  // is about the shape of the constructor, the internals of it are not relevant\n  // because they don't have a way to mess with that.\n\n  const {\n    ctor,\n    name,\n    props,\n    propsConfig,\n    methods\n  } = def;\n  const publicProps = {};\n\n  for (const key in props) {\n    // avoid leaking the reference to the public props descriptors\n    publicProps[key] = {\n      config: propsConfig[key] || 0,\n      type: PropDefType.any,\n      attr: htmlPropertyToAttribute$1(key)\n    };\n  }\n\n  const publicMethods = {};\n\n  for (const key in methods) {\n    // avoid leaking the reference to the public method descriptors\n    publicMethods[key] = methods[key].value;\n  }\n\n  return {\n    ctor,\n    name,\n    props: publicProps,\n    methods: publicMethods\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nconst noop = () => void 0;\n\nfunction observeElementChildNodes(elm) {\n  elm.$domManual$ = true;\n}\n\nfunction setElementShadowToken(elm, token) {\n  elm.$shadowToken$ = token;\n}\n\nfunction updateNodeHook(oldVnode, vnode) {\n  const {\n    elm,\n    text,\n    owner: {\n      renderer\n    }\n  } = vnode;\n\n  if (oldVnode.text !== text) {\n    if (true) {\n      unlockDomMutation();\n    }\n\n    renderer.setText(elm, text);\n\n    if (true) {\n      lockDomMutation();\n    }\n  }\n}\nfunction insertNodeHook(vnode, parentNode, referenceNode) {\n  const {\n    renderer\n  } = vnode.owner;\n\n  if (true) {\n    unlockDomMutation();\n  }\n\n  renderer.insert(vnode.elm, parentNode, referenceNode);\n\n  if (true) {\n    lockDomMutation();\n  }\n}\nfunction removeNodeHook(vnode, parentNode) {\n  const {\n    renderer\n  } = vnode.owner;\n\n  if (true) {\n    unlockDomMutation();\n  }\n\n  renderer.remove(vnode.elm, parentNode);\n\n  if (true) {\n    lockDomMutation();\n  }\n}\nfunction createElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n}\nvar LWCDOMMode;\n\n(function (LWCDOMMode) {\n  LWCDOMMode[\"manual\"] = \"manual\";\n})(LWCDOMMode || (LWCDOMMode = {}));\n\nfunction fallbackElmHook(elm, vnode) {\n  const {\n    owner\n  } = vnode;\n\n  if (isTrue$1$1(owner.renderer.syntheticShadow)) {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const {\n      shadowAttribute\n    } = owner.context;\n\n    if (!isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === LWCDOMMode.manual) {\n      // this element will now accept any manual content inserted into it\n      observeElementChildNodes(elm);\n    } // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  if (true) {\n    const {\n      data: {\n        context\n      }\n    } = vnode;\n    const isPortal = !isUndefined$1(context) && !isUndefined$1(context.lwc) && context.lwc.dom === LWCDOMMode.manual;\n    patchElementWithRestrictions(elm, {\n      isPortal\n    });\n  }\n}\nfunction updateElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\nfunction updateChildrenHook(oldVnode, vnode) {\n  const {\n    children,\n    owner\n  } = vnode;\n  const fn = hasDynamicChildren(children) ? updateDynamicChildren : updateStaticChildren;\n  runWithBoundaryProtection(owner, owner.owner, noop, () => {\n    fn(vnode.elm, oldVnode.children, children);\n  }, noop);\n}\nfunction allocateChildrenHook(vnode, vm) {\n  // A component with slots will re-render because:\n  // 1- There is a change of the internal state.\n  // 2- There is a change on the external api (ex: slots)\n  //\n  // In case #1, the vnodes in the cmpSlots will be reused since they didn't changed. This routine emptied the\n  // slotted children when those VCustomElement were rendered and therefore in subsequent calls to allocate children\n  // in a reused VCustomElement, there won't be any slotted children.\n  // For those cases, we will use the reference for allocated children stored when rendering the fresh VCustomElement.\n  //\n  // In case #2, we will always get a fresh VCustomElement.\n  const children = vnode.aChildren || vnode.children;\n  vm.aChildren = children;\n\n  if (isTrue$1$1(vm.renderer.syntheticShadow)) {\n    // slow path\n    allocateInSlot(vm, children); // save the allocated children in case this vnode is reused.\n\n    vnode.aChildren = children; // every child vnode is now allocated, and the host should receive none directly, it receives them via the shadow!\n\n    vnode.children = EmptyArray;\n  }\n}\nfunction createViewModelHook(elm, vnode) {\n  if (!isUndefined$1(getAssociatedVMIfPresent(elm))) {\n    // There is a possibility that a custom element is registered under tagName,\n    // in which case, the initialization is already carry on, and there is nothing else\n    // to do here since this hook is called right after invoking `document.createElement`.\n    return;\n  }\n\n  const {\n    sel,\n    mode,\n    ctor,\n    owner\n  } = vnode;\n  const def = getComponentInternalDef(ctor);\n\n  if (isTrue$1$1(owner.renderer.syntheticShadow)) {\n    const {\n      shadowAttribute\n    } = owner.context; // when running in synthetic shadow mode, we need to set the shadowToken value\n    // into each element from the template, so they can be styled accordingly.\n\n    setElementShadowToken(elm, shadowAttribute);\n  }\n\n  createVM(elm, def, {\n    mode,\n    owner,\n    tagName: sel,\n    renderer: owner.renderer\n  });\n\n  if (true) {\n    assert$1.isTrue(isArray$2(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n  }\n}\nfunction createCustomElmHook(vnode) {\n  modEvents.create(vnode); // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n\n  modAttrs.create(vnode);\n  modProps.create(vnode);\n  modStaticClassName.create(vnode);\n  modStaticStyle.create(vnode);\n  modComputedClassName.create(vnode);\n  modComputedStyle.create(vnode);\n}\nfunction createChildrenHook(vnode) {\n  const {\n    elm,\n    children\n  } = vnode;\n\n  for (let j = 0; j < children.length; ++j) {\n    const ch = children[j];\n\n    if (ch != null) {\n      ch.hook.create(ch);\n      ch.hook.insert(ch, elm, null);\n    }\n  }\n}\nfunction updateCustomElmHook(oldVnode, vnode) {\n  // Attrs need to be applied to element before props\n  // IE11 will wipe out value on radio inputs if value\n  // is set before type=radio.\n  modAttrs.update(oldVnode, vnode);\n  modProps.update(oldVnode, vnode);\n  modComputedClassName.update(oldVnode, vnode);\n  modComputedStyle.update(oldVnode, vnode);\n}\nfunction removeElmHook(vnode) {\n  // this method only needs to search on child vnodes from template\n  // to trigger the remove hook just in case some of those children\n  // are custom elements.\n  const {\n    children,\n    elm\n  } = vnode;\n\n  for (let j = 0, len = children.length; j < len; ++j) {\n    const ch = children[j];\n\n    if (!isNull$1(ch)) {\n      ch.hook.remove(ch, elm);\n    }\n  }\n} // Using a WeakMap instead of a WeakSet because this one works in IE11 :(\n\nconst FromIteration = new WeakMap(); // dynamic children means it was generated by an iteration\n// in a template, and will require a more complex diffing algo.\n\nfunction markAsDynamicChildren(children) {\n  FromIteration.set(children, 1);\n}\nfunction hasDynamicChildren(children) {\n  return FromIteration.has(children);\n}\n\n/*\n * Copyright (c) 2020, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction getUpgradableConstructor(tagName, renderer) {\n  // Should never get a tag with upper case letter at this point, the compiler should\n  // produce only tags with lowercase letters\n  // But, for backwards compatibility, we will lower case the tagName\n  tagName = tagName.toLowerCase();\n  let CE = renderer.getCustomElement(tagName);\n\n  if (!isUndefined$1(CE)) {\n    return CE;\n  }\n  /**\n   * LWC Upgradable Element reference to an element that was created\n   * via the scoped registry mechanism, and that is ready to be upgraded.\n   */\n\n\n  CE = class LWCUpgradableElement extends renderer.HTMLElement {\n    constructor(upgradeCallback) {\n      super();\n\n      if (isFunction$1(upgradeCallback)) {\n        upgradeCallback(this); // nothing to do with the result for now\n      }\n    }\n\n  };\n  renderer.defineCustomElement(tagName, CE);\n  return CE;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst CHAR_S = 115;\nconst CHAR_V = 118;\nconst CHAR_G = 103;\nconst NamespaceAttributeForSVG = 'http://www.w3.org/2000/svg';\nconst SymbolIterator = Symbol.iterator;\nconst TextHook = {\n  create: vnode => {\n    const {\n      owner\n    } = vnode;\n    const {\n      renderer\n    } = owner;\n    const elm = renderer.createText(vnode.text);\n    linkNodeToShadow(elm, owner);\n    vnode.elm = elm;\n  },\n  update: updateNodeHook,\n  insert: insertNodeHook,\n  move: insertNodeHook,\n  remove: removeNodeHook\n}; // insert is called after update, which is used somewhere else (via a module)\n// to mark the vm as inserted, that means we cannot use update as the main channel\n// to rehydrate when dirty, because sometimes the element is not inserted just yet,\n// which breaks some invariants. For that reason, we have the following for any\n// Custom Element that is inserted via a template.\n\nconst ElementHook = {\n  create: vnode => {\n    const {\n      sel,\n      owner,\n      data: {\n        ns\n      }\n    } = vnode;\n    const {\n      renderer\n    } = owner;\n    const elm = renderer.createElement(sel, ns);\n    linkNodeToShadow(elm, owner);\n    fallbackElmHook(elm, vnode);\n    vnode.elm = elm;\n    createElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateElmHook(oldVnode, vnode);\n    updateChildrenHook(oldVnode, vnode);\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    createChildrenHook(vnode);\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    removeElmHook(vnode);\n  }\n};\nconst CustomElementHook = {\n  create: vnode => {\n    const {\n      sel,\n      owner\n    } = vnode;\n    const {\n      renderer\n    } = owner;\n    const UpgradableConstructor = getUpgradableConstructor(sel, renderer);\n    /**\n     * Note: if the upgradable constructor does not expect, or throw when we new it\n     * with a callback as the first argument, we could implement a more advanced\n     * mechanism that only passes that argument if the constructor is known to be\n     * an upgradable custom element.\n     */\n\n    const elm = new UpgradableConstructor(elm => {\n      // the custom element from the registry is expecting an upgrade callback\n      createViewModelHook(elm, vnode);\n    });\n    linkNodeToShadow(elm, owner);\n    vnode.elm = elm;\n    const vm = getAssociatedVMIfPresent(elm);\n\n    if (vm) {\n      allocateChildrenHook(vnode, vm);\n    } else if (vnode.ctor !== UpgradableConstructor) {\n      throw new TypeError(`Incorrect Component Constructor`);\n    }\n\n    createCustomElmHook(vnode);\n  },\n  update: (oldVnode, vnode) => {\n    updateCustomElmHook(oldVnode, vnode);\n    const vm = getAssociatedVMIfPresent(vnode.elm);\n\n    if (vm) {\n      // in fallback mode, the allocation will always set children to\n      // empty and delegate the real allocation to the slot elements\n      allocateChildrenHook(vnode, vm);\n    } // in fallback mode, the children will be always empty, so, nothing\n    // will happen, but in native, it does allocate the light dom\n\n\n    updateChildrenHook(oldVnode, vnode);\n\n    if (vm) {\n      if (true) {\n        assert$1.isTrue(isArray$2(vnode.children), `Invalid vnode for a custom element, it must have children defined.`);\n      } // this will probably update the shadowRoot, but only if the vm is in a dirty state\n      // this is important to preserve the top to bottom synchronous rendering phase.\n\n\n      rerenderVM(vm);\n    }\n  },\n  insert: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n    const vm = getAssociatedVMIfPresent(vnode.elm);\n\n    if (vm) {\n      if (true) {\n        assert$1.isTrue(vm.state === VMState.created, `${vm} cannot be recycled.`);\n      }\n\n      runConnectedCallback(vm);\n    }\n\n    createChildrenHook(vnode);\n\n    if (vm) {\n      appendVM(vm);\n    }\n  },\n  move: (vnode, parentNode, referenceNode) => {\n    insertNodeHook(vnode, parentNode, referenceNode);\n  },\n  remove: (vnode, parentNode) => {\n    removeNodeHook(vnode, parentNode);\n    const vm = getAssociatedVMIfPresent(vnode.elm);\n\n    if (vm) {\n      // for custom elements we don't have to go recursively because the removeVM routine\n      // will take care of disconnecting any child VM attached to its shadow as well.\n      removeVM(vm);\n    }\n  }\n};\n\nfunction linkNodeToShadow(elm, owner) {\n  const {\n    renderer,\n    cmpRoot\n  } = owner; // TODO [#1164]: this should eventually be done by the polyfill directly\n\n  if (renderer.syntheticShadow) {\n    elm.$shadowResolver$ = cmpRoot.$shadowResolver$;\n  }\n} // TODO [#1136]: this should be done by the compiler, adding ns to every sub-element\n\n\nfunction addNS(vnode) {\n  const {\n    data,\n    children,\n    sel\n  } = vnode;\n  data.ns = NamespaceAttributeForSVG; // TODO [#1275]: review why `sel` equal `foreignObject` should get this `ns`\n\n  if (isArray$2(children) && sel !== 'foreignObject') {\n    for (let j = 0, n = children.length; j < n; ++j) {\n      const childNode = children[j];\n\n      if (childNode != null && childNode.hook === ElementHook) {\n        addNS(childNode);\n      }\n    }\n  }\n}\n\nfunction addVNodeToChildLWC(vnode) {\n  ArrayPush$1.call(getVMBeingRendered().velements, vnode);\n} // [h]tml node\n\n\nfunction h(sel, data, children) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (true) {\n    assert$1.isTrue(isString(sel), `h() 1st argument sel must be a string.`);\n    assert$1.isTrue(isObject$2(data), `h() 2nd argument data must be an object.`);\n    assert$1.isTrue(isArray$2(children), `h() 3rd argument children must be an array.`);\n    assert$1.isTrue('key' in data, ` <${sel}> \"key\" attribute is invalid or missing for ${vmBeingRendered}. Key inside iterator is either undefined or null.`); // checking reserved internal data properties\n\n    assert$1.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert$1.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    forEach$1.call(children, childVnode => {\n      if (childVnode != null) {\n        assert$1.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n      }\n    });\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: ElementHook,\n    owner: vmBeingRendered\n  };\n\n  if (sel.length === 3 && StringCharCodeAt$1.call(sel, 0) === CHAR_S && StringCharCodeAt$1.call(sel, 1) === CHAR_V && StringCharCodeAt$1.call(sel, 2) === CHAR_G) {\n    addNS(vnode);\n  }\n\n  return vnode;\n} // [t]ab[i]ndex function\n\nfunction ti(value) {\n  // if value is greater than 0, we normalize to 0\n  // If value is an invalid tabIndex value (null, undefined, string, etc), we let that value pass through\n  // If value is less than -1, we don't care\n  const shouldNormalize = value > 0 && !(isTrue$1$1(value) || isFalse$1$1(value));\n\n  if (true) {\n    const vmBeingRendered = getVMBeingRendered();\n\n    if (shouldNormalize) {\n      logError(`Invalid tabindex value \\`${toString$1(value)}\\` in template for ${vmBeingRendered}. This attribute must be set to 0 or -1.`, vmBeingRendered);\n    }\n  }\n\n  return shouldNormalize ? 0 : value;\n} // [s]lot element node\n\nfunction s(slotName, data, children, slotset) {\n  if (true) {\n    assert$1.isTrue(isString(slotName), `s() 1st argument slotName must be a string.`);\n    assert$1.isTrue(isObject$2(data), `s() 2nd argument data must be an object.`);\n    assert$1.isTrue(isArray$2(children), `h() 3rd argument children must be an array.`);\n  }\n\n  if (!isUndefined$1(slotset) && !isUndefined$1(slotset[slotName]) && slotset[slotName].length !== 0) {\n    children = slotset[slotName];\n  }\n\n  const vnode = h('slot', data, children);\n\n  if (vnode.owner.renderer.syntheticShadow) {\n    // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n    sc(children);\n  }\n\n  return vnode;\n} // [c]ustom element node\n\nfunction c(sel, Ctor, data, children = EmptyArray) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (true) {\n    assert$1.isTrue(isString(sel), `c() 1st argument sel must be a string.`);\n    assert$1.isTrue(isFunction$1(Ctor), `c() 2nd argument Ctor must be a function.`);\n    assert$1.isTrue(isObject$2(data), `c() 3nd argument data must be an object.`);\n    assert$1.isTrue(arguments.length === 3 || isArray$2(children), `c() 4nd argument data must be an array.`); // checking reserved internal data properties\n\n    assert$1.isFalse(data.className && data.classMap, `vnode.data.className and vnode.data.classMap ambiguous declaration.`);\n    assert$1.isFalse(data.styleMap && data.style, `vnode.data.styleMap and vnode.data.style ambiguous declaration.`);\n\n    if (data.style && !isString(data.style)) {\n      logError(`Invalid 'style' attribute passed to <${sel}> is ignored. This attribute must be a string value.`, vmBeingRendered);\n    }\n\n    if (arguments.length === 4) {\n      forEach$1.call(children, childVnode => {\n        if (childVnode != null) {\n          assert$1.isTrue(childVnode && 'sel' in childVnode && 'data' in childVnode && 'children' in childVnode && 'text' in childVnode && 'elm' in childVnode && 'key' in childVnode, `${childVnode} is not a vnode.`);\n        }\n      });\n    }\n  }\n\n  const {\n    key\n  } = data;\n  let text, elm;\n  const vnode = {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: CustomElementHook,\n    ctor: Ctor,\n    owner: vmBeingRendered,\n    mode: 'open'\n  };\n  addVNodeToChildLWC(vnode);\n  return vnode;\n} // [i]terable node\n\nfunction i(iterable, factory) {\n  const list = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(list);\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined$1(iterable) || iterable === null) {\n    if (true) {\n      logError(`Invalid template iteration for value \"${toString$1(iterable)}\" in ${vmBeingRendered}. It must be an Array or an iterable Object.`, vmBeingRendered);\n    }\n\n    return list;\n  }\n\n  if (true) {\n    assert$1.isFalse(isUndefined$1(iterable[SymbolIterator]), `Invalid template iteration for value \\`${toString$1(iterable)}\\` in ${vmBeingRendered}. It must be an array-like object and not \\`null\\` nor \\`undefined\\`.`);\n  }\n\n  const iterator = iterable[SymbolIterator]();\n\n  if (true) {\n    assert$1.isTrue(iterator && isFunction$1(iterator.next), `Invalid iterator function for \"${toString$1(iterable)}\" in ${vmBeingRendered}.`);\n  }\n\n  let next = iterator.next();\n  let j = 0;\n  let {\n    value,\n    done: last\n  } = next;\n  let keyMap;\n  let iterationError;\n\n  if (true) {\n    keyMap = create$1(null);\n  }\n\n  while (last === false) {\n    // implementing a look-back-approach because we need to know if the element is the last\n    next = iterator.next();\n    last = next.done; // template factory logic based on the previous collected value\n\n    const vnode = factory(value, j, j === 0, last);\n\n    if (isArray$2(vnode)) {\n      ArrayPush$1.apply(list, vnode);\n    } else {\n      ArrayPush$1.call(list, vnode);\n    }\n\n    if (true) {\n      const vnodes = isArray$2(vnode) ? vnode : [vnode];\n      forEach$1.call(vnodes, childVnode => {\n        if (!isNull$1(childVnode) && isObject$2(childVnode) && !isUndefined$1(childVnode.sel)) {\n          const {\n            key\n          } = childVnode;\n\n          if (isString(key) || isNumber(key)) {\n            if (keyMap[key] === 1 && isUndefined$1(iterationError)) {\n              iterationError = `Duplicated \"key\" attribute value for \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. A key with value \"${childVnode.key}\" appears more than once in the iteration. Key values must be unique numbers or strings.`;\n            }\n\n            keyMap[key] = 1;\n          } else if (isUndefined$1(iterationError)) {\n            iterationError = `Invalid \"key\" attribute value in \"<${childVnode.sel}>\" in ${vmBeingRendered} for item number ${j}. Set a unique \"key\" value on all iterated child elements.`;\n          }\n        }\n      });\n    } // preparing next value\n\n\n    j += 1;\n    value = next.value;\n  }\n\n  if (true) {\n    if (!isUndefined$1(iterationError)) {\n      logError(iterationError, vmBeingRendered);\n    }\n  }\n\n  return list;\n}\n/**\n * [f]lattening\n */\n\nfunction f(items) {\n  if (true) {\n    assert$1.isTrue(isArray$2(items), 'flattening api can only work with arrays.');\n  }\n\n  const len = items.length;\n  const flattened = []; // TODO [#1276]: compiler should give us some sort of indicator when a vnodes collection is dynamic\n\n  sc(flattened);\n\n  for (let j = 0; j < len; j += 1) {\n    const item = items[j];\n\n    if (isArray$2(item)) {\n      ArrayPush$1.apply(flattened, item);\n    } else {\n      ArrayPush$1.call(flattened, item);\n    }\n  }\n\n  return flattened;\n} // [t]ext node\n\nfunction t(text) {\n  const data = EmptyObject;\n  let sel, children, key, elm;\n  return {\n    sel,\n    data,\n    children,\n    text,\n    elm,\n    key,\n    hook: TextHook,\n    owner: getVMBeingRendered()\n  };\n} // [d]ynamic value to produce a text vnode\n\nfunction d(value) {\n  if (value == null) {\n    return null;\n  }\n\n  return t(value);\n} // [b]ind function\n\nfunction b(fn) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isNull$1(vmBeingRendered)) {\n    throw new Error();\n  }\n\n  const vm = vmBeingRendered;\n  return function (event) {\n    invokeEventListener(vm, fn, vm.component, event);\n  };\n} // [k]ey function\n\nfunction k(compilerKey, obj) {\n  switch (typeof obj) {\n    case 'number':\n    case 'string':\n      return compilerKey + ':' + obj;\n\n    case 'object':\n      if (true) {\n        assert$1.fail(`Invalid key value \"${obj}\" in ${getVMBeingRendered()}. Key must be a string or number.`);\n      }\n\n  }\n} // [g]lobal [id] function\n\nfunction gid(id) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined$1(id) || id === '') {\n    if (true) {\n      logError(`Invalid id value \"${id}\". The id attribute must contain a non-empty string.`, vmBeingRendered);\n    }\n\n    return id;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull$1(id)) {\n    return null;\n  }\n\n  return `${id}-${vmBeingRendered.idx}`;\n} // [f]ragment [id] function\n\nfunction fid(url) {\n  const vmBeingRendered = getVMBeingRendered();\n\n  if (isUndefined$1(url) || url === '') {\n    if (true) {\n      if (isUndefined$1(url)) {\n        logError(`Undefined url value for \"href\" or \"xlink:href\" attribute. Expected a non-empty string.`, vmBeingRendered);\n      }\n    }\n\n    return url;\n  } // We remove attributes when they are assigned a value of null\n\n\n  if (isNull$1(url)) {\n    return null;\n  } // Apply transformation only for fragment-only-urls\n\n\n  if (/^#/.test(url)) {\n    return `${url}-${vmBeingRendered.idx}`;\n  }\n\n  return url;\n}\n/**\n * Map to store an index value assigned to any dynamic component reference ingested\n * by dc() api. This allows us to generate a unique unique per template per dynamic\n * component reference to avoid diffing algo mismatches.\n */\n\nconst DynamicImportedComponentMap = new Map();\nlet dynamicImportedComponentCounter = 0;\n/**\n * create a dynamic component via `<x-foo lwc:dynamic={Ctor}>`\n */\n\nfunction dc(sel, Ctor, data, children) {\n  if (true) {\n    assert$1.isTrue(isString(sel), `dc() 1st argument sel must be a string.`);\n    assert$1.isTrue(isObject$2(data), `dc() 3nd argument data must be an object.`);\n    assert$1.isTrue(arguments.length === 3 || isArray$2(children), `dc() 4nd argument data must be an array.`);\n  } // null or undefined values should produce a null value in the VNodes\n\n\n  if (Ctor == null) {\n    return null;\n  }\n\n  if (!isComponentConstructor(Ctor)) {\n    throw new Error(`Invalid LWC Constructor ${toString$1(Ctor)} for custom element <${sel}>.`);\n  }\n\n  let idx = DynamicImportedComponentMap.get(Ctor);\n\n  if (isUndefined$1(idx)) {\n    idx = dynamicImportedComponentCounter++;\n    DynamicImportedComponentMap.set(Ctor, idx);\n  } // the new vnode key is a mix of idx and compiler key, this is required by the diffing algo\n  // to identify different constructors as vnodes with different keys to avoid reusing the\n  // element used for previous constructors.\n\n\n  data.key = `dc:${idx}:${data.key}`;\n  return c(sel, Ctor, data, children);\n}\n/**\n * slow children collection marking mechanism. this API allows the compiler to signal\n * to the engine that a particular collection of children must be diffed using the slow\n * algo based on keys due to the nature of the list. E.g.:\n *\n *   - slot element's children: the content of the slot has to be dynamic when in synthetic\n *                              shadow mode because the `vnode.children` might be the slotted\n *                              content vs default content, in which case the size and the\n *                              keys are not matching.\n *   - children that contain dynamic components\n *   - children that are produced by iteration\n *\n */\n\nfunction sc(vnodes) {\n  if (true) {\n    assert$1.isTrue(isArray$2(vnodes), 'sc() api can only work with arrays.');\n  } // We have to mark the vnodes collection as dynamic so we can later on\n  // choose to use the snabbdom virtual dom diffing algo instead of our\n  // static dummy algo.\n\n\n  markAsDynamicChildren(vnodes);\n  return vnodes;\n}\n\nvar api$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    h: h,\n    ti: ti,\n    s: s,\n    c: c,\n    i: i,\n    f: f,\n    t: t,\n    d: d,\n    b: b,\n    k: k,\n    gid: gid,\n    fid: fid,\n    dc: dc,\n    sc: sc\n});\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction createShadowStyleVNode(content) {\n  return h('style', {\n    key: 'style',\n    attrs: {\n      type: 'text/css'\n    }\n  }, [t(content)]);\n}\n\nfunction updateSyntheticShadowAttributes(vm, template) {\n  const {\n    elm,\n    context,\n    renderer\n  } = vm;\n  const {\n    stylesheets: newStylesheets,\n    stylesheetTokens: newStylesheetTokens\n  } = template;\n  let newHostAttribute;\n  let newShadowAttribute; // Reset the styling token applied to the host element.\n\n  const oldHostAttribute = context.hostAttribute;\n\n  if (!isUndefined$1(oldHostAttribute)) {\n    renderer.removeAttribute(elm, oldHostAttribute);\n  } // Apply the new template styling token to the host element, if the new template has any\n  // associated stylesheets.\n\n\n  if (!isUndefined$1(newStylesheetTokens) && !isUndefined$1(newStylesheets) && newStylesheets.length !== 0) {\n    newHostAttribute = newStylesheetTokens.hostAttribute;\n    newShadowAttribute = newStylesheetTokens.shadowAttribute;\n    renderer.setAttribute(elm, newHostAttribute, '');\n  } // Update the styling tokens present on the context object.\n\n\n  context.hostAttribute = newHostAttribute;\n  context.shadowAttribute = newShadowAttribute;\n}\n\nfunction evaluateStylesheetsContent(stylesheets, hostSelector, shadowSelector, nativeShadow) {\n  const content = [];\n\n  for (let i = 0; i < stylesheets.length; i++) {\n    let stylesheet = stylesheets[i];\n\n    if (isArray$2(stylesheet)) {\n      ArrayPush$1.apply(content, evaluateStylesheetsContent(stylesheet, hostSelector, shadowSelector, nativeShadow));\n    } else {\n      if (true) {\n        // in dev-mode, we support hot swapping of stylesheet, which means that\n        // the component instance might be attempting to use an old version of\n        // the stylesheet, while internally, we have a replacement for it.\n        stylesheet = getStyleOrSwappedStyle(stylesheet);\n      }\n\n      ArrayPush$1.call(content, stylesheet(hostSelector, shadowSelector, nativeShadow));\n    }\n  }\n\n  return content;\n}\n\nfunction getStylesheetsContent(vm, template) {\n  const {\n    stylesheets,\n    stylesheetTokens: tokens\n  } = template;\n  const {\n    syntheticShadow\n  } = vm.renderer;\n  let content = [];\n\n  if (!isUndefined$1(stylesheets) && !isUndefined$1(tokens)) {\n    const hostSelector = syntheticShadow ? `[${tokens.hostAttribute}]` : '';\n    const shadowSelector = syntheticShadow ? `[${tokens.shadowAttribute}]` : '';\n    content = evaluateStylesheetsContent(stylesheets, hostSelector, shadowSelector, !syntheticShadow);\n  }\n\n  return content;\n}\nfunction createStylesheet(vm, stylesheets) {\n  const {\n    renderer\n  } = vm;\n\n  if (renderer.syntheticShadow) {\n    for (let i = 0; i < stylesheets.length; i++) {\n      renderer.insertGlobalStylesheet(stylesheets[i]);\n    }\n\n    return null;\n  } else {\n    const shadowStyleSheetContent = ArrayJoin$1.call(stylesheets, '\\n');\n    return createShadowStyleVNode(shadowStyleSheetContent);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nvar GlobalMeasurementPhase;\n\n(function (GlobalMeasurementPhase) {\n  GlobalMeasurementPhase[\"REHYDRATE\"] = \"lwc-rehydrate\";\n  GlobalMeasurementPhase[\"HYDRATE\"] = \"lwc-hydrate\";\n})(GlobalMeasurementPhase || (GlobalMeasurementPhase = {})); // Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.\n// JSDom (used in Jest) for example doesn't implement the UserTiming APIs.\n\n\nconst isUserTimingSupported = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';\n\nfunction getMarkName(phase, vm) {\n  // Adding the VM idx to the mark name creates a unique mark name component instance. This is necessary to produce\n  // the right measures for components that are recursive.\n  return `${getComponentTag(vm)} - ${phase} - ${vm.idx}`;\n}\n\nfunction getMeasureName(phase, vm) {\n  return `${getComponentTag(vm)} - ${phase}`;\n}\n\nfunction start(markName) {\n  performance.mark(markName);\n}\n\nfunction end(measureName, markName) {\n  performance.measure(measureName, markName); // Clear the created marks and measure to avoid filling the performance entries buffer.\n  // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.\n\n  performance.clearMarks(markName);\n  performance.clearMarks(measureName);\n}\n\nfunction noop$1() {\n  /* do nothing */\n}\n\nconst startMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  start(markName);\n};\nconst endMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = getMarkName(phase, vm);\n  const measureName = getMeasureName(phase, vm);\n  end(measureName, markName);\n};\nconst startGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined$1(vm) ? phase : getMarkName(phase, vm);\n  start(markName);\n};\nconst endGlobalMeasure = !isUserTimingSupported ? noop$1 : function (phase, vm) {\n  const markName = isUndefined$1(vm) ? phase : getMarkName(phase, vm);\n  end(phase, markName);\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction noop$2(_opId, _phase, _cmpName, _vm_idx) {}\n\nlet logOperation = noop$2;\nvar OperationId;\n\n(function (OperationId) {\n  OperationId[OperationId[\"constructor\"] = 0] = \"constructor\";\n  OperationId[OperationId[\"render\"] = 1] = \"render\";\n  OperationId[OperationId[\"patch\"] = 2] = \"patch\";\n  OperationId[OperationId[\"connectedCallback\"] = 3] = \"connectedCallback\";\n  OperationId[OperationId[\"renderedCallback\"] = 4] = \"renderedCallback\";\n  OperationId[OperationId[\"disconnectedCallback\"] = 5] = \"disconnectedCallback\";\n  OperationId[OperationId[\"errorCallback\"] = 6] = \"errorCallback\";\n})(OperationId || (OperationId = {}));\n\nvar Phase;\n\n(function (Phase) {\n  Phase[Phase[\"Start\"] = 0] = \"Start\";\n  Phase[Phase[\"Stop\"] = 1] = \"Stop\";\n})(Phase || (Phase = {}));\n\nconst opIdToMeasurementPhaseMappingArray = ['constructor', 'render', 'patch', 'connectedCallback', 'renderedCallback', 'disconnectedCallback', 'errorCallback'];\nlet profilerEnabled = false;\nlet logMarks = false;\nlet bufferLogging = false;\n\nif (true) {\n  profilerEnabled = true;\n  logMarks = true;\n  bufferLogging = false;\n}\n\nconst profilerStateCallbacks = [];\n\nfunction trackProfilerState(callback) {\n  callback(profilerEnabled);\n  profilerStateCallbacks.push(callback);\n}\n\nfunction logOperationStart(opId, vm) {\n  if (logMarks) {\n    startMeasure(opIdToMeasurementPhaseMappingArray[opId], vm);\n  }\n\n  if (bufferLogging) {\n    logOperation(opId, Phase.Start, vm.tagName, vm.idx);\n  }\n}\n\nfunction logOperationEnd(opId, vm) {\n  if (logMarks) {\n    endMeasure(opIdToMeasurementPhaseMappingArray[opId], vm);\n  }\n\n  if (bufferLogging) {\n    logOperation(opId, Phase.Stop, vm.tagName, vm.idx);\n  }\n}\n\nfunction enableProfiler() {\n  profilerEnabled = true;\n  bufferLogging = true;\n  notifyProfilerStateChange();\n}\n\nfunction disableProfiler() {\n  if (true) {\n    // in non-prod mode we want to keep logging marks\n    profilerEnabled = true;\n    logMarks = true;\n    bufferLogging = false;\n  } else {}\n\n  notifyProfilerStateChange();\n}\n\nfunction notifyProfilerStateChange() {\n  for (let i = 0; i < profilerStateCallbacks.length; i++) {\n    profilerStateCallbacks[i](profilerEnabled);\n  }\n}\n\nfunction attachDispatcher(dispatcher) {\n  logOperation = dispatcher;\n  bufferLogging = true;\n}\n\nfunction detachDispatcher() {\n  const currentLogOperation = logOperation;\n  logOperation = noop$2;\n  bufferLogging = false;\n  return currentLogOperation;\n}\n\nconst profilerControl = {\n  enableProfiler,\n  disableProfiler,\n  attachDispatcher,\n  detachDispatcher\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isUpdatingTemplate = false;\nlet vmBeingRendered = null;\nfunction getVMBeingRendered() {\n  return vmBeingRendered;\n}\nfunction setVMBeingRendered(vm) {\n  vmBeingRendered = vm;\n}\nlet profilerEnabled$1 = false;\ntrackProfilerState(t => profilerEnabled$1 = t);\n\nfunction validateSlots(vm, html) {\n  if (false) {}\n\n  const {\n    cmpSlots\n  } = vm;\n  const {\n    slots = EmptyArray\n  } = html;\n\n  for (const slotName in cmpSlots) {\n    // eslint-disable-next-line lwc-internal/no-production-assert\n    assert$1.isTrue(isArray$2(cmpSlots[slotName]), `Slots can only be set to an array, instead received ${toString$1(cmpSlots[slotName])} for slot \"${slotName}\" in ${vm}.`);\n\n    if (slotName !== '' && ArrayIndexOf$1.call(slots, slotName) === -1) {\n      // TODO [#1297]: this should never really happen because the compiler should always validate\n      // eslint-disable-next-line lwc-internal/no-production-assert\n      logError(`Ignoring unknown provided slot name \"${slotName}\" in ${vm}. Check for a typo on the slot attribute.`, vm);\n    }\n  }\n}\n\nfunction evaluateTemplate(vm, html) {\n  if (true) {\n    assert$1.isTrue(isFunction$1(html), `evaluateTemplate() second argument must be an imported template instead of ${toString$1(html)}`); // in dev-mode, we support hot swapping of templates, which means that\n    // the component instance might be attempting to use an old version of\n    // the template, while internally, we have a replacement for it.\n\n    html = getTemplateOrSwappedTemplate(html);\n  }\n\n  const isUpdatingTemplateInception = isUpdatingTemplate;\n  const vmOfTemplateBeingUpdatedInception = vmBeingRendered;\n  let vnodes = [];\n  runWithBoundaryProtection(vm, vm.owner, () => {\n    // pre\n    vmBeingRendered = vm;\n\n    if (profilerEnabled$1) {\n      logOperationStart(OperationId.render, vm);\n    }\n  }, () => {\n    // job\n    const {\n      component,\n      context,\n      cmpSlots,\n      cmpTemplate,\n      tro,\n      renderer\n    } = vm;\n    tro.observe(() => {\n      // Reset the cache memoizer for template when needed.\n      if (html !== cmpTemplate) {\n        // Perf opt: do not reset the shadow root during the first rendering (there is\n        // nothing to reset).\n        if (!isNull$1(cmpTemplate)) {\n          // It is important to reset the content to avoid reusing similar elements\n          // generated from a different template, because they could have similar IDs,\n          // and snabbdom just rely on the IDs.\n          resetShadowRoot(vm);\n        } // Check that the template was built by the compiler.\n\n\n        if (!isTemplateRegistered(html)) {\n          throw new TypeError(`Invalid template returned by the render() method on ${vm}. It must return an imported template (e.g.: \\`import html from \"./${vm.def.name}.html\"\\`), instead, it has returned: ${toString$1(html)}.`);\n        }\n\n        vm.cmpTemplate = html; // Create a brand new template cache for the swapped templated.\n\n        context.tplCache = create$1(null); // Update the synthetic shadow attributes on the host element if necessary.\n\n        if (renderer.syntheticShadow) {\n          updateSyntheticShadowAttributes(vm, html);\n        } // Evaluate, create stylesheet and cache the produced VNode for future\n        // re-rendering.\n\n\n        const stylesheetsContent = getStylesheetsContent(vm, html);\n        context.styleVNode = stylesheetsContent.length === 0 ? null : createStylesheet(vm, stylesheetsContent);\n      }\n\n      if (true) {\n        // validating slots in every rendering since the allocated content might change over time\n        validateSlots(vm, html); // add the VM to the list of host VMs that can be re-rendered if html is swapped\n\n        setActiveVM(vm);\n      } // right before producing the vnodes, we clear up all internal references\n      // to custom elements from the template.\n\n\n      vm.velements = []; // Set the global flag that template is being updated\n\n      isUpdatingTemplate = true;\n      vnodes = html.call(undefined, api$1, component, cmpSlots, context.tplCache);\n      const {\n        styleVNode\n      } = context;\n\n      if (!isNull$1(styleVNode)) {\n        ArrayUnshift$2.call(vnodes, styleVNode);\n      }\n    });\n  }, () => {\n    // post\n    isUpdatingTemplate = isUpdatingTemplateInception;\n    vmBeingRendered = vmOfTemplateBeingUpdatedInception;\n\n    if (profilerEnabled$1) {\n      logOperationEnd(OperationId.render, vm);\n    }\n  });\n\n  if (true) {\n    assert$1.invariant(isArray$2(vnodes), `Compiler should produce html functions that always return an array.`);\n  }\n\n  return vnodes;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nfunction addErrorComponentStack(vm, error) {\n  if (!isFrozen$1(error) && isUndefined$1(error.wcStack)) {\n    const wcStack = getErrorComponentStack(vm);\n    defineProperty$1(error, 'wcStack', {\n      get() {\n        return wcStack;\n      }\n\n    });\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nlet isInvokingRender = false;\nlet vmBeingConstructed = null;\nfunction isBeingConstructed(vm) {\n  return vmBeingConstructed === vm;\n}\nlet profilerEnabled$2 = false;\ntrackProfilerState(t => profilerEnabled$2 = t);\n\nconst noop$3 = () => void 0;\n\nfunction invokeComponentCallback(vm, fn, args) {\n  const {\n    component,\n    callHook,\n    owner\n  } = vm;\n  let result;\n  runWithBoundaryProtection(vm, owner, noop$3, () => {\n    // job\n    result = callHook(component, fn, args);\n  }, noop$3);\n  return result;\n}\nfunction invokeComponentConstructor(vm, Ctor) {\n  const vmBeingConstructedInception = vmBeingConstructed;\n  let error;\n\n  if (profilerEnabled$2) {\n    logOperationStart(OperationId.constructor, vm);\n  }\n\n  vmBeingConstructed = vm;\n  /**\n   * Constructors don't need to be wrapped with a boundary because for root elements\n   * it should throw, while elements from template are already wrapped by a boundary\n   * associated to the diffing algo.\n   */\n\n  try {\n    // job\n    const result = new Ctor(); // Check indirectly if the constructor result is an instance of LightningElement. Using\n    // the \"instanceof\" operator would not work here since Locker Service provides its own\n    // implementation of LightningElement, so we indirectly check if the base constructor is\n    // invoked by accessing the component on the vm.\n\n    if (vmBeingConstructed.component !== result) {\n      throw new TypeError('Invalid component constructor, the class should extend LightningElement.');\n    }\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    if (profilerEnabled$2) {\n      logOperationEnd(OperationId.constructor, vm);\n    }\n\n    vmBeingConstructed = vmBeingConstructedInception;\n\n    if (!isUndefined$1(error)) {\n      addErrorComponentStack(vm, error); // re-throwing the original error annotated after restoring the context\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n}\nfunction invokeComponentRenderMethod(vm) {\n  const {\n    def: {\n      render\n    },\n    callHook,\n    component,\n    owner\n  } = vm;\n  const isRenderBeingInvokedInception = isInvokingRender;\n  const vmBeingRenderedInception = getVMBeingRendered();\n  let html;\n  let renderInvocationSuccessful = false;\n  runWithBoundaryProtection(vm, owner, () => {\n    // pre\n    isInvokingRender = true;\n    setVMBeingRendered(vm);\n  }, () => {\n    // job\n    vm.tro.observe(() => {\n      html = callHook(component, render);\n      renderInvocationSuccessful = true;\n    });\n  }, () => {\n    // post\n    isInvokingRender = isRenderBeingInvokedInception;\n    setVMBeingRendered(vmBeingRenderedInception);\n  }); // If render() invocation failed, process errorCallback in boundary and return an empty template\n\n  return renderInvocationSuccessful ? evaluateTemplate(vm, html) : [];\n}\nfunction invokeComponentRenderedCallback(vm) {\n  const {\n    def: {\n      renderedCallback\n    },\n    component,\n    callHook,\n    owner\n  } = vm;\n\n  if (!isUndefined$1(renderedCallback)) {\n    runWithBoundaryProtection(vm, owner, () => {\n\n      if (profilerEnabled$2) {\n        logOperationStart(OperationId.renderedCallback, vm);\n      }\n    }, () => {\n      // job\n      callHook(component, renderedCallback);\n    }, () => {\n      // post\n      if (profilerEnabled$2) {\n        logOperationEnd(OperationId.renderedCallback, vm);\n      }\n    });\n  }\n}\nfunction invokeEventListener(vm, fn, thisValue, event) {\n  const {\n    callHook,\n    owner\n  } = vm;\n  runWithBoundaryProtection(vm, owner, noop$3, () => {\n    // job\n    if (true) {\n      assert$1.isTrue(isFunction$1(fn), `Invalid event handler for event '${event.type}' on ${vm}.`);\n    }\n\n    callHook(thisValue, fn, [event]);\n  }, noop$3);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst signedTemplateMap = new Map();\n/**\n * INTERNAL: This function can only be invoked by compiled code. The compiler\n * will prevent this function from being imported by userland code.\n */\n\nfunction registerComponent(Ctor, {\n  tmpl\n}) {\n  signedTemplateMap.set(Ctor, tmpl); // chaining this method as a way to wrap existing assignment of component constructor easily,\n  // without too much transformation\n\n  return Ctor;\n}\nfunction getComponentRegisteredTemplate(Ctor) {\n  return signedTemplateMap.get(Ctor);\n}\nfunction createComponent(vm, Ctor) {\n  // create the component instance\n  invokeComponentConstructor(vm, Ctor);\n\n  if (isUndefined$1(vm.component)) {\n    throw new ReferenceError(`Invalid construction for ${Ctor}, you must extend LightningElement.`);\n  }\n}\nfunction getTemplateReactiveObserver(vm) {\n  return new ReactiveObserver(() => {\n    const {\n      isDirty\n    } = vm;\n\n    if (isFalse$1$1(isDirty)) {\n      markComponentAsDirty(vm);\n      scheduleRehydration(vm);\n    }\n  });\n}\nfunction renderComponent(vm) {\n  if (true) {\n    assert$1.invariant(vm.isDirty, `${vm} is not dirty.`);\n  }\n\n  vm.tro.reset();\n  const vnodes = invokeComponentRenderMethod(vm);\n  vm.isDirty = false;\n  vm.isScheduled = false;\n\n  if (true) {\n    assert$1.invariant(isArray$2(vnodes), `${vm}.render() should always return an array of vnodes instead of ${vnodes}`);\n  }\n\n  return vnodes;\n}\nfunction markComponentAsDirty(vm) {\n  if (true) {\n    const vmBeingRendered = getVMBeingRendered();\n    assert$1.isFalse(vm.isDirty, `markComponentAsDirty() for ${vm} should not be called when the component is already dirty.`);\n    assert$1.isFalse(isInvokingRender, `markComponentAsDirty() for ${vm} cannot be called during rendering of ${vmBeingRendered}.`);\n    assert$1.isFalse(isUpdatingTemplate, `markComponentAsDirty() for ${vm} cannot be called while updating template of ${vmBeingRendered}.`);\n  }\n\n  vm.isDirty = true;\n}\nconst cmpEventListenerMap = new WeakMap();\nfunction getWrappedComponentsListener(vm, listener) {\n  if (!isFunction$1(listener)) {\n    throw new TypeError(); // avoiding problems with non-valid listeners\n  }\n\n  let wrappedListener = cmpEventListenerMap.get(listener);\n\n  if (isUndefined$1(wrappedListener)) {\n    wrappedListener = function (event) {\n      invokeEventListener(vm, listener, undefined, event);\n    };\n\n    cmpEventListenerMap.set(listener, wrappedListener);\n  }\n\n  return wrappedListener;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst Services = create$1(null);\nconst hooks = ['rendered', 'connected', 'disconnected'];\n/**\n * EXPERIMENTAL: This function allows for the registration of \"services\"\n * in LWC by exposing hooks into the component life-cycle. This API is\n * subject to change or being removed.\n */\n\nfunction register(service) {\n  if (true) {\n    assert$1.isTrue(isObject$2(service), `Invalid service declaration, ${service}: service must be an object`);\n  }\n\n  for (let i = 0; i < hooks.length; ++i) {\n    const hookName = hooks[i];\n\n    if (hookName in service) {\n      let l = Services[hookName];\n\n      if (isUndefined$1(l)) {\n        Services[hookName] = l = [];\n      }\n\n      ArrayPush$1.call(l, service[hookName]);\n    }\n  }\n}\nfunction invokeServiceHook(vm, cbs) {\n  if (true) {\n    assert$1.isTrue(isArray$2(cbs) && cbs.length > 0, `Optimize invokeServiceHook() to be invoked only when needed`);\n  }\n\n  const {\n    component,\n    def,\n    context\n  } = vm;\n\n  for (let i = 0, len = cbs.length; i < len; ++i) {\n    cbs[i].call(undefined, component, {}, def, context);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nvar VMState;\n\n(function (VMState) {\n  VMState[VMState[\"created\"] = 0] = \"created\";\n  VMState[VMState[\"connected\"] = 1] = \"connected\";\n  VMState[VMState[\"disconnected\"] = 2] = \"disconnected\";\n})(VMState || (VMState = {}));\n\nlet profilerEnabled$3 = false;\ntrackProfilerState(t => profilerEnabled$3 = t);\nlet idx = 0;\n/** The internal slot used to associate different objects the engine manipulates with the VM */\n\nconst ViewModelReflection = createHiddenField$1('ViewModel', 'engine');\n\nfunction callHook(cmp, fn, args = []) {\n  return fn.apply(cmp, args);\n}\n\nfunction setHook(cmp, prop, newValue) {\n  cmp[prop] = newValue;\n}\n\nfunction getHook(cmp, prop) {\n  return cmp[prop];\n}\n\nfunction rerenderVM(vm) {\n  rehydrate(vm);\n}\nfunction connectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  startGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm); // Usually means moving the element from one place to another, which is observable via\n  // life-cycle hooks.\n\n  if (vm.state === VMState.connected) {\n    disconnectRootElement(elm);\n  }\n\n  runConnectedCallback(vm);\n  rehydrate(vm);\n  endGlobalMeasure(GlobalMeasurementPhase.HYDRATE, vm);\n}\nfunction disconnectRootElement(elm) {\n  const vm = getAssociatedVM(elm);\n  resetComponentStateWhenRemoved(vm);\n}\nfunction appendVM(vm) {\n  rehydrate(vm);\n} // just in case the component comes back, with this we guarantee re-rendering it\n// while preventing any attempt to rehydration until after reinsertion.\n\nfunction resetComponentStateWhenRemoved(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state !== VMState.disconnected) {\n    const {\n      oar,\n      tro\n    } = vm; // Making sure that any observing record will not trigger the rehydrated on this vm\n\n    tro.reset(); // Making sure that any observing accessor record will not trigger the setter to be reinvoked\n\n    for (const key in oar) {\n      oar[key].reset();\n    }\n\n    runDisconnectedCallback(vm); // Spec: https://dom.spec.whatwg.org/#concept-node-remove (step 14-15)\n\n    runShadowChildNodesDisconnectedCallback(vm);\n    runLightChildNodesDisconnectedCallback(vm);\n  }\n\n  if (true) {\n    removeActiveVM(vm);\n  }\n} // this method is triggered by the diffing algo only when a vnode from the\n// old vnode.children is removed from the DOM.\n\n\nfunction removeVM(vm) {\n  if (true) {\n    assert$1.isTrue(vm.state === VMState.connected || vm.state === VMState.disconnected, `${vm} must have been connected.`);\n  }\n\n  resetComponentStateWhenRemoved(vm);\n}\nfunction createVM(elm, def, options) {\n  const {\n    mode,\n    owner,\n    renderer,\n    tagName\n  } = options;\n  const vm = {\n    elm,\n    def,\n    idx: idx++,\n    state: VMState.created,\n    isScheduled: false,\n    isDirty: true,\n    tagName,\n    mode,\n    owner,\n    renderer,\n    children: EmptyArray,\n    aChildren: EmptyArray,\n    velements: EmptyArray,\n    cmpProps: create$1(null),\n    cmpFields: create$1(null),\n    cmpSlots: create$1(null),\n    oar: create$1(null),\n    cmpTemplate: null,\n    context: {\n      hostAttribute: undefined,\n      shadowAttribute: undefined,\n      styleVNode: null,\n      tplCache: EmptyObject,\n      wiredConnecting: EmptyArray,\n      wiredDisconnecting: EmptyArray\n    },\n    tro: null,\n    component: null,\n    cmpRoot: null,\n    callHook,\n    setHook,\n    getHook\n  };\n  vm.tro = getTemplateReactiveObserver(vm);\n\n  if (true) {\n    vm.toString = () => {\n      return `[object:vm ${def.name} (${vm.idx})]`;\n    };\n  } // Create component instance associated to the vm and the element.\n\n\n  createComponent(vm, def.ctor); // Initializing the wire decorator per instance only when really needed\n\n  if (isFalse$1$1(renderer.ssr) && hasWireAdapters(vm)) {\n    installWireAdapters(vm);\n  }\n\n  return vm;\n}\n\nfunction assertIsVM(obj) {\n  if (isNull$1(obj) || !isObject$2(obj) || !('cmpRoot' in obj)) {\n    throw new TypeError(`${obj} is not a VM.`);\n  }\n}\n\nfunction associateVM(obj, vm) {\n  setHiddenField$1(obj, ViewModelReflection, vm);\n}\nfunction getAssociatedVM(obj) {\n  const vm = getHiddenField$1(obj, ViewModelReflection);\n\n  if (true) {\n    assertIsVM(vm);\n  }\n\n  return vm;\n}\nfunction getAssociatedVMIfPresent(obj) {\n  const maybeVm = getHiddenField$1(obj, ViewModelReflection);\n\n  if (true) {\n    if (!isUndefined$1(maybeVm)) {\n      assertIsVM(maybeVm);\n    }\n  }\n\n  return maybeVm;\n}\n\nfunction rehydrate(vm) {\n  if (isTrue$1$1(vm.isDirty)) {\n    const children = renderComponent(vm);\n    patchShadowRoot(vm, children);\n  }\n}\n\nfunction patchShadowRoot(vm, newCh) {\n  const {\n    cmpRoot,\n    children: oldCh\n  } = vm; // caching the new children collection\n\n  vm.children = newCh;\n\n  if (newCh.length > 0 || oldCh.length > 0) {\n    // patch function mutates vnodes by adding the element reference,\n    // however, if patching fails it contains partial changes.\n    if (oldCh !== newCh) {\n      const fn = hasDynamicChildren(newCh) ? updateDynamicChildren : updateStaticChildren;\n      runWithBoundaryProtection(vm, vm, () => {\n        // pre\n        if (profilerEnabled$3) {\n          logOperationStart(OperationId.patch, vm);\n        }\n      }, () => {\n        // job\n        fn(cmpRoot, oldCh, newCh);\n      }, () => {\n        // post\n        if (profilerEnabled$3) {\n          logOperationEnd(OperationId.patch, vm);\n        }\n      });\n    }\n  }\n\n  if (vm.state === VMState.connected) {\n    // If the element is connected, that means connectedCallback was already issued, and\n    // any successive rendering should finish with the call to renderedCallback, otherwise\n    // the connectedCallback will take care of calling it in the right order at the end of\n    // the current rehydration process.\n    runRenderedCallback(vm);\n  }\n}\n\nfunction runRenderedCallback(vm) {\n  if (isTrue$1$1(vm.renderer.ssr)) {\n    return;\n  }\n\n  const {\n    rendered\n  } = Services;\n\n  if (rendered) {\n    invokeServiceHook(vm, rendered);\n  }\n\n  invokeComponentRenderedCallback(vm);\n}\n\nlet rehydrateQueue = [];\n\nfunction flushRehydrationQueue() {\n  startGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n\n  if (true) {\n    assert$1.invariant(rehydrateQueue.length, `If rehydrateQueue was scheduled, it is because there must be at least one VM on this pending queue instead of ${rehydrateQueue}.`);\n  }\n\n  const vms = rehydrateQueue.sort((a, b) => a.idx - b.idx);\n  rehydrateQueue = []; // reset to a new queue\n\n  for (let i = 0, len = vms.length; i < len; i += 1) {\n    const vm = vms[i];\n\n    try {\n      rehydrate(vm);\n    } catch (error) {\n      if (i + 1 < len) {\n        // pieces of the queue are still pending to be rehydrated, those should have priority\n        if (rehydrateQueue.length === 0) {\n          addCallbackToNextTick(flushRehydrationQueue);\n        }\n\n        ArrayUnshift$2.apply(rehydrateQueue, ArraySlice$2.call(vms, i + 1));\n      } // we need to end the measure before throwing.\n\n\n      endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE); // re-throwing the original error will break the current tick, but since the next tick is\n      // already scheduled, it should continue patching the rest.\n\n      throw error; // eslint-disable-line no-unsafe-finally\n    }\n  }\n\n  endGlobalMeasure(GlobalMeasurementPhase.REHYDRATE);\n}\n\nfunction runConnectedCallback(vm) {\n  const {\n    state\n  } = vm;\n\n  if (state === VMState.connected) {\n    return; // nothing to do since it was already connected\n  }\n\n  vm.state = VMState.connected; // reporting connection\n\n  const {\n    connected\n  } = Services;\n\n  if (connected) {\n    invokeServiceHook(vm, connected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    connectWireAdapters(vm);\n  }\n\n  const {\n    connectedCallback\n  } = vm.def;\n\n  if (!isUndefined$1(connectedCallback)) {\n    if (profilerEnabled$3) {\n      logOperationStart(OperationId.connectedCallback, vm);\n    }\n\n    invokeComponentCallback(vm, connectedCallback);\n\n    if (profilerEnabled$3) {\n      logOperationEnd(OperationId.connectedCallback, vm);\n    }\n  }\n}\n\nfunction hasWireAdapters(vm) {\n  return getOwnPropertyNames$1(vm.def.wire).length > 0;\n}\n\nfunction runDisconnectedCallback(vm) {\n  if (true) {\n    assert$1.isTrue(vm.state !== VMState.disconnected, `${vm} must be inserted.`);\n  }\n\n  if (isFalse$1$1(vm.isDirty)) {\n    // this guarantees that if the component is reused/reinserted,\n    // it will be re-rendered because we are disconnecting the reactivity\n    // linking, so mutations are not automatically reflected on the state\n    // of disconnected components.\n    vm.isDirty = true;\n  }\n\n  vm.state = VMState.disconnected; // reporting disconnection\n\n  const {\n    disconnected\n  } = Services;\n\n  if (disconnected) {\n    invokeServiceHook(vm, disconnected);\n  }\n\n  if (hasWireAdapters(vm)) {\n    disconnectWireAdapters(vm);\n  }\n\n  const {\n    disconnectedCallback\n  } = vm.def;\n\n  if (!isUndefined$1(disconnectedCallback)) {\n    if (profilerEnabled$3) {\n      logOperationStart(OperationId.disconnectedCallback, vm);\n    }\n\n    invokeComponentCallback(vm, disconnectedCallback);\n\n    if (profilerEnabled$3) {\n      logOperationEnd(OperationId.disconnectedCallback, vm);\n    }\n  }\n}\n\nfunction runShadowChildNodesDisconnectedCallback(vm) {\n  const {\n    velements: vCustomElementCollection\n  } = vm; // Reporting disconnection for every child in inverse order since they are\n  // inserted in reserved order.\n\n  for (let i = vCustomElementCollection.length - 1; i >= 0; i -= 1) {\n    const {\n      elm\n    } = vCustomElementCollection[i]; // There are two cases where the element could be undefined:\n    // * when there is an error during the construction phase, and an error\n    //   boundary picks it, there is a possibility that the VCustomElement\n    //   is not properly initialized, and therefore is should be ignored.\n    // * when slotted custom element is not used by the element where it is\n    //   slotted into it, as  a result, the custom element was never\n    //   initialized.\n\n    if (!isUndefined$1(elm)) {\n      const childVM = getAssociatedVMIfPresent(elm); // The VM associated with the element might be associated undefined\n      // in the case where the VM failed in the middle of its creation,\n      // eg: constructor throwing before invoking super().\n\n      if (!isUndefined$1(childVM)) {\n        resetComponentStateWhenRemoved(childVM);\n      }\n    }\n  }\n}\n\nfunction runLightChildNodesDisconnectedCallback(vm) {\n  const {\n    aChildren: adoptedChildren\n  } = vm;\n  recursivelyDisconnectChildren(adoptedChildren);\n}\n/**\n * The recursion doesn't need to be a complete traversal of the vnode graph,\n * instead it can be partial, when a custom element vnode is found, we don't\n * need to continue into its children because by attempting to disconnect the\n * custom element itself will trigger the removal of anything slotted or anything\n * defined on its shadow.\n */\n\n\nfunction recursivelyDisconnectChildren(vnodes) {\n  for (let i = 0, len = vnodes.length; i < len; i += 1) {\n    const vnode = vnodes[i];\n\n    if (!isNull$1(vnode) && isArray$2(vnode.children) && !isUndefined$1(vnode.elm)) {\n      // vnode is a VElement with children\n      if (isUndefined$1(vnode.ctor)) {\n        // it is a VElement, just keep looking (recursively)\n        recursivelyDisconnectChildren(vnode.children);\n      } else {\n        // it is a VCustomElement, disconnect it and ignore its children\n        resetComponentStateWhenRemoved(getAssociatedVM(vnode.elm));\n      }\n    }\n  }\n} // This is a super optimized mechanism to remove the content of the shadowRoot without having to go\n// into snabbdom. Especially useful when the reset is a consequence of an error, in which case the\n// children VNodes might not be representing the current state of the DOM.\n\n\nfunction resetShadowRoot(vm) {\n  const {\n    children,\n    cmpRoot,\n    renderer\n  } = vm;\n\n  for (let i = 0, len = children.length; i < len; i++) {\n    const child = children[i];\n\n    if (!isNull$1(child) && !isUndefined$1(child.elm)) {\n      renderer.remove(child.elm, cmpRoot);\n    }\n  }\n\n  vm.children = EmptyArray;\n  runShadowChildNodesDisconnectedCallback(vm);\n  vm.velements = EmptyArray;\n}\nfunction scheduleRehydration(vm) {\n  if (isTrue$1$1(vm.renderer.ssr) || isTrue$1$1(vm.isScheduled)) {\n    return;\n  }\n\n  vm.isScheduled = true;\n\n  if (rehydrateQueue.length === 0) {\n    addCallbackToNextTick(flushRehydrationQueue);\n  }\n\n  ArrayPush$1.call(rehydrateQueue, vm);\n}\n\nfunction getErrorBoundaryVM(vm) {\n  let currentVm = vm;\n\n  while (!isNull$1(currentVm)) {\n    if (!isUndefined$1(currentVm.def.errorCallback)) {\n      return currentVm;\n    }\n\n    currentVm = currentVm.owner;\n  }\n} // slow path routine\n// NOTE: we should probably more this routine to the synthetic shadow folder\n// and get the allocation to be cached by in the elm instead of in the VM\n\n\nfunction allocateInSlot(vm, children) {\n  if (true) {\n    assert$1.invariant(isObject$2(vm.cmpSlots), `When doing manual allocation, there must be a cmpSlots object available.`);\n  }\n\n  const {\n    cmpSlots: oldSlots\n  } = vm;\n  const cmpSlots = vm.cmpSlots = create$1(null);\n\n  for (let i = 0, len = children.length; i < len; i += 1) {\n    const vnode = children[i];\n\n    if (isNull$1(vnode)) {\n      continue;\n    }\n\n    const {\n      data\n    } = vnode;\n    const slotName = data.attrs && data.attrs.slot || '';\n    const vnodes = cmpSlots[slotName] = cmpSlots[slotName] || []; // re-keying the vnodes is necessary to avoid conflicts with default content for the slot\n    // which might have similar keys. Each vnode will always have a key that\n    // starts with a numeric character from compiler. In this case, we add a unique\n    // notation for slotted vnodes keys, e.g.: `@foo:1:1`\n\n    if (!isUndefined$1(vnode.key)) {\n      vnode.key = `@${slotName}:${vnode.key}`;\n    }\n\n    ArrayPush$1.call(vnodes, vnode);\n  }\n\n  if (isFalse$1$1(vm.isDirty)) {\n    // We need to determine if the old allocation is really different from the new one\n    // and mark the vm as dirty\n    const oldKeys = keys$1(oldSlots);\n\n    if (oldKeys.length !== keys$1(cmpSlots).length) {\n      markComponentAsDirty(vm);\n      return;\n    }\n\n    for (let i = 0, len = oldKeys.length; i < len; i += 1) {\n      const key = oldKeys[i];\n\n      if (isUndefined$1(cmpSlots[key]) || oldSlots[key].length !== cmpSlots[key].length) {\n        markComponentAsDirty(vm);\n        return;\n      }\n\n      const oldVNodes = oldSlots[key];\n      const vnodes = cmpSlots[key];\n\n      for (let j = 0, a = cmpSlots[key].length; j < a; j += 1) {\n        if (oldVNodes[j] !== vnodes[j]) {\n          markComponentAsDirty(vm);\n          return;\n        }\n      }\n    }\n  }\n}\nfunction runWithBoundaryProtection(vm, owner, pre, job, post) {\n  let error;\n  pre();\n\n  try {\n    job();\n  } catch (e) {\n    error = Object(e);\n  } finally {\n    post();\n\n    if (!isUndefined$1(error)) {\n      addErrorComponentStack(vm, error);\n      const errorBoundaryVm = isNull$1(owner) ? undefined : getErrorBoundaryVM(owner);\n\n      if (isUndefined$1(errorBoundaryVm)) {\n        throw error; // eslint-disable-line no-unsafe-finally\n      }\n\n      resetShadowRoot(vm); // remove offenders\n\n      if (profilerEnabled$3) {\n        logOperationStart(OperationId.errorCallback, vm);\n      } // error boundaries must have an ErrorCallback\n\n\n      const errorCallback = errorBoundaryVm.def.errorCallback;\n      invokeComponentCallback(errorBoundaryVm, errorCallback, [error, error.wcStack]);\n\n      if (profilerEnabled$3) {\n        logOperationEnd(OperationId.errorCallback, vm);\n      }\n    }\n  }\n}\nfunction forceRehydration(vm) {\n  // if we must reset the shadowRoot content and render the template\n  // from scratch on an active instance, the way to force the reset\n  // is by replacing the value of old template, which is used during\n  // to determine if the template has changed or not during the rendering\n  // process. If the template returned by render() is different from the\n  // previous stored template, the styles will be reset, along with the\n  // content of the shadowRoot, this way we can guarantee that all children\n  // elements will be throw away, and new instances will be created.\n  vm.cmpTemplate = () => [];\n\n  if (isFalse$1$1(vm.isDirty)) {\n    // forcing the vm to rehydrate in the next tick\n    markComponentAsDirty(vm);\n    scheduleRehydration(vm);\n  }\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst DeprecatedWiredElementHost = '$$DeprecatedWiredElementHostKey$$';\nconst DeprecatedWiredParamsMeta = '$$DeprecatedWiredParamsMetaKey$$';\nconst WireMetaMap = new Map();\n\nfunction noop$4() {}\n\nclass WireContextRegistrationEvent extends CustomEvent {\n  constructor(adapterToken, {\n    setNewContext,\n    setDisconnectedCallback\n  }) {\n    super(adapterToken, {\n      bubbles: true,\n      composed: true\n    });\n    defineProperties$1(this, {\n      setNewContext: {\n        value: setNewContext\n      },\n      setDisconnectedCallback: {\n        value: setDisconnectedCallback\n      }\n    });\n  }\n\n}\n\nfunction createFieldDataCallback(vm, name) {\n  const {\n    cmpFields\n  } = vm;\n  return value => {\n    if (value !== vm.cmpFields[name]) {\n      // storing the value in the underlying storage\n      cmpFields[name] = value;\n      componentValueMutated(vm, name);\n    }\n  };\n}\n\nfunction createMethodDataCallback(vm, method) {\n  return value => {\n    // dispatching new value into the wired method\n    runWithBoundaryProtection(vm, vm.owner, noop$4, () => {\n      // job\n      method.call(vm.component, value);\n    }, noop$4);\n  };\n}\n\nfunction createConfigWatcher(component, configCallback, callbackWhenConfigIsReady) {\n  let hasPendingConfig = false; // creating the reactive observer for reactive params when needed\n\n  const ro = new ReactiveObserver(() => {\n    if (hasPendingConfig === false) {\n      hasPendingConfig = true; // collect new config in the micro-task\n\n      Promise.resolve().then(() => {\n        hasPendingConfig = false; // resetting current reactive params\n\n        ro.reset(); // dispatching a new config due to a change in the configuration\n\n        computeConfigAndUpdate();\n      });\n    }\n  });\n\n  const computeConfigAndUpdate = () => {\n    let config;\n    ro.observe(() => config = configCallback(component)); // eslint-disable-next-line lwc-internal/no-invalid-todo\n    // TODO: dev-mode validation of config based on the adapter.configSchema\n    // @ts-ignore it is assigned in the observe() callback\n\n    callbackWhenConfigIsReady(config);\n  };\n\n  return {\n    computeConfigAndUpdate,\n    ro\n  };\n}\n\nfunction createContextWatcher(vm, wireDef, callbackWhenContextIsReady) {\n  const {\n    adapter\n  } = wireDef;\n  const adapterContextToken = getAdapterToken(adapter);\n\n  if (isUndefined$1(adapterContextToken)) {\n    return; // no provider found, nothing to be done\n  }\n\n  const {\n    elm,\n    renderer,\n    context: {\n      wiredConnecting,\n      wiredDisconnecting\n    }\n  } = vm; // waiting for the component to be connected to formally request the context via the token\n\n  ArrayPush$1.call(wiredConnecting, () => {\n    // This event is responsible for connecting the host element with another\n    // element in the composed path that is providing contextual data. The provider\n    // must be listening for a special dom event with the name corresponding to the value of\n    // `adapterContextToken`, which will remain secret and internal to this file only to\n    // guarantee that the linkage can be forged.\n    const contextRegistrationEvent = new WireContextRegistrationEvent(adapterContextToken, {\n      setNewContext(newContext) {\n        // eslint-disable-next-line lwc-internal/no-invalid-todo\n        // TODO: dev-mode validation of config based on the adapter.contextSchema\n        callbackWhenContextIsReady(newContext);\n      },\n\n      setDisconnectedCallback(disconnectCallback) {\n        // adds this callback into the disconnect bucket so it gets disconnected from parent\n        // the the element hosting the wire is disconnected\n        ArrayPush$1.call(wiredDisconnecting, disconnectCallback);\n      }\n\n    });\n    renderer.dispatchEvent(elm, contextRegistrationEvent);\n  });\n}\n\nfunction createConnector(vm, name, wireDef) {\n  const {\n    method,\n    adapter,\n    configCallback,\n    dynamic\n  } = wireDef;\n  const dataCallback = isUndefined$1(method) ? createFieldDataCallback(vm, name) : createMethodDataCallback(vm, method);\n  let context;\n  let connector; // Workaround to pass the component element associated to this wire adapter instance.\n\n  defineProperty$1(dataCallback, DeprecatedWiredElementHost, {\n    value: vm.elm\n  });\n  defineProperty$1(dataCallback, DeprecatedWiredParamsMeta, {\n    value: dynamic\n  });\n  runWithBoundaryProtection(vm, vm, noop$4, () => {\n    // job\n    connector = new adapter(dataCallback);\n  }, noop$4);\n\n  const updateConnectorConfig = config => {\n    // every time the config is recomputed due to tracking,\n    // this callback will be invoked with the new computed config\n    runWithBoundaryProtection(vm, vm, noop$4, () => {\n      // job\n      connector.update(config, context);\n    }, noop$4);\n  }; // Computes the current wire config and calls the update method on the wire adapter.\n  // If it has params, we will need to observe changes in the next tick.\n\n\n  const {\n    computeConfigAndUpdate,\n    ro\n  } = createConfigWatcher(vm.component, configCallback, updateConnectorConfig); // if the adapter needs contextualization, we need to watch for new context and push it alongside the config\n\n  if (!isUndefined$1(adapter.contextSchema)) {\n    createContextWatcher(vm, wireDef, newContext => {\n      // every time the context is pushed into this component,\n      // this callback will be invoked with the new computed context\n      if (context !== newContext) {\n        context = newContext; // Note: when new context arrives, the config will be recomputed and pushed along side the new\n        // context, this is to preserve the identity characteristics, config should not have identity\n        // (ever), while context can have identity\n\n        if (vm.state === VMState.connected) {\n          computeConfigAndUpdate();\n        }\n      }\n    });\n  }\n\n  return {\n    // @ts-ignore the boundary protection executes sync, connector is always defined\n    connector,\n    computeConfigAndUpdate,\n    resetConfigWatcher: () => ro.reset()\n  };\n}\n\nconst AdapterToTokenMap = new Map();\nfunction getAdapterToken(adapter) {\n  return AdapterToTokenMap.get(adapter);\n}\nfunction setAdapterToken(adapter, token) {\n  AdapterToTokenMap.set(adapter, token);\n}\nfunction storeWiredMethodMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const method = descriptor.value;\n  const def = {\n    adapter,\n    method,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\nfunction storeWiredFieldMeta(descriptor, adapter, configCallback, dynamic) {\n  // support for callable adapters\n  if (adapter.adapter) {\n    adapter = adapter.adapter;\n  }\n\n  const def = {\n    adapter,\n    configCallback,\n    dynamic\n  };\n  WireMetaMap.set(descriptor, def);\n}\nfunction installWireAdapters(vm) {\n  const {\n    context,\n    def: {\n      wire\n    }\n  } = vm;\n  const wiredConnecting = context.wiredConnecting = [];\n  const wiredDisconnecting = context.wiredDisconnecting = [];\n\n  for (const fieldNameOrMethod in wire) {\n    const descriptor = wire[fieldNameOrMethod];\n    const wireDef = WireMetaMap.get(descriptor);\n\n    if (true) {\n      assert$1.invariant(wireDef, `Internal Error: invalid wire definition found.`);\n    }\n\n    if (!isUndefined$1(wireDef)) {\n      const {\n        connector,\n        computeConfigAndUpdate,\n        resetConfigWatcher\n      } = createConnector(vm, fieldNameOrMethod, wireDef);\n      const hasDynamicParams = wireDef.dynamic.length > 0;\n      ArrayPush$1.call(wiredConnecting, () => {\n        connector.connect();\n\n        if (hasDynamicParams) {\n          Promise.resolve().then(computeConfigAndUpdate);\n        } else {\n          computeConfigAndUpdate();\n        }\n      });\n      ArrayPush$1.call(wiredDisconnecting, () => {\n        connector.disconnect();\n        resetConfigWatcher();\n      });\n    }\n  }\n}\nfunction connectWireAdapters(vm) {\n  const {\n    wiredConnecting\n  } = vm.context;\n\n  for (let i = 0, len = wiredConnecting.length; i < len; i += 1) {\n    wiredConnecting[i]();\n  }\n}\nfunction disconnectWireAdapters(vm) {\n  const {\n    wiredDisconnecting\n  } = vm.context;\n  runWithBoundaryProtection(vm, vm, noop$4, () => {\n    // job\n    for (let i = 0, len = wiredDisconnecting.length; i < len; i += 1) {\n      wiredDisconnecting[i]();\n    }\n  }, noop$4);\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n\nfunction createContextProvider(adapter) {\n  let adapterContextToken = getAdapterToken(adapter);\n\n  if (!isUndefined$1(adapterContextToken)) {\n    throw new Error(`Adapter already has a context provider.`);\n  }\n\n  adapterContextToken = guid();\n  setAdapterToken(adapter, adapterContextToken);\n  const providers = new WeakSet();\n  return (elm, options) => {\n    if (providers.has(elm)) {\n      throw new Error(`Adapter was already installed on ${elm}.`);\n    }\n\n    providers.add(elm);\n    const {\n      consumerConnectedCallback,\n      consumerDisconnectedCallback\n    } = options;\n    elm.addEventListener(adapterContextToken, evt => {\n      const {\n        setNewContext,\n        setDisconnectedCallback\n      } = evt;\n      const consumer = {\n        provide(newContext) {\n          setNewContext(newContext);\n        }\n\n      };\n\n      const disconnectCallback = () => {\n        if (!isUndefined$1(consumerDisconnectedCallback)) {\n          consumerDisconnectedCallback(consumer);\n        }\n      };\n\n      setDisconnectedCallback(disconnectCallback);\n      consumerConnectedCallback(consumer);\n      evt.stopImmediatePropagation();\n    });\n  };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function allows you to create a reactive readonly\n * membrane around any object value. This API is subject to change or\n * being removed.\n */\n\nfunction readonly(obj) {\n  if (true) {\n    // TODO [#1292]: Remove the readonly decorator\n    if (arguments.length !== 1) {\n      assert$1.fail('@readonly cannot be used as a decorator just yet, use it as a function with one argument to produce a readonly version of the provided value.');\n    }\n  }\n\n  return reactiveMembrane.getReadOnlyProxy(obj);\n}\n/* version: 1.17.5 */\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst globalStylesheets = create(null);\nconst globalStylesheetsParentElement = document.head || document.body || document;\nlet getCustomElement, defineCustomElement, HTMLElementConstructor$1;\nfunction isCustomElementRegistryAvailable() {\n    if (typeof customElements === 'undefined') {\n        return false;\n    }\n    try {\n        // dereference HTMLElement global because babel wraps globals in compat mode with a\n        // _wrapNativeSuper()\n        // This is a problem because LWCUpgradableElement extends renderer.HTMLElement which does not\n        // get wrapped by babel.\n        const HTMLElementAlias = HTMLElement;\n        // In case we use compat mode with a modern browser, the compat mode transformation\n        // invokes the DOM api with an .apply() or .call() to initialize any DOM api sub-classing,\n        // which are not equipped to be initialized that way.\n        class clazz extends HTMLElementAlias {\n        }\n        customElements.define('lwc-test-' + Math.floor(Math.random() * 1000000), clazz);\n        new clazz();\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nif (isCustomElementRegistryAvailable()) {\n    getCustomElement = customElements.get.bind(customElements);\n    defineCustomElement = customElements.define.bind(customElements);\n    HTMLElementConstructor$1 = HTMLElement;\n}\nelse {\n    const registry = create(null);\n    const reverseRegistry = new WeakMap();\n    defineCustomElement = function define(name, ctor) {\n        if (name !== StringToLowerCase.call(name) || registry[name]) {\n            throw new TypeError(`Invalid Registration`);\n        }\n        registry[name] = ctor;\n        reverseRegistry.set(ctor, name);\n    };\n    getCustomElement = function get(name) {\n        return registry[name];\n    };\n    HTMLElementConstructor$1 = function HTMLElement() {\n        if (!(this instanceof HTMLElement)) {\n            throw new TypeError(`Invalid Invocation`);\n        }\n        const { constructor } = this;\n        const name = reverseRegistry.get(constructor);\n        if (!name) {\n            throw new TypeError(`Invalid Construction`);\n        }\n        const elm = document.createElement(name);\n        setPrototypeOf(elm, constructor.prototype);\n        return elm;\n    };\n    HTMLElementConstructor$1.prototype = HTMLElement.prototype;\n}\n// TODO [#0]: Evaluate how we can extract the `$shadowToken$` property name in a shared package\n// to avoid having to synchronize it between the different modules.\nconst useSyntheticShadow = hasOwnProperty.call(Element.prototype, '$shadowToken$');\nconst renderer = {\n    ssr: false,\n    syntheticShadow: useSyntheticShadow,\n    createElement(tagName, namespace) {\n        return isUndefined(namespace)\n            ? document.createElement(tagName)\n            : document.createElementNS(namespace, tagName);\n    },\n    createText(content) {\n        return document.createTextNode(content);\n    },\n    insert(node, parent, anchor) {\n        parent.insertBefore(node, anchor);\n    },\n    remove(node, parent) {\n        parent.removeChild(node);\n    },\n    nextSibling(node) {\n        return node.nextSibling;\n    },\n    attachShadow(element, options) {\n        return element.attachShadow(options);\n    },\n    setText(node, content) {\n        node.nodeValue = content;\n    },\n    getProperty(node, key) {\n        return node[key];\n    },\n    setProperty(node, key, value) {\n        if (true) {\n            if (node instanceof Element && !(key in node)) {\n                // TODO [#1297]: Move this validation to the compiler\n                assert.fail(`Unknown public property \"${key}\" of element <${node.tagName}>. This is likely a typo on the corresponding attribute \"${htmlPropertyToAttribute(key)}\".`);\n            }\n        }\n        node[key] = value;\n    },\n    getAttribute(element, name, namespace) {\n        return isUndefined(namespace)\n            ? element.getAttribute(name)\n            : element.getAttributeNS(namespace, name);\n    },\n    setAttribute(element, name, value, namespace) {\n        return isUndefined(namespace)\n            ? element.setAttribute(name, value)\n            : element.setAttributeNS(namespace, name, value);\n    },\n    removeAttribute(element, name, namespace) {\n        if (isUndefined(namespace)) {\n            element.removeAttribute(name);\n        }\n        else {\n            element.removeAttributeNS(namespace, name);\n        }\n    },\n    addEventListener(target, type, callback, options) {\n        target.addEventListener(type, callback, options);\n    },\n    removeEventListener(target, type, callback, options) {\n        target.removeEventListener(type, callback, options);\n    },\n    dispatchEvent(target, event) {\n        return target.dispatchEvent(event);\n    },\n    getClassList(element) {\n        return element.classList;\n    },\n    setCSSStyleProperty(element, name, value) {\n        // TODO [#0]: How to avoid this type casting? Shall we use a different type interface to\n        // represent elements in the engine?\n        element.style.setProperty(name, value);\n    },\n    getBoundingClientRect(element) {\n        return element.getBoundingClientRect();\n    },\n    querySelector(element, selectors) {\n        return element.querySelector(selectors);\n    },\n    querySelectorAll(element, selectors) {\n        return element.querySelectorAll(selectors);\n    },\n    getElementsByTagName(element, tagNameOrWildCard) {\n        return element.getElementsByTagName(tagNameOrWildCard);\n    },\n    getElementsByClassName(element, names) {\n        return element.getElementsByClassName(names);\n    },\n    isConnected(node) {\n        return node.isConnected;\n    },\n    insertGlobalStylesheet(content) {\n        if (!isUndefined(globalStylesheets[content])) {\n            return;\n        }\n        globalStylesheets[content] = true;\n        const elm = document.createElement('style');\n        elm.type = 'text/css';\n        elm.textContent = content;\n        globalStylesheetsParentElement.appendChild(elm);\n    },\n    assertInstanceOfHTMLElement(elm, msg) {\n        assert.invariant(elm instanceof HTMLElement, msg);\n    },\n    defineCustomElement,\n    getCustomElement,\n    HTMLElement: HTMLElementConstructor$1,\n};\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * This function builds a Web Component class from a LWC constructor so it can be\n * registered as a new element via customElements.define() at any given time.\n *\n * @deprecated since version 1.3.11\n *\n * @example\n * ```\n * import { buildCustomElementConstructor } from 'lwc';\n * import Foo from 'ns/foo';\n * const WC = buildCustomElementConstructor(Foo);\n * customElements.define('x-foo', WC);\n * const elm = document.createElement('x-foo');\n * ```\n */\nfunction deprecatedBuildCustomElementConstructor(Ctor) {\n    if (true) {\n        /* eslint-disable-next-line no-console */\n        console.warn('Deprecated function called: \"buildCustomElementConstructor\" function is deprecated and it will be removed.' +\n            `Use \"${Ctor.name}.CustomElementConstructor\" static property of the component constructor to access the corresponding custom element constructor instead.`);\n    }\n    return Ctor.CustomElementConstructor;\n}\nfunction buildCustomElementConstructor(Ctor) {\n    const def = getComponentInternalDef(Ctor);\n    return class extends def.bridge {\n        constructor() {\n            super();\n            createVM(this, def, {\n                mode: 'open',\n                owner: null,\n                tagName: this.tagName,\n                renderer,\n            });\n        }\n        connectedCallback() {\n            connectRootElement(this);\n        }\n        disconnectedCallback() {\n            disconnectRootElement(this);\n        }\n    };\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ConnectingSlot = createHiddenField('connecting', 'engine');\nconst DisconnectingSlot = createHiddenField('disconnecting', 'engine');\nfunction callNodeSlot(node, slot) {\n    if (true) {\n        assert.isTrue(node, `callNodeSlot() should not be called for a non-object`);\n    }\n    const fn = getHiddenField(node, slot);\n    if (!isUndefined(fn)) {\n        fn(node);\n    }\n    return node; // for convenience\n}\n// Monkey patching Node methods to be able to detect the insertions and removal of root elements\n// created via createElement.\nconst { appendChild, insertBefore, removeChild, replaceChild } = Node.prototype;\nassign(Node.prototype, {\n    appendChild(newChild) {\n        const appendedNode = appendChild.call(this, newChild);\n        return callNodeSlot(appendedNode, ConnectingSlot);\n    },\n    insertBefore(newChild, referenceNode) {\n        const insertedNode = insertBefore.call(this, newChild, referenceNode);\n        return callNodeSlot(insertedNode, ConnectingSlot);\n    },\n    removeChild(oldChild) {\n        const removedNode = removeChild.call(this, oldChild);\n        return callNodeSlot(removedNode, DisconnectingSlot);\n    },\n    replaceChild(newChild, oldChild) {\n        const replacedNode = replaceChild.call(this, newChild, oldChild);\n        callNodeSlot(replacedNode, DisconnectingSlot);\n        callNodeSlot(newChild, ConnectingSlot);\n        return replacedNode;\n    },\n});\n/**\n * EXPERIMENTAL: This function is almost identical to document.createElement with the slightly\n * difference that in the options, you can pass the `is` property set to a Constructor instead of\n * just a string value. The intent is to allow the creation of an element controlled by LWC without\n * having to register the element as a custom element.\n *\n * @example\n * ```\n * const el = createElement('x-foo', { is: FooCtor });\n * ```\n */\nfunction createElement(sel, options) {\n    if (!isObject$1(options) || isNull(options)) {\n        throw new TypeError(`\"createElement\" function expects an object as second parameter but received \"${toString(options)}\".`);\n    }\n    const Ctor = options.is;\n    if (!isFunction(Ctor)) {\n        throw new TypeError(`\"createElement\" function expects an \"is\" option with a valid component constructor.`);\n    }\n    const UpgradableConstructor = getUpgradableConstructor(sel, renderer);\n    let wasComponentUpgraded = false;\n    // the custom element from the registry is expecting an upgrade callback\n    /**\n     * Note: if the upgradable constructor does not expect, or throw when we new it\n     * with a callback as the first argument, we could implement a more advanced\n     * mechanism that only passes that argument if the constructor is known to be\n     * an upgradable custom element.\n     */\n    const element = new UpgradableConstructor((elm) => {\n        const def = getComponentInternalDef(Ctor);\n        createVM(elm, def, {\n            tagName: sel,\n            mode: options.mode !== 'closed' ? 'open' : 'closed',\n            owner: null,\n            renderer,\n        });\n        setHiddenField(elm, ConnectingSlot, connectRootElement);\n        setHiddenField(elm, DisconnectingSlot, disconnectRootElement);\n        wasComponentUpgraded = true;\n    });\n    if (!wasComponentUpgraded) {\n        /* eslint-disable-next-line no-console */\n        console.error(`Unexpected tag name \"${sel}\". This name is a registered custom element, preventing LWC to upgrade the element.`);\n    }\n    return element;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function provides access to the component constructor, given an HTMLElement.\n * This API is subject to change or being removed.\n */\nfunction getComponentConstructor(elm) {\n    let ctor = null;\n    if (elm instanceof HTMLElement) {\n        const vm = getAssociatedVMIfPresent(elm);\n        if (!isUndefined(vm)) {\n            ctor = vm.def.ctor;\n        }\n    }\n    return ctor;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\n/**\n * EXPERIMENTAL: This function detects whether or not a Node is controlled by a LWC template. This\n * API is subject to change or being removed.\n */\nfunction isNodeFromTemplate(node) {\n    if (isFalse$1(node instanceof Node)) {\n        return false;\n    }\n    // TODO [#1250]: skipping the shadowRoot instances itself makes no sense, we need to revisit\n    // this with locker\n    if (node instanceof ShadowRoot) {\n        return false;\n    }\n    if (useSyntheticShadow) {\n        // TODO [#1252]: old behavior that is still used by some pieces of the platform,\n        // specifically, nodes inserted manually on places where `lwc:dom=\"manual\"` directive is not\n        // used, will be considered global elements.\n        if (isUndefined(node.$shadowResolver$)) {\n            return false;\n        }\n    }\n    const root = node.getRootNode();\n    return root instanceof ShadowRoot;\n}\n\n/*\n * Copyright (c) 2018, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: MIT\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/MIT\n */\nconst ComponentConstructorToCustomElementConstructorMap = new Map();\nfunction getCustomElementConstructor(Ctor) {\n    if (Ctor === BaseLightningElement) {\n        throw new TypeError(`Invalid Constructor. LightningElement base class can't be claimed as a custom element.`);\n    }\n    let ce = ComponentConstructorToCustomElementConstructorMap.get(Ctor);\n    if (isUndefined(ce)) {\n        ce = buildCustomElementConstructor(Ctor);\n        ComponentConstructorToCustomElementConstructorMap.set(Ctor, ce);\n    }\n    return ce;\n}\n/**\n * This static getter builds a Web Component class from a LWC constructor so it can be registered\n * as a new element via customElements.define() at any given time. E.g.:\n *\n *      import Foo from 'ns/foo';\n *      customElements.define('x-foo', Foo.CustomElementConstructor);\n *      const elm = document.createElement('x-foo');\n *\n */\ndefineProperty(BaseLightningElement, 'CustomElementConstructor', {\n    get() {\n        return getCustomElementConstructor(this);\n    },\n});\nfreeze(BaseLightningElement);\nseal(BaseLightningElement.prototype);\n\nexports.LightningElement = BaseLightningElement;\nexports.__unstable__ProfilerControl = profilerControl;\nexports.api = api;\nexports.buildCustomElementConstructor = deprecatedBuildCustomElementConstructor;\nexports.createContextProvider = createContextProvider;\nexports.createElement = createElement;\nexports.getComponentConstructor = getComponentConstructor;\nexports.getComponentDef = getComponentDef;\nexports.isComponentConstructor = isComponentConstructor;\nexports.isNodeFromTemplate = isNodeFromTemplate;\nexports.readonly = readonly;\nexports.register = register;\nexports.registerComponent = registerComponent;\nexports.registerDecorators = registerDecorators;\nexports.registerTemplate = registerTemplate;\nexports.sanitizeAttribute = sanitizeAttribute;\nexports.setFeatureFlag = setFeatureFlag;\nexports.setFeatureFlagForTest = setFeatureFlagForTest;\nexports.swapComponent = swapComponent;\nexports.swapStyle = swapStyle;\nexports.swapTemplate = swapTemplate;\nexports.track = track;\nexports.unwrap = unwrap$1;\nexports.wire = wire;\n/* version: 1.17.5 */\n\n\n//# sourceURL=webpack://mfe-nav/./node_modules/@lwc/engine/dist/engine.cjs.js?");

/***/ }),

/***/ "./node_modules/lodash/lodash.js":
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports =  true && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return _;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else {}\n}.call(this));\n\n\n//# sourceURL=webpack://mfe-nav/./node_modules/lodash/lodash.js?");

/***/ }),

/***/ "./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.css":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.css ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction stylesheet(hostSelector, shadowSelector, nativeShadow) {\n  return [\"*\", shadowSelector, \",\", shadowSelector, \" :after,\", shadowSelector, \" :before {box-sizing: border-box;}\\ndiv\", shadowSelector, \" {font-family: \\\"Salesforce Sans\\\", Helvetica, Arial, sans-serif;font-size: 15px;line-height: 1.42857143;color: #032d60;}\\ndiv\", shadowSelector, \" .child-menu\", shadowSelector, \" {color: #215ca0;}\\n.menu-section\", shadowSelector, \" h3\", shadowSelector, \" {all: unset;}\\n.h4\", shadowSelector, \" {font-weight: 400;font-size: 15px !important;line-height: 18px !important;}\\nbutton\", shadowSelector, \" {cursor: pointer;}\\n.hide\", shadowSelector, \" {display: none !important;}\\n.show\", shadowSelector, \" {display: block !important;}\\n.hidden\", shadowSelector, \" {display: none !important;visibility: hidden !important;}\\n@media (max-width: 767px) {.hidden-xs\", shadowSelector, \" {display: none !important;}\\n}@media (min-width: 768px) and (max-width: 1023px) {.hidden-sm\", shadowSelector, \" {display: none !important;}\\n}@media (min-width: 1024px) and (max-width: 1311px) {.hidden-md\", shadowSelector, \" {display: none !important;}\\n}@media (min-width: 1312px) {.hidden-lg\", shadowSelector, \" {display: none !important;}\\n}.horizontalNavComponent\", shadowSelector, \" {font-family: 'Salesforce Sans';}\\nbody.nav-open\", shadowSelector, \" {overflow-y: hidden;}\\n.horizontalNavComponent\", shadowSelector, \" button:active\", shadowSelector, \" {outline: none;border: none;}\\n.horizontalNavComponent\", shadowSelector, \" ul\", shadowSelector, \" {padding: 0;margin: 0;list-style: none;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .hide-desktop\", shadowSelector, \" {display: none !important;}\\n}@media (max-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" .hide-mobile\", shadowSelector, \" {display: none !important;}\\n}@media (min-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" {top: 0;left: 0;right: 0;z-index: 1000;background-color: #fff;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" {margin: 0 auto;position: relative;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" {width: 1020px;height: 107px;display: -webkit-box;display: -ms-flexbox;display: flex !important;align-items: center;}\\n}@media (min-width: 1312px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" {width: 1312px;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .overlay\", shadowSelector, \" {position: fixed;display: none;z-index: -1;background-color: #1e1e1e;opacity: 0;top: 0;bottom: 0;right: 0;left: 0;z-index: 1014;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .overlay\", shadowSelector, \" {z-index: -1;}\\n}@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .overlay-show\", shadowSelector, \" {display: block;opacity: 0.6;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .overlay-hide\", shadowSelector, \" {display: none;opacity: 0;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container.active\", shadowSelector, \" .main-menu-container\", shadowSelector, \" {right: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container.active\", shadowSelector, \" .overlay\", shadowSelector, \" {display: block;opacity: 0.6;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" {display: inline-block;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" {flex: 0;align-self: stretch;display: flex;align-items: center;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .inner\", shadowSelector, \" {margin-left: 20px;}\\n}@media (min-width: 1025px) and (max-width: 1311px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .inner\", shadowSelector, \" {margin-left: 10px;}\\n}@media (max-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" {min-height: 54px;margin-bottom: -5px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .inner\", shadowSelector, \" {position: fixed;top: 0;width: 100%;z-index: 1013;text-align: left;border-bottom: 1px solid #c1b9b4;background-color: #fff;min-height: 54px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \":before {content: ' ';position: absolute;top: 0;right: 0;bottom: 0;left: 0;z-index: -1;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" a\", shadowSelector, \" {display: inline-block;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .icon-bar\", shadowSelector, \" {display: block;position: relative;background-color: #00a1e0;width: 29px;height: 4px;margin: 5px 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .icon-bar:nth-child(3)\", shadowSelector, \":after, .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .icon-bar:nth-child(3)\", shadowSelector, \":before {position: absolute;top: 0;bottom: 0;left: 0;right: 0;content: ' ';}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .horizontal-navbar-toggle\", shadowSelector, \" {background: transparent;position: absolute;right: 0;height: 54px;width: 54px;padding: 9px 10px;border: none;display: block;top: 0;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .horizontal-navbar-toggle\", shadowSelector, \" {display: none;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" a.logo\", shadowSelector, \" {display: inline-block;position: absolute;top: 0;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" a.logo\", shadowSelector, \" {position: inherit;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" a.logo\", shadowSelector, \" img\", shadowSelector, \" {margin: 7px 0 7px 10px;width: 60px;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" a.logo\", shadowSelector, \" img\", shadowSelector, \" {width: 81px;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" {text-align: center;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" {display: none;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .btn-container\", shadowSelector, \" a.btn\", shadowSelector, \" {display: table-cell;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" {text-align: center;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" .buttonCTAComponent\", shadowSelector, \" {display: inline-block;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" {display: none;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" .btn-container\", shadowSelector, \" a.btn\", shadowSelector, \" {display: table-cell;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" {position: fixed;bottom: 0;top: 54px;background-color: #00a1e0;right: -325px;width: 325px;transition: all 0.3s ease;z-index: 1015;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer.active\", shadowSelector, \" {right: 0;margin-top: 20px;}\\n@media (max-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer.active\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" {overflow-y: scroll;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" {top: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .freeTrial-container\", shadowSelector, \" .freeTrialHeader\", shadowSelector, \" {padding: 20px 10px 0 21px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .freeTrial-container\", shadowSelector, \" .freeTrialHeader\", shadowSelector, \" > span\", shadowSelector, \" {display: block;color: #fff;font-size: 16px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .freeTrial-container\", shadowSelector, \" .freeTrialHeader\", shadowSelector, \" > span.subHeader\", shadowSelector, \" {font-size: 14px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" .loading-icon\", shadowSelector, \" {background: url(https://secure2.sfdcstatic.com/common/assets/images/global-navigation/loading-icon.gif)\\n        50% no-repeat;width: 40px;height: 30px;position: absolute;top: 250px;left: 50%;margin-left: -20px;z-index: 1;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .free-trial-drawer\", shadowSelector, \" iframe\", shadowSelector, \" {border: none;width: 100%;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \",.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .offer-cta-container\", shadowSelector, \" {position: absolute;bottom: 0;right: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" {display: none;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" {position: absolute;right: 0;top: 0;justify-content: center;display: block;float: right;text-align: right;align-items: center;align-content: center;padding-top: 10px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" > div\", shadowSelector, \" {display: inline-block;vertical-align: middle;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .display-phone\", shadowSelector, \" {font-size: 16px;color: #222;margin-right: 10px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .dropdown\", shadowSelector, \" a.dropdown-toggle\", shadowSelector, \" {white-space: nowrap;cursor: pointer;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .dropdown\", shadowSelector, \" .dropdown-menu\", shadowSelector, \" .display-phone\", shadowSelector, \" {font-size: 13px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .dropdown\", shadowSelector, \" .dropdown-menu\", shadowSelector, \" span.display-phone\", shadowSelector, \" {display: block;padding: 3px 20px;clear: both;font-weight: 400;line-height: 1.42857143;white-space: nowrap;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .dropdown:active\", shadowSelector, \" .dropdown-menu\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .dropdown:hover\", shadowSelector, \" .dropdown-menu\", shadowSelector, \" {display: block;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .search-form\", shadowSelector, \" {margin-right: 10px;max-height: 35px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" {border: 5px solid #f4f4f4;border-radius: 0 !important;padding: 10px 0;margin-top: 9px !important;left: 25%;-webkit-box-shadow: none;-moz-box-shadow: none;box-shadow: none;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \":before {content: '';position: absolute;left: 50%;top: -14px;width: 0;height: 0;border-color: transparent transparent #f4f4f4;border-style: solid;border-width: 0 14px 14px;margin: 0 0 0 -14px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \":after {content: '';position: absolute;left: 0;top: -18px;width: 100%;height: 26px;background-color: transparent;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" {padding: 5px 0;font-size: 13px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" > a\", shadowSelector, \" {color: #215ca0;cursor: pointer;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" > a:hover\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" a:focus\", shadowSelector, \" {background-color: #fff !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" .flyout-menu-icon\", shadowSelector, \" {font-size: 20px;margin: 0 10px 0 0;vertical-align: middle;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" .flyout-menu-icon.text-casper\", shadowSelector, \" {color: #9faab5 !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" {width: 277px;margin-bottom: -4px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" {margin: 0;right: 0;left: auto;padding: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \":before {content: '';position: absolute;left: 78%;top: -14px;width: 0;height: 0;border-color: transparent transparent #f4f4f4;border-style: solid;border-width: 0 14px 14px;margin: 0 0 0 -14px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \":after {margin-left: 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" {border-bottom: 1px solid #ddd;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" > h1\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" h2\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" h3\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" h4\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" h5\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" h6\", shadowSelector, \" {padding: 10px 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" {width: 277px;margin-bottom: -4px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" {box-shadow: none !important;margin: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-body\", shadowSelector, \" {padding: 0 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" {padding: 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .collapsed\", shadowSelector, \" .panel-heading-icon-caret\", shadowSelector, \":before, .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .collapsed\", shadowSelector, \" .panel-title-login\", shadowSelector, \" {color: #215ca0 !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .collapsed\", shadowSelector, \" .removeMargin\", shadowSelector, \" {margin: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .panel-title-login\", shadowSelector, \" {color: #032e61 !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .panel-heading-icon-caret\", shadowSelector, \" {color: #032e61;line-height: 0;position: relative;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .panel-heading-icon-caret\", shadowSelector, \" span\", shadowSelector, \" {color: #215ca0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .flyout-menu-login\", shadowSelector, \" li\", shadowSelector, \" .panel-group\", shadowSelector, \" .panel\", shadowSelector, \" .panel-heading\", shadowSelector, \" .panel-heading-icon-caret\", shadowSelector, \":before {line-height: 0;margin-left: 210px;position: absolute;top: 50%;right: 0;-moz-transform: translateY(-50%);-o-transform: translateY(-50%);transform: translateY(-50%);-webkit-animation-name: none;animation-name: none;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-nav-login-flydown\", shadowSelector, \" .dropdown\", shadowSelector, \" {margin-right: 0 !important;display: inline-block;vertical-align: middle;padding-top: 1px;z-index: 1;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-nav-login-flydown\", shadowSelector, \" .global-login-img\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-nav-login-flydown\", shadowSelector, \" .global-login-img\", shadowSelector, \" img\", shadowSelector, \" {display: inline-block;vertical-align: middle;height: 30px;width: 30px;padding-left: 3px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-nav-login-flydown\", shadowSelector, \" .img-responsive\", shadowSelector, \" {max-width: 57px;vertical-align: middle !important;margin-right: 8px !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .separator\", shadowSelector, \" {height: 26px;width: 1px;background-color: #c1b9b4;margin: 0 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .coveo-form\", shadowSelector, \" .coveo-search-section\", shadowSelector, \" {padding: 0;margin: 0 10px 0 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" {z-index: 10;margin-left: 20px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \" {box-shadow: none;display: none;top: 34px;position: absolute;z-index: 5;width: 650px;border: 5px solid #f4f4f4;background-color: #fff;bottom: auto;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \":after {top: -14px;right: -4px;border-color: transparent transparent #f4f4f4;border-style: solid;border-width: 0 14px 14px;position: absolute;width: 0;height: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \" a\", shadowSelector, \" {font-size: 13px;margin: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \" .headingComponent\", shadowSelector, \" h2\", shadowSelector, \" a\", shadowSelector, \" {font-size: 16px;line-height: 22px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \" .genericLinkListComponent\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" {margin-bottom: 10px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_dialog\", shadowSelector, \" .genericLinkListComponent\", shadowSelector, \" ul\", shadowSelector, \" li:first-child\", shadowSelector, \" {margin-top: 15px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_content\", shadowSelector, \" {padding: 20px 4px 10px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .region-selection\", shadowSelector, \" .region-selector_button\", shadowSelector, \" {width: 20px;height: 28px;vertical-align: middle;color: #9faab5;cursor: pointer;overflow: hidden;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-login\", shadowSelector, \" a\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global_login\", shadowSelector, \" a\", shadowSelector, \" {text-transform: none;font-family: \\\"Salesforce Sans\\\" !important;display: block;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-login\", shadowSelector, \" a\", shadowSelector, \" > span\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global_login\", shadowSelector, \" a\", shadowSelector, \" > span\", shadowSelector, \" {padding: 0 10px 0 0;letter-spacing: normal;display: inline-block;vertical-align: middle;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-login\", shadowSelector, \" a\", shadowSelector, \" .globalIcon\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global_login\", shadowSelector, \" a\", shadowSelector, \" .globalIcon\", shadowSelector, \" {padding-right: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global-login\", shadowSelector, \" a\", shadowSelector, \" .globalIcon\", shadowSelector, \" img\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global_login\", shadowSelector, \" a\", shadowSelector, \" .globalIcon\", shadowSelector, \" img\", shadowSelector, \" {width: 30px;height: 30px;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .global_login\", shadowSelector, \" {margin-bottom: 0 !important;margin-top: 0 !important;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .inner\", shadowSelector, \" .login-link\", shadowSelector, \" .global_login\", shadowSelector, \" a\", shadowSelector, \" {font-size: 16px !important;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .header-right-content\", shadowSelector, \" .flyDownOuter:hover\", shadowSelector, \" .dropdown-menu\", shadowSelector, \" {display: block;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" {position: absolute;bottom: 0px;left: 125px;flex: 1;}\\n}@media (min-width: 1025px) and (max-width: 1311px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" {left: 100px;}\\n}@media (max-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" {position: fixed;bottom: 0;top: 0;background: #fff;right: -325px;width: 325px;transition: all 0.3s ease;z-index: 1015;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-header\", shadowSelector, \" {display: block;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-header\", shadowSelector, \" {display: none;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" {height: auto;min-height: 54px;border-bottom: 1px solid #ccc;position: relative;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-title\", shadowSelector, \" {font-size: 16px;text-align: center;width: 200px;min-height: 37px;margin: 0 auto;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;transition: opacity 0.2s;opacity: 1;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-title\", shadowSelector, \" h4\", shadowSelector, \" {padding: 0;margin: 0;font-weight: 400;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-title\", shadowSelector, \" span\", shadowSelector, \" {margin-top: 15px;display: block;max-width: 200px;overflow: hidden;text-overflow: ellipsis;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-title.active\", shadowSelector, \" {opacity: 0;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-close\", shadowSelector, \",.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-previous\", shadowSelector, \" {position: absolute;top: 0;cursor: pointer;color: #215ca0;font-family: Salesforce Icons;padding: 0;border: 0;background: transparent;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-close\", shadowSelector, \" span\", shadowSelector, \",.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-previous\", shadowSelector, \" span\", shadowSelector, \" {padding: 19px 19px 19px 11px;font-size: 16px;display: inline-block;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-close\", shadowSelector, \" {right: 0;display: inline-block;overflow: hidden;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-close\", shadowSelector, \" span\", shadowSelector, \":before {content: '\\\\E931';}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-previous\", shadowSelector, \" {left: 0;display: none;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-previous\", shadowSelector, \" span\", shadowSelector, \" {content: '\\\\E931';}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .drawer-previous.active\", shadowSelector, \" {display: block;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container\", shadowSelector, \" .mobile-drawer-navigation\", shadowSelector, \" .search-form\", shadowSelector, \" {padding: 10px 19px;}\\n@media (max-width: 1024px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container.nofocus\", shadowSelector, \" .mobile-drawer-header\", shadowSelector, \", .horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .main-menu-container.nofocus\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" {visibility: hidden;}\\n}@media (max-width: 1024px) {.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" {display: none !important;}\\n}.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \",.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {-webkit-transition: opacity 0.5s linear;-o-transition: opacity 0.5s linear;transition: opacity 0.5s linear;margin: 10px 0;}\\n@media (max-width: 1024px) {.globalnavbar-header-container\", shadowSelector, \" .offer-cta-container\", shadowSelector, \" {display: none !important;}\\n}.globalnavbar-header-container\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {-webkit-transition: opacity 0.5s linear;-o-transition: opacity 0.5s linear;transition: opacity 0.5s linear;margin: 10px 0;}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.globalnavbar-header-container\", shadowSelector, \" .offer-cta-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .offer-cta-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-offer-cta-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.wwww-main-nav\", shadowSelector, \" {list-style: none;padding: 0;margin: 0;bottom: 20px;text-align: left;transition: right 0.3s ease;display: flex;}\\n@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" {position: absolute;top: 54px;bottom: 0;left: 0;right: 0;overflow-y: scroll;overflow-x: hidden;display: block;}\\n.wwww-main-nav.searchEnabled\", shadowSelector, \" {top: 78px;}\\n}.wwww-main-nav\", shadowSelector, \" > .nav-item\", shadowSelector, \" {padding: 0;}\\n@media (min-width: 1025px) {.wwww-main-nav\", shadowSelector, \" > .nav-item\", shadowSelector, \" {display: inline-block;}\\n.wwww-main-nav\", shadowSelector, \" > .nav-item\", shadowSelector, \" button.nav-item-link\", shadowSelector, \" {padding-bottom: 10px;border-bottom: 2px solid transparent;margin: 0;}\\n.wwww-main-nav\", shadowSelector, \" > .nav-item\", shadowSelector, \" button.nav-item-link:hover\", shadowSelector, \" {border-bottom: solid 2px#00a1e0;}\\n.wwww-main-nav\", shadowSelector, \" > .nav-item\", shadowSelector, \" > .nav-item-link\", shadowSelector, \" {padding: 11px;display: block;color: #215ca0;font-size: 16px;border: none;background: transparent;line-height: 17px;}\\n}@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" {box-sizing: border-box;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" h3\", shadowSelector, \" {display: table;font-size: 16px;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" > span\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" h3\", shadowSelector, \" > span\", shadowSelector, \"{display: table-cell;vertical-align: middle;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" > span:first-child\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" h3\", shadowSelector, \" > span:first-child\", shadowSelector, \" {width: 100%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .child-menu\", shadowSelector, \" .haschildIcon\", shadowSelector, \":after {content: '\\\\E924';width: 20px;height: 20px;right: 15px;font-family: Salesforce Icons;}\\n}.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" {display: none;border-radius: 0 0 16px 16px;z-index: 50;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" div.menu-section\", shadowSelector, \" ul\", shadowSelector, \" li.nav-item\", shadowSelector, \" a\", shadowSelector, \" span\", shadowSelector, \" {display: inline-block;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" div.menu-section\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" a\", shadowSelector, \" {display: table;text-decoration: none;width: 100%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" div.menu-section\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" a\", shadowSelector, \" > span\", shadowSelector, \",.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" div.menu-section\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" a\", shadowSelector, \" svg\", shadowSelector, \" {display: inline-block;vertical-align: middle;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" div.menu-section\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" a\", shadowSelector, \" svg\", shadowSelector, \" {width: 22px;height: 22px;margin-right: 10px;padding-right: 0;}\\n@media (max-width: 1311px) and (min-width: 1025px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.rightAlignedSubMenuElement\", shadowSelector, \" {right: 0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-10\", shadowSelector, \" {left: -10px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-20\", shadowSelector, \" {left: -20px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-30\", shadowSelector, \" {left: -30px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-40\", shadowSelector, \" {left: -40px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-50\", shadowSelector, \" {left: -50px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-60\", shadowSelector, \" {left: -60px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-70\", shadowSelector, \" {left: -70px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-80\", shadowSelector, \" {left: -80px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-90\", shadowSelector, \" {left: -90px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-100\", shadowSelector, \" {left: -100px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-110\", shadowSelector, \" {left: -110px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-120\", shadowSelector, \" {left: -120px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-130\", shadowSelector, \" {left: -130px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-140\", shadowSelector, \" {left: -140px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-150\", shadowSelector, \" {left: -150px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-160\", shadowSelector, \" {left: -160px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-170\", shadowSelector, \" {left: -170px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-180\", shadowSelector, \" {left: -180px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-190\", shadowSelector, \" {left: -190px !important;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav.sub-nav-offset-200\", shadowSelector, \" {left: -200px !important;}\\n}@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" {position: absolute;display: none;top: 0;bottom: 0;right: -325px;width: 325px !important;background-color: #fff;transition: right 0.3s ease;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav.active\", shadowSelector, \" {right: 0;display: block;}\\n}@media (min-width: 1025px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" {padding: 0 10px;margin: 20px 0 0;}\\n}@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" li\", shadowSelector, \" {border-bottom: none;background-color: #fff;padding-bottom: 0;}\\n}@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" li\", shadowSelector, \" span\", shadowSelector, \" {margin: 0;}\\n}.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" li.title\", shadowSelector, \" span\", shadowSelector, \" {font-size: 16px;font-family: \\\"Salesforce Sans\\\";line-height: 20px;margin: 10px 0 0;font-weight: 700;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" li\", shadowSelector, \" .content\", shadowSelector, \" span\", shadowSelector, \" {margin: 10px 0 20px;display: block;font-size: 13px;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul.featured-content\", shadowSelector, \" li\", shadowSelector, \" img\", shadowSelector, \" {width: 100%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" li.nav-item\", shadowSelector, \" a\", shadowSelector, \" span.icon-sfdc-icon-offsite\", shadowSelector, \" {margin-left: 5px;}\\n@media (min-width: 1025px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" {list-style: none;position: relative;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" {position: absolute;width: 560px;display: none;padding: 10px;background-color: #f4f4f4;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" > div\", shadowSelector, \" {display: flex;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .one-column\", shadowSelector, \" div.menu-section\", shadowSelector, \" {flex-basis: 100%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .three-column\", shadowSelector, \" div.menu-section\", shadowSelector, \" {flex-basis: 33%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .four-column\", shadowSelector, \" div.menu-section\", shadowSelector, \" {flex-basis: 25%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:first-child\", shadowSelector, \" {width: 25%;flex-basis: 25%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" {width: 50%;flex-basis: 50%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" {column-count: 2;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" > li\", shadowSelector, \" {padding-bottom: 0;margin-bottom: 10px;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(3)\", shadowSelector, \" {width: 25%;flex-basis: 25%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(3)\", shadowSelector, \" .sub-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" {padding-bottom: 10px;white-space: nowrap;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .featured-content-menu\", shadowSelector, \" {flex-direction: row;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .featured-content-menu\", shadowSelector, \" a\", shadowSelector, \" {font-size: 16px;display: block;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .featured-content-menu\", shadowSelector, \" > div:first-child\", shadowSelector, \" {width: 40%;flex-basis: 40%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .featured-content-menu\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" {width: 60%;flex-basis: 60%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item.active\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item:hover\", shadowSelector, \" {border-color: #00a1e0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item.active\", shadowSelector, \" > .nav-item-link\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item:hover\", shadowSelector, \" > .nav-item-link\", shadowSelector, \" {cursor: pointer;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item.active\", shadowSelector, \" > .sub-nav\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item:hover\", shadowSelector, \" > .sub-nav\", shadowSelector, \" {display: block;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" {flex-basis: 50%;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" {margin: 20px 0 10px;padding: 0;font-size: 15px;list-style: none;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" li.nav-item\", shadowSelector, \" a\", shadowSelector, \" span\", shadowSelector, \" {font-size: 13px;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" {padding: 0 15px;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" a\", shadowSelector, \" {color: #215ca0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" a:hover\", shadowSelector, \" {color: #184476;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" a:hover\", shadowSelector, \" svg\", shadowSelector, \" {opacity: 0.8;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" > span\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" svg\", shadowSelector, \" {display: table-cell;vertical-align: middle;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul\", shadowSelector, \" > li\", shadowSelector, \" > div\", shadowSelector, \" > h3\", shadowSelector, \" > span\", shadowSelector, \" {font-family: \\\"Salesforce Sans\\\", Helvetica, Arial, sans-serif !important;font-size: 12px;color: #59575c;display: block;padding-bottom: 10px;font-weight: 700;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" div.menu-section\", shadowSelector, \" > ul.link-list\", shadowSelector, \" {font-size: 16px;}\\n}.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .nav-item-link\", shadowSelector, \",.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" {padding-bottom: 7px;}\\n@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .nav-item-link\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" {padding: 14px 20px;font-size: 16px;text-align: left;display: table;line-height: 22px;border: none;border-bottom: 1px solid #ccc;cursor: pointer;width: 100%;background-color: #f4f4f4;color: #215ca0;margin: 0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .nav-item-link\", shadowSelector, \" a\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" li\", shadowSelector, \" a\", shadowSelector, \" {color: #215ca0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .nav-item-link.expanded-sub-nav\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" li.expanded-sub-nav\", shadowSelector, \" {border-bottom: none;padding: 0;}\\n.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .nav-item-link.expanded-sub-nav\", shadowSelector, \" .sub-nav\", shadowSelector, \", .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" li.expanded-sub-nav\", shadowSelector, \" .sub-nav\", shadowSelector, \" {position: inherit;}\\n}@media (max-width: 1024px) {.wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" .sub-nav.active\", shadowSelector, \" ul\", shadowSelector, \" li.expanded-sub-nav\", shadowSelector, \" .sub-nav\", shadowSelector, \" {display: block;}\\n}@media (min-width: 1025px) {.globalNavigationBarConsolidated\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(1)\", shadowSelector, \" {width: 50%;flex-basis: 50%;}\\n.globalNavigationBarConsolidated\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(1)\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" {column-count: 2;}\\n.globalNavigationBarConsolidated\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(1)\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" > li\", shadowSelector, \" {padding-bottom: 0;margin-bottom: 10px;}\\n.globalNavigationBarConsolidated\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" {width: 25%;flex-basis: 25%;}\\n.globalNavigationBarConsolidated\", shadowSelector, \" .wwww-main-nav\", shadowSelector, \" .nav-item\", shadowSelector, \" > .sub-nav\", shadowSelector, \" .menu-container\", shadowSelector, \" .products-menu-us\", shadowSelector, \" > div:nth-child(2)\", shadowSelector, \" .sub-nav\", shadowSelector, \" ul\", shadowSelector, \" {column-count: 1;}\\n}.sr-only\", shadowSelector, \" {position: absolute;width: 1px;height: 1px;margin: -1px;padding: 0;overflow: hidden;clip: rect(0, 0, 0, 0);border: 0;}\\na\", shadowSelector, \" {color: #0b5cab;text-decoration: none;}\\nhtml\", shadowSelector, \" {font-size: 10px;-webkit-tap-highlight-color: rgba(0, 0, 0, 0);}\\nbody\", shadowSelector, \" {font-family: 'Salesforce Sans', Helvetica, Arial, sans-serif;font-size: 15px;line-height: 1.42857143;color: #032e61;background-color: #fff;}\\n[class^='icon-vidyard-']\", shadowSelector, \",[class*=' icon-vidyard-']\", shadowSelector, \",[class^='icon-sfdc-']\", shadowSelector, \",[class*=' icon-sfdc-']\", shadowSelector, \",[class^='icon-sflive-']\", shadowSelector, \",[class*=' icon-sflive-']\", shadowSelector, \",[class^='cloud-icon-']\", shadowSelector, \",[class*=' cloud-icon-']\", shadowSelector, \" {font-family: 'Salesforce Icons';speak: none;font-style: normal;font-weight: normal;font-variant: normal;text-transform: none;line-height: 1;-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;}\\n[class^='cloud-icon-'].primary-nav-sublink\", shadowSelector, \",[class*=' cloud-icon-'].primary-nav-sublink\", shadowSelector, \",[class^='cloud-icon-'].secondary-nav-sublink\", shadowSelector, \",[class*=' cloud-icon-'].secondary-nav-sublink\", shadowSelector, \" {-webkit-font-smoothing: auto;-moz-osx-font-smoothing: auto;color: #ffffff !important;}\\n[class^='cloud-icon-'].primary-nav-sublink\", shadowSelector, \":before,[class*=' cloud-icon-'].primary-nav-sublink\", shadowSelector, \":before,[class^='cloud-icon-'].secondary-nav-sublink\", shadowSelector, \":before,[class*=' cloud-icon-'].secondary-nav-sublink\", shadowSelector, \":before {display: none;}\\n.nav-overlay-drawer\", shadowSelector, \" .social-media-links\", shadowSelector, \" a\", shadowSelector, \" [class^='cloud-icon-']\", shadowSelector, \",.nav-overlay-drawer\", shadowSelector, \" .social-media-links\", shadowSelector, \" a\", shadowSelector, \" [class*=' cloud-icon-']\", shadowSelector, \" {font-size: 30px;}\\n.h3lg\", shadowSelector, \" [class^='cloud-icon-']\", shadowSelector, \",.h3lg\", shadowSelector, \" [class*=' cloud-icon-']\", shadowSelector, \" {font-size: 40px;}\\n.salesforce-icon\", shadowSelector, \" {height: 55px;width: 55px;background-size: contain !important;}\\n.salesforce-social-icon\", shadowSelector, \" {background-size: contain;height: 30px;width: 30px;display: inline-block;}\\n.salesforce-pricing-icon\", shadowSelector, \" {width: 16px;height: 16px;vertical-align: middle;}\\n.icon-sfdc-icon-instagram\", shadowSelector, \",.icon-sfdc-icon-social-instagram\", shadowSelector, \",.icon-sfdc-social-instagram\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/instagram-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-instagram-night\", shadowSelector, \",.icon-sfdc-icon-social-instagram-night\", shadowSelector, \",.icon-sfdc-social-instagram-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/instagram-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-product-quip\", shadowSelector, \":before {content: '\\\\e953';}\\n.icon-sfdc-icon-phone\", shadowSelector, \":before {content: '\\\\e950';}\\n.icon-sfdc-icon-headset\", shadowSelector, \":before {content: '\\\\e951';}\\n.icon-sfdc-icon-chat\", shadowSelector, \":before {content: '\\\\e952';}\\n.icon-sfdc-icon-download\", shadowSelector, \":before {content: '\\\\e948';}\\n.icon-sfdc-icon-email\", shadowSelector, \":before {content: '\\\\e949';}\\n.icon-sfdc-icon-xing\", shadowSelector, \",.icon-sfdc-icon-social-xing\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/xing-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-xing-day2\", shadowSelector, \",.icon-sfdc-icon-social-xing-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/xing-day2.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-xing-day3\", shadowSelector, \",.icon-sfdc-icon-social-xing-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/xing-day3.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-xing-night\", shadowSelector, \",.icon-sfdc-icon-social-xing-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/xing-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-wechat\", shadowSelector, \",.icon-sfdc-icon-social-wechat\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/we-chat-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-wechat-day2\", shadowSelector, \",.icon-sfdc-icon-social-wechat-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/we-chat-day2.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-wechat-day3\", shadowSelector, \",.icon-sfdc-icon-social-wechat-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/we-chat-day3.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-wechat-night\", shadowSelector, \",.icon-sfdc-icon-social-wechat-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/we-chat-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-left-arrow\", shadowSelector, \":before {content: '\\\\e943';}\\n.icon-sfdc-icon-product-e-commerce\", shadowSelector, \":before {content: '\\\\e941';}\\n.icon-sflive-keynote\", shadowSelector, \":before {content: '\\\\e93e';}\\n.icon-sflive-productkeynote\", shadowSelector, \":before {content: '\\\\e93f';}\\n.icon-sflive-session\", shadowSelector, \":before {content: '\\\\e940';}\\n.icon-sfdc-icon-certified\", shadowSelector, \":before {content: '\\\\e93c';}\\n.icon-sfdc-icon-philantropy-cloud\", shadowSelector, \":before {content: '\\\\e95c';}\\n.icon-sfdc-icon-blog\", shadowSelector, \",.icon-sfdc-icon-social-blog\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/blog-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-social-blog-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/blog-day2.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-social-blog-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/blog-day3.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-blog-night\", shadowSelector, \",.icon-sfdc-icon-social-blog-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/blog-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-1oclock\", shadowSelector, \":before {content: '\\\\e900';}\\n.icon-sfdc-icon-5oclock\", shadowSelector, \":before {content: '\\\\e901';}\\n.icon-sfdc-icon-8oclock\", shadowSelector, \":before {content: '\\\\e902';}\\n.icon-sfdc-icon-alarm\", shadowSelector, \":before {content: '\\\\e903';}\\n.icon-sfdc-icon-calendar\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/calendar-day.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-calendar-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/calendar-night.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-closed-captioning\", shadowSelector, \":before {content: '\\\\e905';}\\n.icon-sfdc-icon-comments\", shadowSelector, \":before {content: '\\\\e906';}\\n.icon-sfdc-icon-down-arrow\", shadowSelector, \":before {content: '\\\\e907';}\\n.icon-vidyard-fullscreen-enter\", shadowSelector, \":before,.icon-sfdc-icon-fullscreen-enter\", shadowSelector, \":before {content: '\\\\e908';}\\n.icon-vidyard-fullscreen-exit\", shadowSelector, \":before,.icon-sfdc-icon-fullscreen-exit\", shadowSelector, \":before {content: '\\\\e909';}\\n.icon-sfdc-icon-fullscreen\", shadowSelector, \":before {content: '\\\\e90a';}\\n.icon-sfdc-icon-globe\", shadowSelector, \":before {content: '\\\\e90b';}\\n.icon-sfdc-icon-grid\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/grid-day.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-grid-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/grid-night.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-hamburger\", shadowSelector, \":before {content: '\\\\e90d';}\\n.icon-vidyard-hd\", shadowSelector, \":before,.icon-sfdc-icon-hd\", shadowSelector, \":before {content: '\\\\e90e';}\\n.icon-sfdc-icon-login\", shadowSelector, \":before {content: '\\\\e90f';}\\n.icon-sfdc-icon-magnifying-glass\", shadowSelector, \":before {content: '\\\\e910';}\\n.icon-sfdc-icon-minus\", shadowSelector, \":before {content: '\\\\e911';}\\n.icon-sfdc-icon-offsite\", shadowSelector, \":before {content: '\\\\e912';}\\n.icon-vidyard-pause\", shadowSelector, \":before,.icon-sfdc-icon-pause-round\", shadowSelector, \":before {content: '\\\\e913';}\\n.icon-sfdc-icon-pause-square\", shadowSelector, \":before {content: '\\\\e914';}\\n.icon-vidyard-play-only\", shadowSelector, \":before,.icon-sfdc-icon-play-only\", shadowSelector, \":before {content: '\\\\e915';}\\n.icon-vidyard-play\", shadowSelector, \":before,.icon-sfdc-icon-play\", shadowSelector, \":before {content: '\\\\e916';}\\n.icon-sfdc-icon-plus\", shadowSelector, \":before {content: '\\\\e917';}\\n.icon-sfdc-icon-retweet\", shadowSelector, \":before {content: '\\\\e923';}\\n.icon-sfdc-icon-right-arrow\", shadowSelector, \":before {content: '\\\\e924';}\\n.icon-sfdc-icon-share\", shadowSelector, \":before {content: '\\\\e925';}\\n.icon-sfdc-icon-facebook-night\", shadowSelector, \",.icon-sfdc-icon-social-facebook-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/facebook-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-facebook\", shadowSelector, \",.icon-sfdc-icon-social-facebook\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/facebook-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-google-night\", shadowSelector, \",.icon-sfdc-icon-social-google-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/google-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-google\", shadowSelector, \",.icon-sfdc-icon-social-google\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/google-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-linkedin-night\", shadowSelector, \",.icon-sfdc-icon-social-linkedin-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/linkedin-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-linkedin\", shadowSelector, \",.icon-sfdc-icon-social-linkedin\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/linkedin-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-twitter-night\", shadowSelector, \",.icon-sfdc-icon-social-twitter-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/twitter-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-twitter\", shadowSelector, \",.icon-sfdc-icon-social-twitter\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/twitter-day.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-youtube-night\", shadowSelector, \",.icon-sfdc-icon-social-youtube-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/youtube-night.svg')\\n        no-repeat;}\\n.icon-sfdc-icon-youtube\", shadowSelector, \",.icon-sfdc-icon-social-youtube\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/youtube-day.svg')\\n        no-repeat;}\\n.social-media-links\", shadowSelector, \" a:hover\", shadowSelector, \" svg\", shadowSelector, \",.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" svg\", shadowSelector, \" {opacity: 0.8;}\\n.social-media-links\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" svg\", shadowSelector, \",.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" svg\", shadowSelector, \" {opacity: 1;}\\n.icon-vidyard-sound-bar\", shadowSelector, \":before,.icon-sfdc-icon-sound-bar\", shadowSelector, \":before {content: '\\\\e930';}\\n.icon-sfdc-icon-sound-mute\", shadowSelector, \":before {content: '\\\\e931';}\\n.icon-vidyard-sound\", shadowSelector, \":before,.icon-sfdc-icon-sound\", shadowSelector, \":before {content: '\\\\e932';}\\n.icon-sfdc-icon-star\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/star-day.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-star-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/star-night.svg')\\n        no-repeat;width: 20px !important;height: 20px !important;}\\n.icon-sfdc-icon-talk-bubble-plus\", shadowSelector, \":before {content: '\\\\e934';}\\n.icon-sfdc-icon-talk-bubble\", shadowSelector, \":before {content: '\\\\e935';}\\n.icon-sfdc-icon-tooltip\", shadowSelector, \":before {content: '\\\\e936';}\\n.icon-sfdc-icon-up-arrow\", shadowSelector, \":before {content: '\\\\e937';}\\n.icon-sfdc-icon-volume\", shadowSelector, \":before {content: '\\\\e938';}\\n.icon-sfdc-icon-whitepaper\", shadowSelector, \":before {content: '\\\\e939';}\\n.icon-sfdc-icon-whitepaper2\", shadowSelector, \":before {content: '\\\\e93a';}\\n.icon-sfdc-icon-x\", shadowSelector, \":before {content: '\\\\e93b';}\\n.headingComponent\", shadowSelector, \" a.has-cloud-icon\", shadowSelector, \" {position: relative;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-smb\", shadowSelector, \":before {color: #00587a !important;}\\n.cloud-icon-all\", shadowSelector, \" {padding-right: 10px;}\\n.cloud-icon-all.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;}\\n.cloud-icon-smb\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-smb-day.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-smb.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-smb.primary-nav-sublink\", shadowSelector, \",.cloud-icon-smb.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-smb-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-smb-day2.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-smb-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-smb-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-smb-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-smb-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-smb-day3.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-smb-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-smb-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-smb-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-smb-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-smb-night.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-smb-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-smb-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-smb-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-smb\", shadowSelector, \":before {color: #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-lightning-thunder\", shadowSelector, \":before {color: #000000 !important;}\\n.cloud-icon-lightning-thunder-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/lightning-thunder-night.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;width: 20px !important;height: 20px !important;}\\n.cloud-icon-lightning-thunder-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-lightning-thunder-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-lightning-thunder-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-lightning-thunder\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/lightning-thunder-day.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;width: 20px !important;height: 20px !important;}\\n.cloud-icon-lightning-thunder.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-lightning-thunder.primary-nav-sublink\", shadowSelector, \",.cloud-icon-lightning-thunder.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-lightning-thunder\", shadowSelector, \":before {color: #032e61 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-product-quip\", shadowSelector, \" {color: #792811 !important;}\\n.cloud-icon-product-quip-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/collaboration-night.svg')\\n        no-repeat;color: #d3451d !important;padding-right: 10px;}\\n.cloud-icon-product-quip-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #d3451d;}\\n.cloud-icon-product-quip-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-product-quip-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #d3451d !important;border-bottom: 1px solid #d3451d !important;}\\n.cloud-icon-product-quip\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/collaboration-day.svg')\\n        no-repeat;color: #d3451d !important;padding-right: 10px;}\\n.cloud-icon-product-quip.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #d3451d;}\\n.cloud-icon-product-quip.primary-nav-sublink\", shadowSelector, \",.cloud-icon-product-quip.secondary-nav-sublink\", shadowSelector, \" {background-color: #d3451d !important;border-bottom: 1px solid #d3451d !important;}\\n.cloud-icon-product-quip-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/collaboration-day2.svg')\\n        no-repeat;color: #d3451d !important;padding-right: 10px;}\\n.cloud-icon-product-quip-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #d3451d;}\\n.cloud-icon-product-quip-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-product-quip-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #d3451d !important;border-bottom: 1px solid #d3451d !important;}\\n.cloud-icon-product-quip-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/collaboration-day3.svg')\\n        no-repeat;color: #d3451d !important;padding-right: 10px;}\\n.cloud-icon-product-quip-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #d3451d;}\\n.cloud-icon-product-quip-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-product-quip-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #d3451d !important;border-bottom: 1px solid #d3451d !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-product-quip\", shadowSelector, \":before {color: #d3451d !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-analytics\", shadowSelector, \":before {color: #00587a !important;}\\n.cloud-icon-analytics-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/analytics-night.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-analytics-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-analytics-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-analytics-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-analytics\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/analytics-day.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-analytics.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-analytics.primary-nav-sublink\", shadowSelector, \",.cloud-icon-analytics.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-analytics-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/analytics-day2.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-analytics-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-analytics-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-analytics-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-analytics-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/analytics-day3.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-analytics-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-analytics-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-analytics-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-analytics\", shadowSelector, \":before {color: #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-platform\", shadowSelector, \":before {color: #000000 !important;}\\n.cloud-icon-platform-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/platform-night.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;}\\n.cloud-icon-platform-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-platform-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-platform-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-platform\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/platform-day.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;}\\n.cloud-icon-platform.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-platform.primary-nav-sublink\", shadowSelector, \",.cloud-icon-platform.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-platform-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/platform-day2.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;}\\n.cloud-icon-platform-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-platform-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-platform-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-platform-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/platform-day3.svg')\\n        no-repeat;color: #032e61 !important;padding-right: 10px;}\\n.cloud-icon-platform-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #032e61;}\\n.cloud-icon-platform-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-platform-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #032e61 !important;border-bottom: 1px solid #032e61 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-platform\", shadowSelector, \":before {color: #032e61 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-community\", shadowSelector, \":before {color: #64480d !important;}\\n.cloud-icon-community-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communities-night.svg')\\n        no-repeat;color: #be8919 !important;padding-right: 10px;}\\n.cloud-icon-community-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #be8919;}\\n.cloud-icon-community-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-community-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #be8919 !important;border-bottom: 1px solid #be8919 !important;}\\n.cloud-icon-community\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communities-day.svg')\\n        no-repeat;color: #be8919 !important;padding-right: 10px;}\\n.cloud-icon-community.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #be8919;}\\n.cloud-icon-community.primary-nav-sublink\", shadowSelector, \",.cloud-icon-community.secondary-nav-sublink\", shadowSelector, \" {background-color: #be8919 !important;border-bottom: 1px solid #be8919 !important;}\\n.cloud-icon-community-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communities-day2.svg')\\n        no-repeat;color: #be8919 !important;padding-right: 10px;}\\n.cloud-icon-community-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #be8919;}\\n.cloud-icon-community-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-community-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #be8919 !important;border-bottom: 1px solid #be8919 !important;}\\n.cloud-icon-community-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communities-day3.svg')\\n        no-repeat;color: #be8919 !important;padding-right: 10px;}\\n.cloud-icon-community-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #be8919;}\\n.cloud-icon-community-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-community-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #be8919 !important;border-bottom: 1px solid #be8919 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-community\", shadowSelector, \":before {color: #be8919 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-comms-media\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-life-sciences\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-manufacturing\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-retail\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-fin-serv\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-health\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-media\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-automotive\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-consumer-goods\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-government\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-transportation-hospitality\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-philanthropy\", shadowSelector, \":before {color: #060205 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-industries-product-integration\", shadowSelector, \":before {color: #184476 !important;}\\n.cloud-icon-industries-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/industries-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/industries-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/industries-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/industries-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-comms-media-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communications-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-comms-media\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communications-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-comms-media-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communications-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-comms-media-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/communications-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-life-sciences-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-life-sciences\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-life-sciences-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-life-sciences-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-life-sciences-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-life-sciences\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-life-sciences-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-life-sciences-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-manufacturing-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/manufacturing-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-manufacturing\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/manufacturing-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-manufacturing-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/manufacturing-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-manufacturing-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/manufacturing-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-retail-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/retail-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-retail\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/retail-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-retail-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/retail-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-retail-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/retail-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-fin-serv-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/financial-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-fin-serv\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/financial-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-fin-serv-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/financial-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-fin-serv-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/financial-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-health-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/health-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-media-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/media-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-media\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/media-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-media-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/media-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-media-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/media-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-automotive-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/automotive-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-automotive\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/automotive-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-automotive-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/automotive-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-automotive-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/automotive-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-consumer-goods-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/consumer-goods-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-consumer-goods\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/consumer-goods-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-consumer-goods-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/consumer-goods-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-consumer-goods-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/consumer-goods-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-government-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/government-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-government\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/government-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-government-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/government-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-government-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/government-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-transportation-hospitality-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/transportation-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-transportation-hospitality\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/transportation-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-transportation-hospitality-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/transportation-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-transportation-hospitality-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/transportation-day3.svg')\\n        no-repeat;}\\n.cloud-icon-industries-product-integration-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/integration-night.svg')\\n        no-repeat;}\\n.cloud-icon-industries-product-integration\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/integration-day.svg')\\n        no-repeat;}\\n.cloud-icon-industries-product-integration-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/integration-day2.svg')\\n        no-repeat;}\\n.cloud-icon-industries-product-integration-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/integration-day3.svg')\\n        no-repeat;}\\n.cloud-icon-philanthropy-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/philanthropy-night.svg')\\n        no-repeat;}\\n.cloud-icon-philanthropy\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/philanthropy-day.svg')\\n        no-repeat;}\\n.cloud-icon-philanthropy-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/philanthropy-day2.svg')\\n        no-repeat;}\\n.cloud-icon-philanthropy-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/philanthropy-day3.svg')\\n        no-repeat;}\\n.cloud-icon-admin-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/admin-night.svg')\\n        no-repeat;}\\n.cloud-icon-admin\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/admin-day.svg')\\n        no-repeat;}\\n.cloud-icon-admin-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/admin-day2.svg')\\n        no-repeat;}\\n.cloud-icon-admin-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/admin-day3.svg')\\n        no-repeat;}\\n.cloud-icon-authenticator-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/authenticator-night.svg')\\n        no-repeat;}\\n.cloud-icon-authenticator\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/authenticator-day.svg')\\n        no-repeat;}\\n.cloud-icon-authenticator-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/authenticator-day2.svg')\\n        no-repeat;}\\n.cloud-icon-authenticator-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/authenticator-day3.svg')\\n        no-repeat;}\\n.cloud-icon-events-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/events-night.svg')\\n        no-repeat;}\\n.cloud-icon-events\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/events-day.svg')\\n        no-repeat;}\\n.cloud-icon-events-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/events-day2.svg')\\n        no-repeat;}\\n.cloud-icon-events-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/events-day3.svg')\\n        no-repeat;}\\n.cloud-icon-field-service-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/field-service-night.svg')\\n        no-repeat;}\\n.cloud-icon-field-service\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/field-service-day.svg')\\n        no-repeat;}\\n.cloud-icon-field-service-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/field-service-day2.svg')\\n        no-repeat;}\\n.cloud-icon-field-service-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/field-service-day3.svg')\\n        no-repeat;}\\n.cloud-icon-heroku-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/heroku-night.svg')\\n        no-repeat;}\\n.cloud-icon-heroku\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/heroku-day.svg')\\n        no-repeat;}\\n.cloud-icon-heroku-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/heroku-day2.svg')\\n        no-repeat;}\\n.cloud-icon-heroku-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/heroku-day3.svg')\\n        no-repeat;}\\n.cloud-icon-inbox-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/inbox-night.svg')\\n        no-repeat;}\\n.cloud-icon-inbox\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/inbox-day.svg')\\n        no-repeat;}\\n.cloud-icon-inbox-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/inbox-day2.svg')\\n        no-repeat;}\\n.cloud-icon-inbox-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/inbox-day3.svg')\\n        no-repeat;}\\n.cloud-icon-radio-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/radio-night.svg')\\n        no-repeat;}\\n.cloud-icon-radio\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/radio-day.svg')\\n        no-repeat;}\\n.cloud-icon-radio-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/radio-day2.svg')\\n        no-repeat;}\\n.cloud-icon-radio-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/radio-day3.svg')\\n        no-repeat;}\\n.cloud-icon-social-studio-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/social-studio-night.svg')\\n        no-repeat;}\\n.cloud-icon-social-studio\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/social-studio-day.svg')\\n        no-repeat;}\\n.cloud-icon-social-studio-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/social-studio-day2.svg')\\n        no-repeat;}\\n.cloud-icon-social-studio-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/social-studio-day3.svg')\\n        no-repeat;}\\n.cloud-icon-trailhead-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/trailhead-night.svg')\\n        no-repeat;}\\n.cloud-icon-trailhead\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/trailhead-day.svg')\\n        no-repeat;}\\n.cloud-icon-trailhead-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/trailhead-day2.svg')\\n        no-repeat;}\\n.cloud-icon-trailhead-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/trailhead-day3.svg')\\n        no-repeat;}\\n.pricing-not-available\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/utility-pricing-not-available.svg')\\n        no-repeat;}\\n.pricing-checked\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/utility-pricing-check.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder1-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder1-night.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder1\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder1-day.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder1-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder1-day2.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder1-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder1-day3.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder2-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder2-night.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder2-day.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder2-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder2-day2.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder2-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder2-day3.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder3-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder3-night.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder3-day.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder3-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder3-day2.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder3-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder3-day3.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder4-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder4-night.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder4\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder4-day.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder4-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder4-day2.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder4-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder4-day3.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder5-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder5-night.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder5\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder5-day.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder5-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder5-day2.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder5-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder5-day3.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder6\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder6.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder7\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder7.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder8\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder8.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder9\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder9.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder10\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder10.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder11\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder11.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder12\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder12.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder13\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder13.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder14\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder14.svg')\\n        no-repeat;}\\n.cloud-icon-placeholder15\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/placeholder15.svg')\\n        no-repeat;}\\n.cloud-icon-industries\", shadowSelector, \":before,.cloud-icon-industries-comms-media\", shadowSelector, \":before,.cloud-icon-industries-life-sciences\", shadowSelector, \":before,.cloud-icon-industries-manufacturing\", shadowSelector, \":before,.cloud-icon-industries-retail\", shadowSelector, \":before,.cloud-icon-industries-fin-serv\", shadowSelector, \":before,.cloud-icon-industries-health\", shadowSelector, \":before,.cloud-icon-industries-media\", shadowSelector, \":before,.cloud-icon-industries-automotive\", shadowSelector, \":before,.cloud-icon-industries-consumer-goods\", shadowSelector, \":before,.cloud-icon-industries-government\", shadowSelector, \":before,.cloud-icon-industries-transportation-hospitality\", shadowSelector, \":before,.cloud-icon-philanthropy\", shadowSelector, \":before {color: #4c2248 !important;padding-right: 10px;}\\n.cloud-icon-industries.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-comms-media.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-life-sciences.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-manufacturing.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-retail.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-fin-serv.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-health.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-media.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-automotive.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-consumer-goods.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-government.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-industries-transportation-hospitality.vertical-bar-prefix\", shadowSelector, \",.cloud-icon-philanthropy.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #4c2248;}\\n.cloud-icon-industries.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-comms-media.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-life-sciences.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-manufacturing.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-retail.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-fin-serv.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-health.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-media.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-automotive.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-consumer-goods.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-government.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-transportation-hospitality.primary-nav-sublink\", shadowSelector, \",.cloud-icon-philanthropy.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-comms-media.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-life-sciences.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-manufacturing.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-retail.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-fin-serv.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-health.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-media.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-automotive.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-consumer-goods.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-government.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-transportation-hospitality.secondary-nav-sublink\", shadowSelector, \",.cloud-icon-philanthropy.secondary-nav-sublink\", shadowSelector, \" {background-color: #4c2248 !important;border-bottom: 1px solid #4c2248 !important;}\\n.cloud-icon-industries-product-integration\", shadowSelector, \":before {color: #215ca0 !important;padding-right: 10px;}\\n.cloud-icon-industries-product-integration.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #215ca0;}\\n.cloud-icon-industries-product-integration.primary-nav-sublink\", shadowSelector, \",.cloud-icon-industries-product-integration.secondary-nav-sublink\", shadowSelector, \" {background-color: #215ca0 !important;border-bottom: 1px solid #215ca0 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-comms-media\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-life-sciences\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-manufacturing\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-retail\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-fin-serv\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-health\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-media\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-automotive\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-consumer-goods\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-government\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-transportation-hospitality\", shadowSelector, \":before,.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-philanthropy\", shadowSelector, \":before {color: #4c2248 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-industries-product-integration\", shadowSelector, \":before {color: #215ca0 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-iot\", shadowSelector, \":before {color: #00587a !important;}\\n.cloud-icon-iot-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/iot-night.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-iot-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-iot-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-iot-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-iot\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/iot-day.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-iot.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-iot.primary-nav-sublink\", shadowSelector, \",.cloud-icon-iot.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-iot-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/iot-day2.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-iot-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-iot-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-iot-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #032e61 !important;}\\n.cloud-icon-iot-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/iot-day3.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;}\\n.cloud-icon-iot-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-iot-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-iot-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #032e61 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-iot\", shadowSelector, \":before {color: #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-marketing\", shadowSelector, \":before {color: #804000 !important;}\\n.cloud-icon-marketing-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/marketing-night.svg')\\n        no-repeat;color: #e67300 !important;padding-right: 10px;}\\n.cloud-icon-marketing-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #e67300;}\\n.cloud-icon-marketing-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-marketing-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #e67300 !important;border-bottom: 1px solid #e67300 !important;}\\n.cloud-icon-marketing\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/marketing-day.svg')\\n        no-repeat;color: #e67300 !important;padding-right: 10px;}\\n.cloud-icon-marketing.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #e67300;}\\n.cloud-icon-marketing.primary-nav-sublink\", shadowSelector, \",.cloud-icon-marketing.secondary-nav-sublink\", shadowSelector, \" {background-color: #e67300 !important;border-bottom: 1px solid #e67300 !important;}\\n.cloud-icon-marketing-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/marketing-day2.svg')\\n        no-repeat;color: #e67300 !important;padding-right: 10px;}\\n.cloud-icon-marketing-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #e67300;}\\n.cloud-icon-marketing-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-marketing-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #e67300 !important;border-bottom: 1px solid #e67300 !important;}\\n.cloud-icon-marketing-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/marketing-day3.svg')\\n        no-repeat;color: #e67300 !important;padding-right: 10px;}\\n.cloud-icon-marketing-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #e67300;}\\n.cloud-icon-marketing-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-marketing-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #e67300 !important;border-bottom: 1px solid #e67300 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-marketing\", shadowSelector, \":before {color: #e67300 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-mittlestand\", shadowSelector, \":before {color: #102b4b !important;}\\n.cloud-icon-mittlestand\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-mittlestand-day.svg')\\n        no-repeat;color: #215ca0 !important;padding-right: 10px;}\\n.cloud-icon-mittlestand.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #215ca0;}\\n.cloud-icon-mittlestand.primary-nav-sublink\", shadowSelector, \",.cloud-icon-mittlestand.secondary-nav-sublink\", shadowSelector, \" {background-color: #215ca0 !important;border-bottom: 1px solid #215ca0 !important;}\\n.cloud-icon-mittlestand-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-mittlestand-day2.svg')\\n        no-repeat;color: #215ca0 !important;padding-right: 10px;}\\n.cloud-icon-mittlestand-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #215ca0;}\\n.cloud-icon-mittlestand-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-mittlestand-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #215ca0 !important;border-bottom: 1px solid #215ca0 !important;}\\n.cloud-icon-mittlestand-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-mittlestand-day3.svg')\\n        no-repeat;color: #215ca0 !important;padding-right: 10px;}\\n.cloud-icon-mittlestand-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #215ca0;}\\n.cloud-icon-mittlestand-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-mittlestand-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #215ca0 !important;border-bottom: 1px solid #215ca0 !important;}\\n.cloud-icon-mittlestand-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/product-mittlestand-night.svg')\\n        no-repeat;color: #215ca0 !important;padding-right: 10px;}\\n.cloud-icon-mittlestand-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #215ca0;}\\n.cloud-icon-mittlestand-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-mittlestand-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #215ca0 !important;border-bottom: 1px solid #215ca0 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-mittlestand\", shadowSelector, \":before {color: #215ca0 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-sales\", shadowSelector, \":before {color: #001f1d !important;}\\n.cloud-icon-sales-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/sales-night.svg')\\n        no-repeat;color: #00857d !important;padding-right: 10px;}\\n.cloud-icon-sales-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00857d;}\\n.cloud-icon-sales-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-sales-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #00857d !important;border-bottom: 1px solid #00857d !important;}\\n.cloud-icon-sales\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/sales-day.svg')\\n        no-repeat;color: #00857d !important;padding-right: 10px;}\\n.cloud-icon-sales.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00857d;}\\n.cloud-icon-sales.primary-nav-sublink\", shadowSelector, \",.cloud-icon-sales.secondary-nav-sublink\", shadowSelector, \" {background-color: #00857d !important;border-bottom: 1px solid #00857d !important;}\\n.cloud-icon-sales-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/sales-day2.svg')\\n        no-repeat;color: #00857d !important;padding-right: 10px;}\\n.cloud-icon-sales-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00857d;}\\n.cloud-icon-sales-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-sales-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #00857d !important;border-bottom: 1px solid #00857d !important;}\\n.cloud-icon-sales-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/sales-day3.svg')\\n        no-repeat;color: #00857d !important;padding-right: 10px;}\\n.cloud-icon-sales-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00857d;}\\n.cloud-icon-sales-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-sales-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #00857d !important;border-bottom: 1px solid #00857d !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-sales\", shadowSelector, \":before {color: #00857d !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-service\", shadowSelector, \":before {color: #300d19 !important;}\\n.cloud-icon-service-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/service-night.svg')\\n        no-repeat;color: #812244 !important;padding-right: 10px;}\\n.cloud-icon-service-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #812244;}\\n.cloud-icon-service-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-service-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #812244 !important;border-bottom: 1px solid #812244 !important;}\\n.cloud-icon-service\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/service-day.svg')\\n        no-repeat;color: #812244 !important;padding-right: 10px;}\\n.cloud-icon-service.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #812244;}\\n.cloud-icon-service.primary-nav-sublink\", shadowSelector, \",.cloud-icon-service.secondary-nav-sublink\", shadowSelector, \" {background-color: #812244 !important;border-bottom: 1px solid #812244 !important;}\\n.cloud-icon-service-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/service-day2.svg')\\n        no-repeat;color: #812244 !important;padding-right: 10px;}\\n.cloud-icon-service-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #812244;}\\n.cloud-icon-service-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-service-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #812244 !important;border-bottom: 1px solid #812244 !important;}\\n.cloud-icon-service-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/service-day3.svg')\\n        no-repeat;color: #812244 !important;padding-right: 10px;}\\n.cloud-icon-service-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #812244;}\\n.cloud-icon-service-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-service-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #812244 !important;border-bottom: 1px solid #812244 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-service\", shadowSelector, \":before {color: #812244 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-e-commerce\", shadowSelector, \":before {color: #162213 !important;}\\n.cloud-icon-e-commerce-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/commerce-night.svg')\\n        no-repeat;color: #416437 !important;padding-right: 10px;}\\n.cloud-icon-e-commerce-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #416437;}\\n.cloud-icon-e-commerce-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-e-commerce-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #416437 !important;border-bottom: 1px solid #416437 !important;}\\n.cloud-icon-e-commerce\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/commerce-day.svg')\\n        no-repeat;color: #416437 !important;padding-right: 10px;}\\n.cloud-icon-e-commerce.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #416437;}\\n.cloud-icon-e-commerce.primary-nav-sublink\", shadowSelector, \",.cloud-icon-e-commerce.secondary-nav-sublink\", shadowSelector, \" {background-color: #416437 !important;border-bottom: 1px solid #416437 !important;}\\n.cloud-icon-e-commerce-day2\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/commerce-day2.svg')\\n        no-repeat;color: #416437 !important;padding-right: 10px;}\\n.cloud-icon-e-commerce-day2.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #416437;}\\n.cloud-icon-e-commerce-day2.primary-nav-sublink\", shadowSelector, \",.cloud-icon-e-commerce-day2.secondary-nav-sublink\", shadowSelector, \" {background-color: #416437 !important;border-bottom: 1px solid #416437 !important;}\\n.cloud-icon-e-commerce-day3\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/commerce-day3.svg')\\n        no-repeat;color: #416437 !important;padding-right: 10px;}\\n.cloud-icon-e-commerce-day3.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #416437;}\\n.cloud-icon-e-commerce-day3.primary-nav-sublink\", shadowSelector, \",.cloud-icon-e-commerce-day3.secondary-nav-sublink\", shadowSelector, \" {background-color: #416437 !important;border-bottom: 1px solid #416437 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-e-commerce\", shadowSelector, \":before {color: #416437 !important;}\\n.headingComponent\", shadowSelector, \" a:hover\", shadowSelector, \" .cloud-icon-certified\", shadowSelector, \":before {color: #00587a !important;}\\n.cloud-icon-certified-night\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/certified-night.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;width: 20px !important;height: 20px !important;}\\n.cloud-icon-certified-night.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-certified-night.primary-nav-sublink\", shadowSelector, \",.cloud-icon-certified-night.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.cloud-icon-certified\", shadowSelector, \" {background: url('https://www.salesforce.com/content/dam/web/global/svg-icons/certified-day.svg')\\n        no-repeat;color: #00a1e0 !important;padding-right: 10px;width: 20px !important;height: 20px !important;}\\n.cloud-icon-certified.vertical-bar-prefix\", shadowSelector, \" {padding-left: 10px;border-left: 1px solid #00a1e0;}\\n.cloud-icon-certified.primary-nav-sublink\", shadowSelector, \",.cloud-icon-certified.secondary-nav-sublink\", shadowSelector, \" {background-color: #00a1e0 !important;border-bottom: 1px solid #00a1e0 !important;}\\n.headingComponent\", shadowSelector, \" a.preventHover:hover\", shadowSelector, \" .cloud-icon-certified\", shadowSelector, \":before {color: #00a1e0 !important;}\\n.dropdown-menu\", shadowSelector, \" {position: absolute;top: 100%;left: 0;z-index: 1000;display: none;float: left;min-width: 160px;padding: 0;margin: 2px 0 0;list-style: none;font-size: 15px;text-align: left;background-color: #fff;border: 1px solid #ccc;border: 1px solid rgba(0, 0, 0, 0.15);border-radius: 4px;-webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);background-clip: padding-box;}\\n.dropdown-menu.pull-right\", shadowSelector, \" {right: 0;left: auto;}\\n.dropdown-menu\", shadowSelector, \" .divider\", shadowSelector, \" {height: 1px;margin: 9.5px 0;overflow: hidden;background-color: #e5e5e5;}\\n.dropdown-menu\", shadowSelector, \" > li\", shadowSelector, \" > a\", shadowSelector, \" {display: block;padding: 3px 20px;clear: both;font-weight: 400;line-height: 1.42857143;color: #5e5e5e;white-space: nowrap;}\\n.dropdown-menu\", shadowSelector, \" > li\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > li\", shadowSelector, \" > a:hover\", shadowSelector, \" {text-decoration: none;color: #515151;background-color: #f3f3f3;}\\n.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a:hover\", shadowSelector, \" {color: #fff;text-decoration: none;outline: 0;background-color: #0d9dda;}\\n.dropdown-menu\", shadowSelector, \" > .disabled\", shadowSelector, \" > a\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .disabled\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .disabled\", shadowSelector, \" > a:hover\", shadowSelector, \" {color: #5e5e5e;}\\n.dropdown-menu\", shadowSelector, \" > .disabled\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .disabled\", shadowSelector, \" > a:hover\", shadowSelector, \" {text-decoration: none;background-color: transparent;background-image: none;filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);cursor: not-allowed;}\\n.open\", shadowSelector, \" > .dropdown-menu\", shadowSelector, \" {display: block;}\\n.open\", shadowSelector, \" > a\", shadowSelector, \" {outline: 0;}\\n.dropdown-menu-right\", shadowSelector, \" {left: auto;right: 0;}\\n.dropdown-menu-left\", shadowSelector, \" {left: 0;right: auto;}\\n.dropdown-header\", shadowSelector, \" {display: block;padding: 3px 20px;font-size: 12px;line-height: 1.42857143;color: #5e5e5e;white-space: nowrap;}\\n.dropdown-backdrop\", shadowSelector, \" {position: fixed;left: 0;right: 0;bottom: 0;top: 0;z-index: 990;}\\n.pull-right\", shadowSelector, \" > .dropdown-menu\", shadowSelector, \" {right: 0;left: auto;}\\n.btn-group-justified\", shadowSelector, \" > .btn-group\", shadowSelector, \" .dropdown-menu\", shadowSelector, \" {left: auto;}\\n.dropdown-menu\", shadowSelector, \" > li\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > li\", shadowSelector, \" > a:hover\", shadowSelector, \" {background-image: -webkit-linear-gradient(top, #f3f3f3, #e6e6e6);background-image: -o-linear-gradient(top, #f3f3f3 0, #e6e6e6 100%);background-image: linear-gradient(180deg, #f3f3f3 0, #e6e6e6);background-repeat: repeat-x;filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#fff3f3f3\\\", endColorstr=\\\"#ffe6e6e6\\\", GradientType=0);background-color: #e6e6e6;}\\n.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a:focus\", shadowSelector, \",.dropdown-menu\", shadowSelector, \" > .active\", shadowSelector, \" > a:hover\", shadowSelector, \" {background-image: -webkit-linear-gradient(top, #0d9dda, #0c8cc2);background-image: -o-linear-gradient(top, #0d9dda 0, #0c8cc2 100%);background-image: linear-gradient(180deg, #0d9dda 0, #0c8cc2);background-repeat: repeat-x;filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#ff0d9dda\\\", endColorstr=\\\"#ff0c8cc2\\\", GradientType=0);background-color: #0c8cc2;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" {text-align: center;}\\n@media (min-width: 1025px) {.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" {display: none;}\\n}.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .horizontal-navbar-header\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .btn-container\", shadowSelector, \" a.btn\", shadowSelector, \" {display: table-cell;}\\n.horizontalNavComponent\", shadowSelector, \" .globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" {position: absolute;bottom: 0;right: 0;}\\n@media (max-width: 1024px) {.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" {display: none !important;}\\n}.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \",.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {-webkit-transition: opacity 0.5s linear;-o-transition: opacity 0.5s linear;transition: opacity 0.5s linear;}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {margin: 10px 0;}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 0;filter: alpha(opacity=0);}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: none;}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 0;filter: alpha(opacity=0);}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: none;}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .desktop-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" {opacity: 1;filter: alpha(opacity=100);}\\n.globalnavbar-header-container\", shadowSelector, \" .mobile-free-trial-container\", shadowSelector, \" .buttonCTAItemComponent\", shadowSelector, \" .nav-tab\", shadowSelector, \" span.head-text\", shadowSelector, \" {display: block;}\\n.buttonCTAItemComponent\", shadowSelector, \" {display: inline-block;margin-top: 10px !important;margin-bottom: 10px !important;}\\n.text-left\", shadowSelector, \" > .buttonCTAItemComponent\", shadowSelector, \" {margin-left: 0;margin-right: 30px;}\\n.text-left\", shadowSelector, \" > .buttonCTAItemComponent:last-child\", shadowSelector, \" {margin-right: 0;}\\n.btn-container\", shadowSelector, \" {display: inline-table;}\\n.btn-container\", shadowSelector, \" .btn\", shadowSelector, \" {display: table-cell;}\\n.btn\", shadowSelector, \" {display: inline-block;position: relative;z-index: 3;margin-bottom: 0;text-align: center;vertical-align: middle;touch-action: manipulation;cursor: pointer;background-image: none;border: 1px solid transparent;white-space: nowrap;padding: 6px 12px;font-size: 15px;line-height: 1.42857143;border-radius: 4px;-moz-user-select: none;user-select: none;}\\n.btn.active.focus\", shadowSelector, \",.btn.active:focus\", shadowSelector, \",.btn.focus\", shadowSelector, \",.btn:active.focus\", shadowSelector, \",.btn:active:focus\", shadowSelector, \",.btn:focus\", shadowSelector, \" {outline: thin dotted;outline: 5px auto -webkit-focus-ring-color;outline-offset: -2px;}\\n.btn.focus\", shadowSelector, \",.btn:focus\", shadowSelector, \",.btn:hover\", shadowSelector, \" {color: #fff;text-decoration: none;}\\n.btn.active\", shadowSelector, \",.btn:active\", shadowSelector, \" {outline: 0;background-image: none;-webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);}\\n.btn\", shadowSelector, \" span\", shadowSelector, \" br\", shadowSelector, \" {content: '';display: block;margin-top: 1px;}\\n.btn-lg.simple-link\", shadowSelector, \",.btn-sm\", shadowSelector, \" {line-height: 100%;border-radius: 4px;}\\n.btn-sm\", shadowSelector, \" {padding: 0 16px;font-size: 11px;height: 32px;}\\n.btn-ghost-cirrus\", shadowSelector, \" {color: #0b5cab;background-color: transparent;text-transform: uppercase;transition: background-color 0.3s ease;font-family: \\\"Salesforce Sans\\\";border: 1px solid #0b5cab;}\\n.btn-ghost-cirrus.active\", shadowSelector, \",.btn-ghost-cirrus.focus\", shadowSelector, \",.btn-ghost-cirrus:active\", shadowSelector, \",.btn-ghost-cirrus:focus\", shadowSelector, \",.btn-ghost-cirrus:hover\", shadowSelector, \",.open\", shadowSelector, \" > .dropdown-toggle.btn-ghost-cirrus\", shadowSelector, \" {color: #0b5cab;background-color: rgba(24, 24, 24, 0.15);}\\n.btn-ghost-cirrus.active\", shadowSelector, \",.btn-ghost-cirrus:active\", shadowSelector, \",.open\", shadowSelector, \" > .dropdown-toggle.btn-ghost-cirrus\", shadowSelector, \" {background-image: none;}\\n.btn\", shadowSelector, \" span\", shadowSelector, \" br\", shadowSelector, \" {content: '';display: block;margin-top: 1px;}\\n.btn-nav\", shadowSelector, \" {color: #fff;background-color: #278806;text-transform: uppercase;transition: background-color 0.3s ease;font-family: \\\"Salesforce Sans\\\";font-size: 14px;}\\n.btn-nav.active\", shadowSelector, \",.btn-nav.focus\", shadowSelector, \",.btn-nav:active\", shadowSelector, \",.btn-nav:focus\", shadowSelector, \",.btn-nav:hover\", shadowSelector, \",.open\", shadowSelector, \" > .dropdown-toggle.btn-nav\", shadowSelector, \" {color: #fff;background-color: #217405;}\\n.btn-nav.active\", shadowSelector, \",.btn-nav:active\", shadowSelector, \",.open\", shadowSelector, \" > .dropdown-toggle.btn-nav\", shadowSelector, \" {background-image: none;}\\n.btn-lg\", shadowSelector, \",.btn-xlg.simple-link\", shadowSelector, \" {line-height: 100%;border-radius: 4px;}\\n.btn-lg\", shadowSelector, \" {padding: 0 24px;font-size: 14px;height: 42px;}\\n@media (max-width: 1023px) {.btn-lg\", shadowSelector, \" {padding: 0 24px;font-size: 14px;line-height: 100%;border-radius: 4px;}\\n}\"].join('');\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([stylesheet]);\n\n//# sourceURL=webpack://mfe-nav/./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.css?");

/***/ }),

/***/ "./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.html":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.html ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _globalnavigation_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalnavigation.css */ \"./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.css\");\n/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lwc */ \"./node_modules/@lwc/engine/dist/engine.cjs.js\");\n\n\n\n\nfunction tmpl($api, $cmp, $slotset, $ctx) {\n  const {\n    h: api_element,\n    b: api_bind,\n    t: api_text,\n    k: api_key,\n    d: api_dynamic,\n    fid: api_scoped_frag_id,\n    i: api_iterator,\n    gid: api_scoped_id\n  } = $api;\n  const {\n    _m0,\n    _m1,\n    _m2,\n    _m3,\n    _m4,\n    _m5,\n    _m6,\n    _m7,\n    _m8,\n    _m9,\n    _m10,\n    _m11,\n    _m12,\n    _m13\n  } = $ctx;\n  return [$cmp.navItems ? api_element(\"header\", {\n    classMap: {\n      \"topcontainer\": true,\n      \"container-fluid\": true,\n      \"header-container\": true\n    },\n    attrs: {\n      \"role\": \"banner\"\n    },\n    key: 0\n  }, [api_element(\"div\", {\n    classMap: {\n      \"page-message-alert-replace\": true\n    },\n    key: 1\n  }, []), api_element(\"div\", {\n    key: 2\n  }, [api_element(\"div\", {\n    classMap: {\n      \"referenceComponent\": true,\n      \"reference\": true,\n      \"section\": true\n    },\n    key: 3\n  }, [api_element(\"div\", {\n    classMap: {\n      \"cq-dd-paragraph\": true\n    },\n    key: 4\n  }, [api_element(\"div\", {\n    classMap: {\n      \"globalNavigationBarConsolidated\": true\n    },\n    key: 5\n  }, [api_element(\"div\", {\n    classMap: {\n      \"horizontalNavComponent\": true\n    },\n    key: 6\n  }, [api_element(\"div\", {\n    classMap: {\n      \"globalnavbar-header-container\": true\n    },\n    key: 7\n  }, [api_element(\"div\", {\n    classMap: {\n      \"horizontal-navbar-header\": true\n    },\n    key: 8\n  }, [api_element(\"div\", {\n    classMap: {\n      \"inner\": true\n    },\n    key: 9\n  }, [api_element(\"a\", {\n    classMap: {\n      \"logo\": true\n    },\n    attrs: {\n      \"href\": \"https://www.salesforce.com\",\n      \"data-tracking-type\": \"logo\"\n    },\n    key: 10,\n    on: {\n      \"click\": _m0 || ($ctx._m0 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"img\", {\n    attrs: {\n      \"alt\": \"Salesforce\",\n      \"src\": \"//c1.sfdcstatic.com/content/dam/sfdc-docs/www/logos/logo-salesforce.svg\"\n    },\n    key: 11\n  }, [])]), $cmp.showFreeTrialCTA ? api_element(\"div\", {\n    classMap: {\n      \"mobile-free-trial-container\": true\n    },\n    key: 12\n  }, [api_element(\"div\", {\n    key: 13\n  }, [api_element(\"div\", {\n    classMap: {\n      \"buttonCTAItemComponent\": true\n    },\n    key: 14\n  }, [api_element(\"div\", {\n    classMap: {\n      \"btn-container\": true\n    },\n    key: 15\n  }, [api_element(\"a\", {\n    classMap: {\n      \"btn\": true,\n      \"btn-sm\": true,\n      \"btn-ghost-cirrus\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"data-content-replacement-close-color\": \"sfdc-swap-button-day\",\n      \"href\": \"https://www.salesforce.com/form/signup/freetrial-elf-v2/?d=70130000000EqoP\",\n      \"target\": \"_blank\",\n      \"role\": \"button\",\n      \"data-tracking-type\": \"freetrial\"\n    },\n    key: 16,\n    on: {\n      \"click\": _m1 || ($ctx._m1 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"span\", {\n    key: 17\n  }, [api_text(\"Try for free\")])])])])])]) : null, api_element(\"button\", {\n    classMap: {\n      \"horizontal-navbar-toggle\": true\n    },\n    attrs: {\n      \"type\": \"button\",\n      \"aria-expanded\": \"false\"\n    },\n    key: 18\n  }, [api_element(\"span\", {\n    classMap: {\n      \"sr-only\": true\n    },\n    key: 19\n  }, [api_text(\"Toggle navigation\")]), api_element(\"span\", {\n    classMap: {\n      \"icon-bar\": true\n    },\n    key: 20\n  }, []), api_element(\"span\", {\n    classMap: {\n      \"icon-bar\": true\n    },\n    key: 21\n  }, []), api_element(\"span\", {\n    classMap: {\n      \"icon-bar\": true\n    },\n    key: 22\n  }, [])])])]), api_element(\"nav\", {\n    classMap: {\n      \"main-menu-container\": true,\n      \"nofocus\": true\n    },\n    attrs: {\n      \"aria-label\": \"Main\"\n    },\n    key: 23\n  }, [api_element(\"div\", {\n    classMap: {\n      \"mobile-drawer-header\": true\n    },\n    key: 24\n  }, [api_element(\"div\", {\n    classMap: {\n      \"mobile-drawer-navigation\": true\n    },\n    key: 25\n  }, [api_element(\"button\", {\n    classMap: {\n      \"drawer-previous\": true\n    },\n    attrs: {\n      \"aria-label\": \"Back to previous submenu\"\n    },\n    key: 26\n  }, [api_element(\"span\", {\n    classMap: {\n      \"salesforce-icon\": true,\n      \"icon-sfdc-icon-left-arrow\": true\n    },\n    key: 27\n  }, [])]), api_element(\"div\", {\n    classMap: {\n      \"drawer-title\": true\n    },\n    attrs: {\n      \"data-default-title\": \"Home\"\n    },\n    context: {\n      lwc: {\n        dom: \"manual\"\n      }\n    },\n    key: 28\n  }, []), api_element(\"button\", {\n    classMap: {\n      \"drawer-close\": true\n    },\n    attrs: {\n      \"aria-label\": \"Close menu\"\n    },\n    key: 29\n  }, [api_element(\"span\", {\n    classMap: {\n      \"icon-sfdc-icon-x\": true\n    },\n    key: 30\n  }, [])]), $cmp.hasSearch ? api_element(\"div\", {\n    classMap: {\n      \"search-form\": true\n    },\n    key: 31\n  }, [api_element(\"a\", {\n    classMap: {\n      \"icon-sfdc-icon-magnifying-glass\": true\n    },\n    attrs: {\n      \"href\": \"https://www.salesforce.com/search/#sort=relevancy\",\n      \"aria-label\": \"search\",\n      \"data-tracking-type\": \"search\"\n    },\n    key: 32,\n    on: {\n      \"click\": _m2 || ($ctx._m2 = api_bind($cmp.trackClicks))\n    }\n  }, [])]) : null])]), api_element(\"ul\", {\n    classMap: {\n      \"wwww-main-nav\": true,\n      \"searchEnabled\": true\n    },\n    key: 33\n  }, api_iterator($cmp.navItems, function (rootLevel, rootLevelIndex) {\n    return api_element(\"li\", {\n      className: rootLevel._rootCssClass,\n      attrs: {\n        \"data-tracking-id\": rootLevel._tabTrackingID\n      },\n      key: api_key(34, rootLevel.ID)\n    }, [api_element(\"button\", {\n      classMap: {\n        \"nav-item-link\": true,\n        \"child-menu\": true\n      },\n      attrs: {\n        \"aria-expanded\": \"false\",\n        \"aria-haspopup\": \"true\"\n      },\n      key: 35\n    }, [api_element(\"span\", {\n      key: 36\n    }, [api_dynamic(rootLevel.title)]), api_element(\"span\", {\n      classMap: {\n        \"haschildIcon\": true\n      },\n      key: 37\n    }, [])]), rootLevel.childNodes ? api_element(\"div\", {\n      className: rootLevel._drawerDivCss,\n      style: rootLevel._drawerDivStyle,\n      attrs: {\n        \"data-drawer-title\": rootLevel.title\n      },\n      key: 38\n    }, [api_element(\"div\", {\n      classMap: {\n        \"menu-container\": true,\n        \"section\": true\n      },\n      key: 39\n    }, [api_element(\"div\", {\n      className: rootLevel._menuSectionsContainerCSS,\n      key: 40\n    }, api_iterator(rootLevel.childNodes, function (menuSections, menuSectionsIndex) {\n      return api_element(\"div\", {\n        classMap: {\n          \"menu-section\": true\n        },\n        key: api_key(41, menuSections.ID)\n      }, menuSections.childNodes ? api_iterator(menuSections.childNodes, function (sectionHeader, sectionHeaderIndex) {\n        return api_element(\"ul\", {\n          classMap: {\n            \"responsiveListComponent\": true,\n            \"section\": true\n          },\n          key: api_key(42, sectionHeader.ID)\n        }, [sectionHeader.url ? api_element(\"li\", {\n          key: 43\n        }, [api_element(\"span\", {\n          classMap: {\n            \"child-menu\": true\n          },\n          key: 44\n        }, [api_element(\"span\", {\n          key: 45\n        }, [api_element(\"a\", {\n          attrs: {\n            \"href\": api_scoped_frag_id(sectionHeader.url),\n            \"data-tracking-type\": \"topnavlinks\"\n          },\n          key: 46,\n          on: {\n            \"click\": _m3 || ($ctx._m3 = api_bind($cmp.trackClicks))\n          }\n        }, [api_dynamic(sectionHeader.title)])]), api_element(\"span\", {\n          key: 47\n        }, [])])]) : null, !sectionHeader.url ? api_element(\"li\", {\n          key: 48\n        }, [api_element(\"div\", {\n          classMap: {\n            \"child-menu\": true\n          },\n          key: 49\n        }, [api_element(\"h3\", {\n          key: 50\n        }, [api_element(\"span\", {\n          attrs: {\n            \"role\": \"heading\",\n            \"aria-level\": \"3\"\n          },\n          key: 51\n        }, [api_dynamic(sectionHeader.title)]), api_element(\"span\", {\n          classMap: {\n            \"haschildIcon\": true\n          },\n          key: 52\n        }, [])])]), api_element(\"div\", {\n          classMap: {\n            \"sub-nav\": true\n          },\n          key: 53\n        }, [sectionHeader.childNodes ? api_element(\"ul\", {\n          key: 54\n        }, api_iterator(sectionHeader.childNodes, function (navLinks, navLinksIndex) {\n          return api_element(\"li\", {\n            classMap: {\n              \"nav-item\": true\n            },\n            key: api_key(55, navLinks.ID)\n          }, [navLinks.target ? api_element(\"a\", {\n            attrs: {\n              \"href\": api_scoped_frag_id(navLinks.url),\n              \"target\": \"_blank\",\n              \"data-tracking-type\": \"topnavlinks\"\n            },\n            key: 56,\n            on: {\n              \"click\": _m4 || ($ctx._m4 = api_bind($cmp.trackClicks))\n            }\n          }, [navLinks._svgClass ? api_element(\"svg\", {\n            className: navLinks._svgClass,\n            attrs: {\n              \"aria-hidden\": \"true\"\n            },\n            key: 57\n          }, []) : null, api_element(\"span\", {\n            key: 58\n          }, [api_dynamic(navLinks.title)]), api_element(\"span\", {\n            classMap: {\n              \"icon-sfdc-icon-offsite\": true\n            },\n            attrs: {\n              \"role\": \"img\",\n              \"aria-label\": \"Open a new window\"\n            },\n            key: 59\n          }, [])]) : null, !navLinks.target ? api_element(\"a\", {\n            attrs: {\n              \"href\": api_scoped_frag_id(navLinks.url),\n              \"data-tracking-type\": \"topnavlinks\"\n            },\n            key: 60,\n            on: {\n              \"click\": _m5 || ($ctx._m5 = api_bind($cmp.trackClicks))\n            }\n          }, [navLinks._svgClass ? api_element(\"svg\", {\n            className: navLinks._svgClass,\n            attrs: {\n              \"aria-hidden\": \"true\"\n            },\n            key: 61\n          }, []) : null, api_element(\"span\", {\n            key: 62\n          }, [api_dynamic(navLinks.title)])]) : null]);\n        })) : null])]) : null]);\n      }) : []);\n    }))])]) : null]);\n  }))]), api_element(\"div\", {\n    classMap: {\n      \"header-right-content\": true\n    },\n    key: 63\n  }, [api_element(\"div\", {\n    classMap: {\n      \"inner\": true\n    },\n    key: 64\n  }, [api_element(\"div\", {\n    classMap: {\n      \"search-form\": true\n    },\n    key: 65\n  }, [api_element(\"a\", {\n    classMap: {\n      \"icon-sfdc-icon-magnifying-glass\": true\n    },\n    attrs: {\n      \"href\": \"https://www.salesforce.com/search/#sort=relevancy\",\n      \"aria-label\": \"search\",\n      \"data-tracking-type\": \"search\"\n    },\n    key: 66,\n    on: {\n      \"click\": _m6 || ($ctx._m6 = api_bind($cmp.trackClicks))\n    }\n  }, [])]), api_element(\"div\", {\n    key: 67\n  }, [api_element(\"div\", {\n    classMap: {\n      \"phoneNumberComponent_textLevel\": true,\n      \"text-night\": true,\n      \"text-left\": true,\n      \"salesforce-sans-regular\": true\n    },\n    key: 68\n  }, [api_element(\"span\", {\n    classMap: {\n      \"display-phone\": true,\n      \"text-night\": true\n    },\n    key: 69\n  }, [api_element(\"span\", {\n    classMap: {\n      \"hidden-lg\": true,\n      \"hidden-md\": true,\n      \"hidden-sm\": true\n    },\n    key: 70\n  }, [api_text(\"CALL US\")]), api_element(\"span\", {\n    classMap: {\n      \"hidden-xs\": true\n    },\n    key: 71\n  }, [api_text(\"1-800-667-6389\")])])])]), api_element(\"div\", {\n    key: 72\n  }, [api_element(\"a\", {\n    attrs: {\n      \"href\": \"https://www.salesforce.com/company/contact-us/?d=cta-header-9\",\n      \"data-tracking-type\": \"contactus\"\n    },\n    key: 73,\n    on: {\n      \"click\": _m7 || ($ctx._m7 = api_bind($cmp.trackClicks))\n    }\n  }, [api_text(\"Contact Us\")])]), api_element(\"div\", {\n    classMap: {\n      \"separator\": true\n    },\n    key: 74\n  }, []), api_element(\"div\", {\n    classMap: {\n      \"global-nav-login-flydown\": true,\n      \"global-login\": true\n    },\n    key: 75\n  }, [api_element(\"div\", {\n    key: 76\n  }, [api_element(\"div\", {\n    classMap: {\n      \"flyDownOuter\": true\n    },\n    key: 77\n  }, [api_element(\"div\", {\n    classMap: {\n      \"dropdown\": true\n    },\n    attrs: {\n      \"tabindex\": \"0\",\n      \"aria-expanded\": \"false\",\n      \"role\": \"button\",\n      \"aria-label\": \"Login\",\n      \"aria-haspopup\": \"true\"\n    },\n    key: 78\n  }, [api_element(\"a\", {\n    classMap: {\n      \"dropdown-toggle\": true,\n      \"disabled\": true\n    },\n    attrs: {\n      \"href\": \"https://login.salesforce.com/\",\n      \"data-toggle\": \"dropdown\",\n      \"tabindex\": \"-1\",\n      \"data-tracking-type\": \"login\"\n    },\n    key: 79,\n    on: {\n      \"click\": _m8 || ($ctx._m8 = api_bind($cmp.trackClicks))\n    }\n  }, [api_text(\"Login\"), api_element(\"div\", {\n    classMap: {\n      \"global-login-img\": true\n    },\n    key: 80\n  }, [api_element(\"div\", {\n    classMap: {\n      \"image-link\": true\n    },\n    key: 81\n  }, [api_element(\"img\", {\n    classMap: {\n      \"img-responsive\": true\n    },\n    attrs: {\n      \"alt\": \"\",\n      \"src\": \"https://www.salesforce.com/content/dam/sfdc-docs/www/images/global-navigation/icon-login-astro.png\",\n      \"data-src\": \"https://www.salesforce.com/content/dam/sfdc-docs/www/images/global-navigation/icon-login-astro.png\"\n    },\n    key: 82\n  }, [])])])])]), api_element(\"div\", {\n    key: 83\n  }, [api_element(\"ul\", {\n    classMap: {\n      \"dropdown-menu\": true,\n      \"flyout-menu\": true,\n      \"flyout-menu-login\": true\n    },\n    key: 84\n  }, [api_element(\"li\", {\n    key: 85\n  }, [api_element(\"h2\", {\n    classMap: {\n      \"login\": true,\n      \"h4\": true,\n      \"text-cirrus\": true,\n      \"text-left\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"id\": api_scoped_id(\"login\")\n    },\n    key: 86\n  }, [api_element(\"a\", {\n    classMap: {\n      \"text-cirrus\": true,\n      \"anchor-image\": true\n    },\n    attrs: {\n      \"href\": \"https://login.salesforce.com\",\n      \"data-tracking-type\": \"login\"\n    },\n    key: 87,\n    on: {\n      \"click\": _m9 || ($ctx._m9 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"img\", {\n    classMap: {\n      \"img-responsive\": true,\n      \"header-image-float\": true\n    },\n    attrs: {\n      \"alt\": \"\",\n      \"src\": \"https://www.salesforce.com/content/dam/sfdc-docs/www/logos/salesforce-cloud-logo-sm.png\"\n    },\n    key: 88\n  }, []), api_element(\"span\", {\n    classMap: {\n      \"header-text\": true,\n      \"head-text\": true,\n      \"header-text-line\": true\n    },\n    key: 89\n  }, [api_text(\"Login\")])])])]), api_element(\"li\", {\n    key: 90\n  }, [api_element(\"div\", {\n    classMap: {\n      \"panel-group\": true,\n      \"openOnHover\": true\n    },\n    key: 91\n  }, [api_element(\"div\", {\n    classMap: {\n      \"accordionItemComponent\": true\n    },\n    key: 92\n  }, [api_element(\"div\", {\n    classMap: {\n      \"panel\": true\n    },\n    key: 93\n  }, [api_element(\"div\", {\n    classMap: {\n      \"panel-collapse\": true,\n      \"collapse\": true,\n      \"bg-default\": true\n    },\n    key: 94\n  }, [api_element(\"div\", {\n    classMap: {\n      \"panel-body\": true,\n      \"no-panel-body-border\": true\n    },\n    key: 95\n  }, [api_element(\"div\", {\n    key: 96\n  }, [api_element(\"div\", {\n    classMap: {\n      \"headingComponent\": true,\n      \"section\": true\n    },\n    key: 97\n  }, [api_element(\"p\", {\n    classMap: {\n      \"marketing-cloud\": true,\n      \"h4gn\": true,\n      \"text-cirrus\": true,\n      \"text-left\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"id\": api_scoped_id(\"marketing-cloud\")\n    },\n    key: 98\n  }, [api_element(\"a\", {\n    classMap: {\n      \"text-cirrus\": true\n    },\n    attrs: {\n      \"href\": \"https://mc.exacttarget.com/\",\n      \"data-tracking-type\": \"login\"\n    },\n    key: 99,\n    on: {\n      \"click\": _m10 || ($ctx._m10 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"span\", {\n    classMap: {\n      \"header-text\": true\n    },\n    key: 100\n  }, [api_text(\"Marketing Cloud\")])])])]), api_element(\"div\", {\n    classMap: {\n      \"headingComponent\": true,\n      \"section\": true\n    },\n    key: 101\n  }, [api_element(\"p\", {\n    classMap: {\n      \"social-studio\": true,\n      \"h4gn\": true,\n      \"text-cirrus\": true,\n      \"text-left\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"id\": api_scoped_id(\"social-studio\")\n    },\n    key: 102\n  }, [api_element(\"a\", {\n    classMap: {\n      \"text-cirrus\": true\n    },\n    attrs: {\n      \"href\": \"https://socialstudio.radian6.com/login\",\n      \"data-tracking-type\": \"login\"\n    },\n    key: 103,\n    on: {\n      \"click\": _m11 || ($ctx._m11 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"span\", {\n    classMap: {\n      \"header-text\": true\n    },\n    key: 104\n  }, [api_text(\"Social Studio\")])])])]), api_element(\"div\", {\n    classMap: {\n      \"headingComponent\": true,\n      \"section\": true\n    },\n    key: 105\n  }, [api_element(\"p\", {\n    classMap: {\n      \"trailhead\": true,\n      \"h4gn\": true,\n      \"text-cirrus\": true,\n      \"text-left\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"id\": api_scoped_id(\"trailhead\")\n    },\n    key: 106\n  }, [api_element(\"a\", {\n    classMap: {\n      \"text-cirrus\": true\n    },\n    attrs: {\n      \"href\": \"https://trailblazer.me/trailblazerlogin\",\n      \"data-tracking-type\": \"login\"\n    },\n    key: 107,\n    on: {\n      \"click\": _m12 || ($ctx._m12 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"span\", {\n    classMap: {\n      \"header-text\": true\n    },\n    key: 108\n  }, [api_text(\"Trailhead\")])])])])])])])])])])])])])])])])])]), $cmp.showFreeTrialCTA ? api_element(\"div\", {\n    classMap: {\n      \"desktop-free-trial-container\": true\n    },\n    key: 109\n  }, [api_element(\"div\", {\n    classMap: {\n      \"text-left\": true\n    },\n    key: 110\n  }, [api_element(\"div\", {\n    classMap: {\n      \"buttonCTAItemComponent\": true\n    },\n    key: 111\n  }, [api_element(\"div\", {\n    classMap: {\n      \"btn-container\": true\n    },\n    key: 112\n  }, [api_element(\"a\", {\n    classMap: {\n      \"btn\": true,\n      \"btn-lg\": true,\n      \"btn-nav\": true,\n      \"salesforce-sans-regular\": true\n    },\n    attrs: {\n      \"data-content-replacement-close-color\": \"sfdc-swap-button-day\",\n      \"href\": \"https://www.salesforce.com/form/signup/freetrial-elf-v2/?d=70130000000EqoP\",\n      \"target\": \"_blank\",\n      \"role\": \"button\",\n      \"data-tracking-type\": \"freetrial\"\n    },\n    key: 113,\n    on: {\n      \"click\": _m13 || ($ctx._m13 = api_bind($cmp.trackClicks))\n    }\n  }, [api_element(\"span\", {\n    key: 114\n  }, [api_text(\"Try For Free\")])])])])])]) : null, api_element(\"div\", {\n    classMap: {\n      \"overlay\": true,\n      \"overlay-hide\": true\n    },\n    key: 115\n  }, [])])])])])])])]) : null];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_1__.registerTemplate)(tmpl));\ntmpl.stylesheets = [];\n\nif (_globalnavigation_css__WEBPACK_IMPORTED_MODULE_0__.default) {\n  tmpl.stylesheets.push.apply(tmpl.stylesheets, _globalnavigation_css__WEBPACK_IMPORTED_MODULE_0__.default)\n}\ntmpl.stylesheetTokens = {\n  hostAttribute: \"my-hgf-lwc-components-src_globalnavigation-host\",\n  shadowAttribute: \"my-hgf-lwc-components-src_globalnavigation\"\n};\n\n\n//# sourceURL=webpack://mfe-nav/./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.html?");

/***/ }),

/***/ "./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.ts":
/*!************************************************************************************************!*\
  !*** ./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.ts ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var lwc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lwc */ \"./node_modules/@lwc/engine/dist/engine.cjs.js\");\n/* harmony import */ var _globalnavigation_html__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./globalnavigation.html */ \"./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.html\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass HgfGlobalnavigation extends lwc__WEBPACK_IMPORTED_MODULE_0__.LightningElement {\n  constructor(...args) {\n    super(...args);\n    this.showFreeTrial = undefined;\n    this.navData = undefined;\n    this.origin = undefined;\n    this.search = undefined;\n    this.navItems = [];\n    this._codeBlockRendered = false;\n    this.drawerAttrs = [{\n      class: 'sub-nav-offset-40',\n      style: 'width: 910px;'\n    }, {\n      class: '',\n      style: 'width: 860px;'\n    }, {\n      class: '',\n      style: 'width: 670px;'\n    }, {\n      class: 'sub-nav-offset-140',\n      style: 'width: 810px;'\n    }, {\n      class: 'sub-nav-offset-180',\n      style: 'width: 810px;'\n    }];\n    this.svgMapping = {\n      'icon-360': 'cloud-icon-placeholder11',\n      'icon-sales': 'cloud-icon-sales',\n      'icon-service': 'cloud-icon-service',\n      'icon-marketing': 'cloud-icon-marketing',\n      'icon-commerce': 'cloud-icon-e-commerce',\n      'icon-analytics': 'cloud-icon-placeholder1',\n      'icon-integration': 'cloud-icon-industries-product-integration',\n      'icon-platform': 'cloud-icon-platform',\n      'icon-work': 'cloud-icon-placeholder2',\n      'icon-learning': 'cloud-icon-trailhead',\n      'icon-employees': 'cloud-icon-product-quip',\n      'icon-experience': 'cloud-icon-community',\n      'icon-partner-ecosystem': 'icon-sfdc-icon-grid',\n      'icon-financials': 'cloud-icon-industries-fin-serv',\n      'icon-healthcare': 'cloud-icon-industries-health-life-sciences',\n      'icon-public-sector': 'cloud-icon-radio',\n      'icon-communications': 'cloud-icon-events',\n      'icon-manufacturing': 'cloud-icon-industries-manufacturing',\n      'icon-consumer-goods': 'cloud-icon-industries-consumer-goods',\n      'icon-small-business': 'cloud-icon-smb',\n      'icon-customer-success': 'icon-sfdc-icon-calendar'\n    };\n  }\n\n  /**\n   * @function getNavData\n   * @description - fetches data from nav endpoint with an origin passed in\n   * <br> as a property, and a path defined in the homepage plugin\n   */\n  getNavData() {\n    const apiURL = `${this.origin}/global-navigation/top-navigation?preview=0`;\n    fetch(apiURL).then(response => {\n      if (!response.ok) {\n        return Promise.reject(response);\n      }\n\n      return response.json();\n    }).then(data => {\n      this.prepData(data);\n    }).catch(error => {\n      // eslint-disable-next-line no-console\n      console.log('Fetch error', error);\n    });\n  } // prepare fields for rendering\n\n\n  prepData(data) {\n    if (!data) {\n      return;\n    }\n\n    data.forEach((item, index) => {\n      // prepare root level elements (tabs)\n      if (item.menu_item_parent === '0') {\n        // add tracking ID on root level\n        this.rootTrackingID(item); // add css class field on root level\n\n        this.rootCSSClass(item, index); // build class and inline style for drawer div (which only exist for root level nav items)\n\n        this.styleTabDrawer(item); // get the correct class for the menu sections container div\n\n        this.menuSectionsContainerClass(item);\n      } else {\n        // handle icon markup for nav links\n        this.svgClass(item);\n      }\n    });\n    const tree = this.treeify(data) || [];\n    this.navItems = tree;\n  }\n\n  connectedCallback() {\n    if (this.navData) {\n      this.prepData(JSON.parse(this.navData));\n    } else if (this.origin) {\n      this.getNavData();\n    }\n  }\n\n  renderedCallback() {\n    if (this._codeBlockRendered) {\n      return;\n    }\n\n    if (this.navItems && this.navItems.length > 0) {\n      this.clicksAndAccessibility();\n      this._codeBlockRendered = true;\n    }\n  }\n\n  treeify(dataset) {\n    const hashTable = Object.create(null);\n    dataset.forEach(aData => {\n      return hashTable[aData.ID] = _objectSpread(_objectSpread({}, aData), {}, {\n        childNodes: []\n      });\n    });\n    const dataTree = [];\n    dataset.forEach(aData => {\n      if (aData.menu_item_parent && hashTable[aData.menu_item_parent]) {\n        hashTable[aData.menu_item_parent].childNodes.push(hashTable[aData.ID]);\n      } else {\n        dataTree.push(hashTable[aData.ID]);\n      }\n    });\n    return dataTree;\n  } // move to menu builder authoring?\n\n\n  styleTabDrawer(item) {\n    if (!item) {\n      return;\n    }\n\n    item._drawerDivCss = 'sub-nav leftAlignedSubMenuElement ';\n    const rootLevelNavItemStylingObj = this.drawerAttrs.shift();\n\n    if (rootLevelNavItemStylingObj) {\n      item._drawerDivCss += rootLevelNavItemStylingObj.class;\n      item._drawerDivStyle = rootLevelNavItemStylingObj.style;\n    }\n  }\n\n  menuSectionsContainerClass(item) {\n    if (!item) {\n      return;\n    }\n\n    let menuContainerClass = ''; // special case for first tab (products)\n\n    if (item.menu_order === 1) {\n      menuContainerClass = 'products-menu-us';\n    } else if (item.childNodes) {\n      if (item.childNodes.length === 3) {\n        menuContainerClass = 'three-column';\n      } else if (item.childNodes.length === 4) {\n        menuContainerClass = 'four-column';\n      }\n    }\n\n    item._menuSectionsContainerCSS = menuContainerClass;\n  }\n\n  rootTrackingID(item) {\n    if (!item) {\n      return;\n    }\n\n    let tabTrackingID = item.title ? item.title : '';\n    tabTrackingID = tabTrackingID.toLocaleLowerCase().replace(/ /g, '_');\n    item._tabTrackingID = tabTrackingID;\n  }\n\n  rootCSSClass(item, index) {\n    if (!item) {\n      return;\n    }\n\n    let rootCssClass = 'nav-item menu_item_' + index;\n    rootCssClass += item.mobileonly ? ' hide-desktop' : '';\n    item._rootCssClass = rootCssClass;\n  }\n\n  get hasSearch() {\n    return this.search;\n  }\n\n  get showFreeTrialCTA() {\n    return this.showFreeTrial === 'true';\n  }\n\n  svgClass(item) {\n    if (!item) {\n      return;\n    }\n\n    if (item.classes && item.classes.length > 0) {\n      const classesString = item.classes.join(' ');\n      item._svgClass = this.svgMapping[classesString] ? `salesforce-icon ${this.svgMapping[classesString]}` : undefined;\n    }\n  }\n\n  clicksAndAccessibility() {\n    /*eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }]*/\n    // lwc compiler requires that children nodes to an element with lwc:dom=\"manual\" directive are added via javascript\n    const container = this.template.querySelector('.drawer-title');\n\n    if (container) {\n      container.innerHTML = '<h4><span>Home</span></h4>';\n    }\n\n    let mobileDrawer, navBarToggle, closeDrawer, previousMenu, drawerTitle, childMenusContainers, childMenus, overlay, navTabbaleArray, accessibilitySettings, // TO-DO: needs a type but not sure what each property is doing\n    mobileNavContainer, bodyTag, isMobile, searchLnk; // for use inside event handlers\n\n    const _self = this.template;\n    const globalNavigationBarConsolidatedEl = this.template.querySelectorAll('.globalNavigationBarConsolidated');\n\n    if (globalNavigationBarConsolidatedEl.length) {\n      /* eslint-disable no-unused-vars */\n      bodyTag = this.template.querySelector('.topcontainer');\n      mobileDrawer = this.template.querySelector('.globalnavbar-header-container');\n      navBarToggle = this.template.querySelector('.horizontal-navbar-toggle');\n      closeDrawer = this.template.querySelector('.drawer-close');\n      previousMenu = this.template.querySelector('.drawer-previous');\n      drawerTitle = this.template.querySelector('.drawer-title');\n      childMenusContainers = this.template.querySelectorAll('.sub-nav');\n      childMenus = this.template.querySelectorAll('.child-menu');\n      overlay = this.template.querySelector('.overlay');\n      mobileNavContainer = this.template.querySelector('.main-menu-container');\n      searchLnk = this.template.querySelector('.mobile-drawer-navigation .icon-sfdc-icon-magnifying-glass');\n      let topNavItems = [];\n\n      if (mobileNavContainer) {\n        topNavItems = Array.from(mobileNavContainer.querySelectorAll('.nav-item-link'));\n      }\n\n      navTabbaleArray = []; // create an array of visible/tabbable navItems\n\n      if (topNavItems && topNavItems.length > 0) {\n        for (let i = 0; topNavItems.length > i; i++) {\n          if (topNavItems[i] && topNavItems[i].parentElement) {\n            const navVisible = topNavItems[i].parentElement.classList.contains('hide-desktop');\n\n            if (!navVisible) {\n              navTabbaleArray.push(topNavItems[i]);\n            }\n          }\n        }\n      }\n\n      accessibilitySettings = {\n        tabbableEls: [],\n        navTabbaleArray: navTabbaleArray,\n        // narrow this selector down to only the main navigation\n        // this is required since the classname is being used for FT drawer\n        menuItemContainer: this.template.querySelector('.wwww-main-nav'),\n        headerRightContentContainer: Array.from(this.template.querySelectorAll('.header-right-content .dropdown'))\n      };\n    } // receives string to update the mobile nav header\n\n\n    function changeTitle(title) {\n      if (drawerTitle) {\n        drawerTitle.classList.add('active');\n      }\n\n      function restore() {\n        // set the title value\n        if (drawerTitle) {\n          drawerTitle.getElementsByTagName('span')[0].innerHTML = title; // show the title\n\n          drawerTitle.classList.remove('active');\n        }\n      }\n\n      window.setTimeout(restore, 200);\n    }\n\n    function toggleMobileVisibility() {\n      if (mobileNavContainer) {\n        const isVisible = !mobileNavContainer.classList.contains('nofocus');\n\n        if (isVisible && navBarToggle) {\n          mobileNavContainer.classList.add('nofocus');\n          navBarToggle.setAttribute('aria-expanded', 'false');\n        } else {\n          mobileNavContainer.classList.remove('nofocus');\n\n          if (navBarToggle) {\n            navBarToggle.setAttribute('aria-expanded', 'true');\n          }\n        }\n      }\n    }\n\n    function init() {\n      isMobile = window.matchMedia('(max-width: 1024px)').matches || window.innerWidth <= 1024;\n      setIndex();\n\n      const handleResize = function () {\n        isMobile = window.matchMedia('(max-width: 1024px)').matches || window.innerWidth <= 1024;\n        setIndex();\n      };\n\n      let debouncedHandleResize = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.debounce)(handleResize, 50); //eslint-disable-line\n\n      window.addEventListener('resize', debouncedHandleResize); // mobile navigation toggle\n\n      if (navBarToggle) {\n        navBarToggle.addEventListener('click', function () {\n          if (mobileDrawer) {\n            mobileDrawer.classList.toggle('active');\n          }\n\n          if (bodyTag) {\n            bodyTag.classList.toggle('nav-open');\n          }\n\n          toggleMobileVisibility(); // accessibility aria-visible tags\n        });\n      }\n\n      if (overlay) {\n        overlay.addEventListener('click', function () {\n          if (mobileDrawer) {\n            mobileDrawer.classList.toggle('active');\n          }\n\n          if (bodyTag) {\n            bodyTag.classList.remove('nav-open');\n          }\n\n          previousMenu && previousMenu.classList.remove('active');\n          Array.prototype.forEach.call(childMenusContainers, function (element) {\n            element.classList.remove('active');\n          });\n          changeTitle(drawerTitle && drawerTitle.getAttribute('data-default-title') || '');\n          toggleMobileVisibility();\n          accessibilitySettings.tabbableEls = [];\n        });\n      } // close mobile navigation\n\n\n      function closeMobileNav() {\n        mobileDrawer && mobileDrawer.classList.remove('active'); //nullcheck\n\n        previousMenu && previousMenu.classList.remove('active'); //nullcheck\n\n        if (bodyTag) {\n          bodyTag.classList.remove('nav-open');\n        }\n\n        Array.prototype.forEach.call(childMenusContainers, function (element) {\n          element.classList.remove('active');\n        });\n        changeTitle(drawerTitle && drawerTitle.getAttribute('data-default-title') || '');\n        mobileNavContainer && mobileNavContainer.classList.add('nofocus'); //manually adding 'nofocus' class to the nav for the close\n\n        navBarToggle && navBarToggle.setAttribute('aria-expanded', 'false');\n      }\n\n      let autoCloseMobileNav = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.debounce)(closeMobileNav, 70); //eslint-disable-line\n\n      closeDrawer && closeDrawer.addEventListener('click', closeMobileNav);\n      window.addEventListener('resize', autoCloseMobileNav); // previous mobile menu cta\n\n      /*eslint-disable complexity*/\n\n      previousMenu && previousMenu.addEventListener('click', function (e) {\n        const elDataAttr = e.currentTarget && e.currentTarget.getAttribute('data-active-menu');\n\n        const activeMenu = _self.querySelector('#' + elDataAttr);\n\n        const parentMenu = activeMenu && activeMenu.dataset.parentMenu ? activeMenu.dataset.parentMenu : undefined;\n        activeMenu && activeMenu.classList.remove('active');\n\n        if (parentMenu) {\n          // grab parent drawer ID set previousMenu w/new dataset.activeMenu\n          previousMenu && previousMenu.setAttribute('data-active-menu', parentMenu ? parentMenu : '');\n\n          const localTarget = _self.querySelector('#' + parentMenu); // Fix for when menu is 3 levels deep then comes back to home with prev button still shown\n\n\n          if (localTarget && !localTarget.classList.contains('active')) {\n            if (previousMenu && previousMenu.classList.contains('active')) {\n              previousMenu.classList.remove('active');\n            }\n          }\n        } else {\n          // hide the previousMenu cta if no other menu\n          previousMenu && previousMenu.classList.remove('active');\n        }\n\n        changeTitle(activeMenu && activeMenu.dataset.parentTitle || '');\n      });\n      /*eslint-enable complexity*/\n      // attach an eventListener to all the menu links with the class child-menu\n\n      Array.prototype.forEach.call(childMenus, function (childMenuLink) {\n        childMenuLink.addEventListener('click', function (e) {\n          // Mobile Logic\n          if (isMobile) {\n            const curEl = e.currentTarget;\n            const activeMenu = childMenuLink.nextElementSibling;\n            const activeMenuTitle = curEl && curEl.getElementsByTagName('span')[0].innerHTML.trim();\n            const previousMenuID = previousMenu && previousMenu.dataset.activeMenu; // activate the associative sub-nav menu\n\n            childMenuLink.nextElementSibling.classList.add('active'); // make previous cta visible\n\n            previousMenu && previousMenu.classList.add('active'); // set parent menuID, used to reverse menu\n            // w/o traversing the DOM to find parent\n\n            if (previousMenuID !== undefined) {\n              activeMenu.setAttribute('data-parent-menu', previousMenuID);\n            }\n\n            activeMenu.setAttribute('data-parent-title', drawerTitle && drawerTitle.innerText); // set the current active menu id\n\n            let drawerID = activeMenu.getAttribute('id'); // if does not have ID then create one, add to drawer then to previousMenu\n\n            if (!drawerID) {\n              // need more unique, grab parent drawer ID\n              drawerID = previousMenuID + '_' + activeMenuTitle.toLocaleLowerCase().replace(/ /g, '_').replace(/&amp;/g, 'and');\n              activeMenu.setAttribute('id', drawerID);\n            } // set previousMenu active drawer ID\n\n\n            previousMenu && previousMenu.setAttribute('data-active-menu', drawerID); // update title\n\n            changeTitle(activeMenuTitle || '');\n          }\n        });\n      });\n    } // there's more to init....\n\n\n    function setIndex() {\n      const mobileChildMenues = _self.querySelectorAll('span.child-menu');\n\n      let i;\n\n      if (isMobile) {\n        for (i = 0; i < mobileChildMenues.length; i++) {\n          mobileChildMenues[i].tabIndex = 0;\n        }\n\n        drawerTitle && (drawerTitle.tabIndex = 0);\n      } else {\n        for (i = 0; i < mobileChildMenues.length; i++) {\n          if (mobileChildMenues[i].tabIndex === 0) {\n            mobileChildMenues[i].removeAttribute('tabindex');\n          }\n        }\n\n        if (drawerTitle && drawerTitle.tabIndex === 0) {\n          drawerTitle.removeAttribute('tabindex');\n        }\n      }\n    } // accessibility functionality\n\n\n    function accessibilityInit(menuItemContainer) {\n      const Keyboard = {\n        TAB: 9,\n        ESCAPE: 27,\n        ENTER: 13,\n        SPACE: 32,\n        LEFT: 37,\n        RIGHT: 39,\n        UP: 38,\n        DOWN: 40\n      };\n      /*\n      MOBILE: Function handle change of focus of the top nav items\n      Created this due to the complexity of the moveFocus function\n      @variable target: current active menu item <a>\n      @variable forward: Boolean for direction of the tabbing\n      */\n\n      /* eslint-disable complexity */\n\n      /* eslint-disable no-unused-vars */\n\n      function moveSubNavFocusMobile(target, forward, event, isTopNav, toHeading) {\n        let targetMenuSelection, lastTargetTitleLnk;\n        const activeSubnavList = document.querySelectorAll('.sub-nav.active');\n        let currentSubNav; // Set active subnav to whatever level we have active.\n        // Get current active submenu. As we go deeper, we get more active submenus\n\n        if (activeSubnavList.length === 0) {\n          currentSubNav = undefined;\n        } else {\n          const tmp = activeSubnavList.length - 1;\n          currentSubNav = activeSubnavList[tmp];\n        }\n\n        if (currentSubNav) {\n          // Build submenu arrays based off active subnavs\n          const activeChildMenu = currentSubNav.querySelectorAll('span.child-menu');\n          const activeNavItems = currentSubNav.querySelectorAll('li.nav-item a');\n\n          if (activeChildMenu.length > 0) {\n            // Level 1 subnav. Different submenus have different dom structure\n            targetMenuSelection = activeChildMenu;\n          } else if (activeNavItems.length > 0) {\n            // Level 2 subnav. Different submenus have different dom structure\n            targetMenuSelection = activeNavItems;\n          }\n        } else {\n          // No active menu, try parent\n          targetMenuSelection = isTopNav ? document.querySelectorAll('button.nav-item-link') : undefined;\n        } // First item in active list\n\n\n        const firstTargetTitleLnk = targetMenuSelection ? targetMenuSelection[0] : undefined; // Get last item\n\n        if (targetMenuSelection) {\n          const tmp = targetMenuSelection.length - 1;\n          lastTargetTitleLnk = targetMenuSelection[tmp];\n        } else {\n          lastTargetTitleLnk = 0;\n        } // Need to debounce and wait for dom to repaint section\n\n\n        const focusTitle = function () {\n          drawerTitle && drawerTitle.focus();\n        };\n\n        let debounceTitleFocus = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.debounce)(focusTitle, 300); //eslint-disable-line\n        // Focus Section\n\n        if (toHeading) {\n          // We opened a new menu, send focus to title\n          debounceTitleFocus(); // Force scroll back to top\n\n          if (currentSubNav) {\n            currentSubNav.scrollIntoView();\n          }\n        }\n\n        if (forward) {\n          // Forward moving focus\n          if (target === searchLnk && currentSubNav && firstTargetTitleLnk && !toHeading) {\n            // We are tabbing forward from the seach icon, go to first item in list\n            event.preventDefault();\n            firstTargetTitleLnk && firstTargetTitleLnk.focus();\n          }\n\n          if (target === lastTargetTitleLnk && !toHeading) {\n            // We are tabbing backwards and at the top link, go to search\n            event.preventDefault();\n          }\n        } else {\n          // Not Forward moving focus\n          if (target === firstTargetTitleLnk && !toHeading) {\n            // We are tabbing backwards and at the top link, go to search\n            event.preventDefault();\n            searchLnk && searchLnk.focus();\n          }\n        }\n      }\n      /*\n      Function handle change of focus of the top nav items\n      Created this due to the complexity of the moveFocus function\n      @variable target: current active menu item <a>\n      @variable forward: Boolean for direction of the tabbing\n      */\n\n\n      function moveTopNavFocus(target, forward, event, tabPressed) {\n        const parentMenu = target.closest('.nav-item'),\n              parentMenuActive = parentMenu && parentMenu.classList.contains('active');\n        const navItemIndex = navTabbaleArray.indexOf(target),\n              firstNavItem = navItemIndex <= 0,\n              lastNavItem = navItemIndex >= navTabbaleArray.length - 1;\n\n        if (lastNavItem && forward) {\n          //set focus on content outside of nav-item\n          if (parentMenuActive) {\n            //if on the last nav item and the sub-nav is active, pass in true for closeMenu, which deactivates the menu\n            if (target.parentElement) {\n              activateMenu(target.parentElement, true, true, true);\n            }\n          }\n        } else if (firstNavItem && !forward) {\n          // if on firstNavItem\n          //if the menu isn't active, then don't do anything and allow for default behavior\n          if (tabPressed) {\n            setAriaExpandedFalse();\n            parentMenu && parentMenu.classList.remove('active');\n          }\n        } else if (!forward) {\n          // if the menu is active, activate the menu\n          if (tabPressed) {\n            event.preventDefault();\n          }\n\n          target = navTabbaleArray[navItemIndex - 1];\n\n          if (parentMenuActive) {\n            // and set the focus on the topnav\n            //if tab pressed, then want to pass in false for focusParent\n            if (target.parentElement) {\n              activateMenu(target.parentElement, false, !tabPressed, false);\n            }\n          } else {\n            // select previous nav item\n            target.focus();\n          }\n        } else {\n          // select nextnav item\n          if (tabPressed) {\n            event.preventDefault();\n          }\n\n          target = navTabbaleArray[navItemIndex + 1];\n\n          if (parentMenuActive) {\n            // and set the focus on the topnav\n            if (target.parentElement) {\n              activateMenu(target.parentElement, false, true, false);\n            }\n          } else {\n            // select next nav item\n            target.focus();\n          }\n        }\n      }\n      /*\n      Function handle change of focus for menu elements\n      @variable target: current active menu item\n      @variable forward: Boolean for direction of the tabbing\n      @variable keycode: key value entered, eg: tab == 6, right arrow == 40, etc\n      */\n\n      /* eslint-disable complexity */\n\n\n      function moveSubNavFocus(target, forward, keycode, event, tabPressed) {\n        const menuTabbableEls = accessibilitySettings.tabbableEls;\n        const tabbableEls = menuTabbableEls.length > 0 ? menuTabbableEls : navTabbaleArray; // variables for up/down to active menu\n\n        const parentMenu = target.closest('.nav-item.active');\n        const targetIndex = tabbableEls.indexOf(target),\n              lastTabItem = targetIndex + 1 >= tabbableEls.length,\n              firstTabItem = targetIndex <= 0;\n        let navItemIndex = 0;\n\n        if (parentMenu && parentMenu.querySelector('.nav-item-link')) {\n          navItemIndex = navTabbaleArray.indexOf(parentMenu.querySelector('.nav-item-link'));\n        }\n\n        const lastNavItem = navItemIndex >= navTabbaleArray.length - 1;\n\n        if (lastTabItem && forward) {\n          // if there is a next parent nav item\n          if (!lastNavItem) {\n            event.preventDefault();\n\n            if (parentMenu && parentMenu.nextElementSibling) {\n              activateMenu(parentMenu.nextElementSibling, true, true, false);\n            }\n          } else {\n            //close the submenu by removing active class when clicking tab on final element in sub-nav for final nav-item\n            if (tabPressed) {\n              setAriaExpandedFalse();\n              parentMenu && parentMenu.classList.remove('active');\n            }\n          }\n        } else if (firstTabItem && !forward) {\n          if (tabPressed) {\n            event.preventDefault();\n          }\n\n          parentMenu && parentMenu.firstElementChild.focus();\n        } else if (!firstTabItem && !forward) {\n          if (tabPressed) {\n            event.preventDefault();\n          }\n\n          tabbableEls[targetIndex - 1].focus();\n        } else {\n          event.preventDefault();\n          tabbableEls[targetIndex + 1].focus();\n        }\n      }\n      /*\n      Function to handle the activation of the topnav menus\n      @variable targetMenu: the <li> topnav element\n      @variable forward: Boolean for direction of the tabbing\n      @variable focusParent: Boolean if to focus the top nav item\n      */\n\n\n      function activateMenu(targetMenu, forward, focusParent, closeMenu) {\n        if (forward && focusParent && closeMenu) {\n          setAriaExpandedFalse();\n          targetMenu.classList.remove('active');\n          return;\n        } // remove active from all topNavItems\n\n\n        const activeMenus = Array.from(_self.querySelectorAll('.nav-item.active'));\n\n        if (activeMenus) {\n          setAriaExpandedFalse();\n          activeMenus.forEach(function (el) {\n            el.classList.remove('active');\n          });\n        } // activate the target menu\n\n\n        targetMenu.classList.toggle('active');\n        setAriaExpandedTrue(targetMenu); // list of tabbable elements. This only includes a tags,\n        // could be extended to include other elements\n\n        const targetSubMenu = targetMenu.querySelector('.sub-nav');\n        const subeMenuTabbable = Array.from(targetSubMenu && targetSubMenu.querySelectorAll('a') || []); // set as global var to access through other methods\n        // instead of recreating the tabbableEls each keypress\n\n        accessibilitySettings.tabbableEls = subeMenuTabbable; // find the previous menu\n\n        if (forward && !focusParent) {\n          // focus on the first in menu\n          subeMenuTabbable[0].focus();\n        } else if (focusParent) {\n          // set focus on parent nav item\n          if (targetMenu && targetMenu.querySelector('.nav-item-link')) {\n            targetMenu.querySelector('.nav-item-link').focus();\n          }\n        } else {\n          // focus on the last in menu\n          subeMenuTabbable[subeMenuTabbable.length - 1].focus();\n        }\n      } // Setup functionality with hover events for aria expanded\n\n\n      const initHoverAriaExpanded = () => {\n        const menuBtns = Array.from(_self.querySelectorAll('.nav-item-link'));\n        const subNav = Array.from(_self.querySelectorAll('.sub-nav'));\n\n        if (menuBtns) {\n          menuBtns.forEach(el => {\n            el.addEventListener('mouseover', e => {\n              e.stopPropagation();\n              e = e || window.event;\n              const caller = e.currentTarget && e.currentTarget;\n\n              if (caller && caller.parentElement) {\n                setAriaExpandedTrue(caller.parentElement);\n              }\n\n              showOverlay();\n            });\n            el.addEventListener('mouseout', e => {\n              e.stopPropagation();\n              e = e || window.event;\n              const caller = e.currentTarget && e.currentTarget;\n\n              if (caller && caller.parentElement) {\n                onMouseOut(caller.parentElement, e);\n              }\n\n              hideOverlay();\n            });\n          });\n        }\n\n        if (subNav) {\n          subNav.forEach(el => {\n            el.addEventListener('mouseout', e => {\n              e.stopPropagation();\n              e = e || window.event;\n              const caller = e.currentTarget && e.currentTarget;\n\n              if (caller && caller.parentElement) {\n                onMouseOut(caller.parentElement, e);\n              }\n\n              hideOverlay();\n            });\n            el.addEventListener('mouseover', e => {\n              e.stopPropagation();\n              showOverlay();\n            });\n          });\n        }\n      };\n\n      function onMouseOut(caller, event) {\n        //this is the original element the event handler was assigned to\n        let e = event.relatedTarget; //check for all children levels (checking from bottom up)\n\n        while (e && e.parentNode && e.parentNode !== document) {\n          if (e.parentNode === caller || e === caller) {\n            if (event.preventDefault) {\n              event.preventDefault();\n            }\n\n            return false;\n          }\n\n          e = e.parentNode;\n        } //Now we set aria expanded to false\n\n\n        setAriaExpandedFalse();\n        return undefined;\n      }\n\n      function setAriaExpandedFalse() {\n        // remove true from all topNavItems buttons\n        const ariaExpandedBtns = Array.from(_self.querySelectorAll('.nav-item .nav-item-link'));\n\n        if (ariaExpandedBtns) {\n          ariaExpandedBtns.forEach(el => {\n            el.setAttribute('aria-expanded', 'false');\n          });\n        }\n      }\n\n      function setAriaExpandedTrue(targetMenu) {\n        if (!targetMenu) {\n          return;\n        }\n\n        if (targetMenu) {\n          setAriaExpandedFalse();\n          const navItemLink = targetMenu.querySelector('.nav-item-link'); // Set target btn to true\n\n          if (navItemLink) {\n            navItemLink.setAttribute('aria-expanded', 'true');\n          }\n        }\n      }\n\n      function hideOverlay() {\n        if (overlay) {\n          if (!overlay.classList.contains('overlay-hide')) {\n            overlay.classList.remove('overlay-show');\n            overlay.classList.add('overlay-hide');\n          }\n        }\n      }\n\n      function showOverlay() {\n        if (overlay) {\n          if (!overlay.classList.contains('overlay-show')) {\n            overlay.classList.remove('overlay-hide');\n            overlay.classList.add('overlay-show');\n          }\n        }\n      }\n      /**\n       * .header-right-content dropdowns key-down callback for accessibility\n       * DOES NOT INCLUDE regionSelector, functionality in regionSelector.js\n       */\n\n\n      function initKeydownFlydownSelector() {\n        const headerRightContentContainer = accessibilitySettings.headerRightContentContainer;\n        const flyDownOuterArr = Array.from(_self.querySelectorAll('.flyDownOuter'));\n\n        if (headerRightContentContainer) {\n          headerRightContentContainer.forEach(el => {\n            el.addEventListener('keydown', _keyDownFlyDownHandler);\n            el.addEventListener('click', _keyDownFlyDownHandler);\n          });\n        }\n\n        if (flyDownOuterArr) {\n          flyDownOuterArr.forEach(el => {\n            const dropdown = el.querySelector('.dropdown');\n            el.addEventListener('mouseenter', e => {\n              e.stopPropagation();\n              dropdown && dropdown.setAttribute('aria-expanded', 'true');\n            });\n            el.addEventListener('mouseleave', e => {\n              e.stopPropagation();\n              dropdown && dropdown.setAttribute('aria-expanded', 'false');\n            });\n          });\n        }\n      }\n\n      function initKeydownAccordionSelector() {\n        const panelBtns = Array.from(_self.querySelectorAll('.flyDownOuter a[data-toggle=\"collapse\"]'));\n\n        if (panelBtns) {\n          panelBtns.forEach(el => {\n            el.addEventListener('keydown', e => {\n              if (e.key === ' ' || e.key === 'Spacebar' || e.keyCode === 32) {\n                e.preventDefault();\n                e.currentTarget && e.currentTarget.click();\n              }\n            });\n          });\n        }\n      }\n\n      function resetEles() {\n        const parentFlyout = accessibilitySettings.headerRightContentContainer;\n        const flyoutMenus = Array.from(_self.querySelectorAll('.flyDownOuter .flyout-menu'));\n\n        const accordionPanel = _self.querySelector('.flyDownOuter .panel-collapse');\n\n        if (parentFlyout && flyoutMenus) {\n          parentFlyout.forEach(el => {\n            el.setAttribute('aria-expanded', 'false');\n          });\n          flyoutMenus.forEach(el => {\n            el.removeAttribute('style');\n            el.classList.remove('flyout-open');\n          });\n\n          if (accordionPanel && accordionPanel.classList.contains('in')) {\n            accordionPanel.style.display = 'none';\n          }\n        }\n      }\n\n      function onFocusOut(caller, event) {\n        //this is the original element the event handler was assigned to\n        let e = event.relatedTarget; //check for all children levels (checking from bottom up)\n\n        while (e && e.parentNode && e.parentNode !== document) {\n          if (e.parentNode === caller || e === caller) {\n            if (event.preventDefault) {\n              event.preventDefault();\n            }\n\n            return false;\n          }\n\n          e = e.parentNode;\n        } //Reset elements\n\n\n        resetEles();\n        return undefined;\n      }\n\n      function _keyDownFlyDownHandler(event) {\n        const key = event.key;\n        const eventType = event.type;\n        const keyCode = event.keyCode;\n        const currentTarget = event.currentTarget;\n        const eTarget = event.target;\n        let closestSelectorDialog;\n        const flyDownOuterArr = Array.from(_self.querySelectorAll('.flyDownOuter'));\n\n        if (flyDownOuterArr) {\n          flyDownOuterArr.forEach(el => {\n            el.addEventListener('focusout', e => {\n              e.stopPropagation();\n              e = e || window.event;\n              const caller = e.currentTarget && e.currentTarget;\n\n              if (caller && caller.parentElement) {\n                onFocusOut(caller.parentElement, e);\n              }\n            });\n            el.addEventListener('keydown', keydownevent => {\n              if (keydownevent.key === 'Escape' || keydownevent.keyCode === 27) {\n                // Escape key\n                eTarget && eTarget.setAttribute('aria-expanded', 'false');\n                resetEles();\n                eTarget && eTarget.focus();\n              }\n            });\n          });\n        }\n\n        if (currentTarget && currentTarget !== undefined) {\n          if (currentTarget && currentTarget.nextElementSibling) {\n            const nextSibling = currentTarget.nextElementSibling;\n            closestSelectorDialog = nextSibling && nextSibling.querySelector('.flyout-menu');\n          }\n\n          if (closestSelectorDialog && closestSelectorDialog !== undefined) {\n            if (eventType === 'click' || key === 'Enter' || keyCode === 13 || key === ' ' || key === 'Spacebar' || keyCode === 32) {\n              // Enter key && Space key\n              //toggle flyout with space/enter\n              if (closestSelectorDialog.classList.contains('flyout-open') && event && event.target && event.target.classList.contains('dropdown')) {\n                event.preventDefault();\n                closestSelectorDialog.classList.remove('flyout-open');\n                closestSelectorDialog.style.display = 'none';\n                currentTarget.setAttribute('aria-expanded', 'false');\n                resetEles();\n              } else if (!closestSelectorDialog.classList.contains('flyout-open') && event && event.target && event.target.classList.contains('dropdown')) {\n                event.preventDefault();\n                closestSelectorDialog.classList.add('flyout-open');\n                closestSelectorDialog.style.display = 'block';\n                currentTarget.setAttribute('aria-expanded', 'true');\n              }\n            }\n          }\n        }\n      }\n      /* eslint-disable complexity */\n\n\n      function _keyDownHandler(event) {\n        /* eslint-disable no-unused-vars */\n        const keycode = event.keyCode;\n        const target = event.target;\n        const isTopNavItem = target.classList.contains('nav-item-link');\n        const isTopNavItemActive = target.parentElement.classList.contains('active');\n        const parentNavItem = target.closest('.nav-item.active');\n        let tabbableEls = accessibilitySettings.tabbableEls;\n        const navTabbaleArray = accessibilitySettings.navTabbaleArray,\n              currentNavIndex = navTabbaleArray.indexOf(target);\n\n        switch (keycode) {\n          case Keyboard.ESCAPE:\n            {\n              setAriaExpandedFalse();\n\n              if (isMobile) {\n                // Close mobile nav\n                closeDrawer && closeDrawer.click();\n                navBarToggle && navBarToggle.focus();\n              } else {\n                if (!isTopNavItem) {\n                  // set focus on parent nav item\n                  parentNavItem && parentNavItem.firstElementChild.focus();\n                } // remove active from parent nav item\n\n\n                parentNavItem && parentNavItem.classList.remove('active'); // empty the array when closing the nav\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n                tabbableEls = [];\n              }\n\n              break;\n            }\n\n          case Keyboard.DOWN:\n            {\n              event.preventDefault();\n\n              if (isTopNavItem) {\n                if (!isMobile) {\n                  activateMenu(target.parentElement, true, false, false);\n                }\n              } else {\n                if (!isMobile) {\n                  moveSubNavFocus(target, true, keycode, event, false);\n                }\n              }\n\n              break;\n            }\n\n          case Keyboard.UP:\n            {\n              event.preventDefault();\n              const firstTopNavItem = navTabbaleArray.indexOf(target) <= 0;\n\n              if (isTopNavItem && firstTopNavItem) {\n                if (!isMobile) {\n                  setAriaExpandedFalse();\n                  const closestEl = target && target.closest('.nav-item');\n\n                  if (closestEl) {\n                    closestEl.classList && closestEl.classList.remove('active');\n                  }\n                }\n              } else if (isTopNavItem) {\n                if (!isMobile) {\n                  activateMenu(navTabbaleArray[currentNavIndex - 1].parentElement, false, false, false);\n                }\n              } else {\n                if (!isMobile) {\n                  moveSubNavFocus(target, false, keycode, event, false);\n                }\n              }\n\n              break;\n            }\n\n          case Keyboard.LEFT:\n            {\n              event.preventDefault();\n\n              if (isTopNavItem) {\n                if (!isMobile) {\n                  moveTopNavFocus(target, false, event, false);\n                }\n              }\n\n              break;\n            }\n\n          case Keyboard.RIGHT:\n            {\n              event.preventDefault();\n\n              if (isTopNavItem) {\n                if (!isMobile) {\n                  moveTopNavFocus(target, true, event, false);\n                }\n              }\n\n              break;\n            }\n\n          case Keyboard.SPACE:\n          case Keyboard.ENTER:\n            {\n              if (isTopNavItemActive) {\n                event.preventDefault();\n                target.parentElement && target.parentElement.classList.remove('active');\n              } else if (isTopNavItem) {\n                event.preventDefault();\n\n                if (isMobile) {\n                  // Simulate Click on mobile top category\n                  target.click();\n                  moveSubNavFocusMobile(target, true, event, false, true);\n                } else {\n                  activateMenu(target.parentElement, true, true, false); // keep focus on topnav\n                }\n              } else {\n                if (isMobile) {\n                  if (target.matches('.child-menu')) {\n                    target.click();\n                    moveSubNavFocusMobile(target, true, event, false, true);\n                  }\n                }\n\n                return true;\n              }\n\n              break;\n            }\n\n          case Keyboard.TAB:\n            {\n              if (event.shiftKey) {\n                if (isTopNavItem) {\n                  if (isMobile) {\n                    moveSubNavFocusMobile(target, false, event, true, false);\n                  } else {\n                    moveTopNavFocus(target, false, event, true);\n                  }\n                } else {\n                  if (isMobile) {\n                    moveSubNavFocusMobile(target, false, event, false, false);\n                  } else {\n                    moveSubNavFocus(target, false, keycode, event, true);\n                  }\n                }\n\n                break;\n              } else {\n                if (!isTopNavItem || isTopNavItemActive) {\n                  if (isMobile) {\n                    moveSubNavFocusMobile(target, true, event, false, false);\n                  } else {\n                    moveSubNavFocus(target, true, keycode, event, true);\n                  }\n                } else if (isTopNavItem) {\n                  if (isMobile) {\n                    moveSubNavFocusMobile(target, true, event, true, false);\n                  } else {\n                    moveTopNavFocus(target, true, event, true);\n                  }\n                }\n\n                break;\n              }\n            }\n\n          default: // no default;\n\n        }\n\n        return undefined;\n      }\n      /****\n       * Mobile event listeners\n       * Capture key event for top menue items in mobile\n       ****/\n      // Need to wait for hamburger menus to be displayed before focus()\n\n\n      const focusHamburger = function () {\n        navBarToggle && navBarToggle.focus();\n      };\n\n      let debounceNavBarToggleFocus = (0,lodash__WEBPACK_IMPORTED_MODULE_2__.debounce)(focusHamburger, 100); //eslint-disable-line\n\n      searchLnk && searchLnk.addEventListener('keydown', function (event) {\n        if (isMobile) {\n          if (event.keyCode === Keyboard.TAB) {\n            if (!event.shiftKey) {\n              moveSubNavFocusMobile(searchLnk, true, event, false, false);\n            }\n          } else if (event.keyCode === Keyboard.ESCAPE) {\n            closeDrawer && closeDrawer.click();\n            debounceNavBarToggleFocus();\n          }\n        }\n      });\n      previousMenu && previousMenu.addEventListener('keydown', function (event) {\n        if (isMobile) {\n          if (event.keyCode === Keyboard.TAB) {\n            if (event.shiftKey) {\n              // Don't go any further\n              event.preventDefault();\n            }\n          } else if (event.keyCode === Keyboard.ENTER || event.keyCode === Keyboard.SPACE) {\n            event.preventDefault();\n            previousMenu && previousMenu.click();\n            moveSubNavFocusMobile(previousMenu, false, event, false, true);\n          } else if (event.keyCode === Keyboard.ESCAPE) {\n            // Close menu\n            closeDrawer && closeDrawer.click();\n            debounceNavBarToggleFocus();\n          }\n        }\n      });\n      closeDrawer && closeDrawer.addEventListener('keydown', function (event) {\n        if (isMobile) {\n          if (event.keyCode === Keyboard.ESCAPE || event.keyCode === Keyboard.ENTER || event.keyCode === Keyboard.SPACE) {\n            // Close menu\n            event.preventDefault();\n            closeDrawer && closeDrawer.click();\n            debounceNavBarToggleFocus();\n          }\n        }\n      });\n      drawerTitle && drawerTitle.addEventListener('keydown', function (event) {\n        if (isMobile) {\n          if (event.keyCode === Keyboard.ESCAPE) {\n            // Close menu\n            closeDrawer && closeDrawer.click();\n            debounceNavBarToggleFocus();\n          } else if (event.keyCode === Keyboard.TAB) {\n            if (event.shiftKey) {\n              // If shift+tabbing off title, check that previous button exist before moving on\n              if (previousMenu && !previousMenu.classList.contains('active')) {\n                event.preventDefault();\n              }\n            }\n          }\n        }\n      });\n      navBarToggle && navBarToggle.addEventListener('keydown', function (event) {\n        if (isMobile) {\n          if (event.keyCode === Keyboard.ENTER || event.keyCode === Keyboard.SPACE) {\n            // Open the mobile nav\n            moveSubNavFocusMobile(navBarToggle, false, event, false, true);\n          }\n        }\n      }); // add event listener to the navigation\n\n      menuItemContainer && menuItemContainer.addEventListener('keydown', _keyDownHandler);\n      menuItemContainer && menuItemContainer.addEventListener('click', function (event) {\n        const target = event.target;\n\n        if (target) {\n          const isTopNavItem = target.classList.contains('nav-item-link');\n          const isTopNavItemActive = target.parentElement && target.parentElement.classList.contains('active');\n\n          if (isTopNavItemActive) {\n            target.parentElement && target.parentElement.classList.remove('active');\n          } else if (isTopNavItem) {\n            if (!isMobile) {\n              event.preventDefault();\n              activateMenu(target.parentElement, true, true, false);\n            }\n          }\n        }\n      }); // Kick off flydown menus in header right container\n\n      initKeydownFlydownSelector(); // Kick off hover aria expanded\n\n      initHoverAriaExpanded(); //Kick off flydown accordion class toggle in header right container\n\n      initKeydownAccordionSelector();\n    }\n\n    init();\n\n    if (accessibilitySettings && accessibilitySettings.menuItemContainer) {\n      accessibilityInit(accessibilitySettings.menuItemContainer);\n    }\n  } // close clicksAndAccessibility\n\n\n  trackClicks(e) {\n    if (typeof window.digitalData === 'undefined' || typeof window.Page === 'undefined' || typeof window.Util === 'undefined') {\n      return;\n    }\n\n    const utils = window.digitalData.util;\n\n    if (utils && window.digitalData.page) {\n      const pageName = typeof window.Page.getName === 'function' ? window.Page.getName() : '';\n      const _target = e.target;\n      const _currentTarget = e.currentTarget;\n      const linkTrackingType = _currentTarget.getAttribute('data-tracking-type') ? _currentTarget.getAttribute('data-tracking-type') : '';\n      const navLocation = 'Top';\n      const currentHref = _currentTarget ? _currentTarget.href : '';\n      const navName = _target.innerText ? _target.innerText.trim() : '';\n      const navNameLowerCase = navName.toLowerCase();\n      const cleanedLinktxt = navNameLowerCase.replace(/ /g, '_');\n\n      const closestNavItemEl = _target.closest('.wwww-main-nav > .nav-item');\n\n      const primaryMenuItemId = closestNavItemEl ? closestNavItemEl : '';\n      let pageCustomLink = navLocation + '|' + cleanedLinktxt;\n      let navItem = 'undefined';\n      let datastr = pageName + '|' + pageCustomLink;\n      let internalDriver = '';\n\n      if (currentHref) {\n        internalDriver = window.Util.convert15To18(window.Util.getParam('d', currentHref));\n      }\n\n      if ('topnavlinks' === linkTrackingType) {\n        const closestSubNavContainer = _target.closest('.sub-nav');\n\n        const navGrpHeadingEl = closestSubNavContainer && closestSubNavContainer.previousElementSibling;\n        let navGrpName = '';\n\n        if (navGrpHeadingEl) {\n          navGrpName = navGrpHeadingEl.innerText.trim().toLowerCase();\n        }\n\n        const closestNavDrawer = _target.closest('.wwww-main-nav > .nav-item > .sub-nav');\n\n        const topNavBtn = closestNavDrawer && closestNavDrawer.previousElementSibling;\n        const topNavBtnName = topNavBtn ? topNavBtn.innerText.trim().toLowerCase() : '';\n\n        if (navGrpName) {\n          navItem = topNavBtnName + ':' + navGrpName + ':' + navNameLowerCase;\n        } else {\n          navItem = topNavBtnName + ':' + navNameLowerCase;\n        }\n\n        pageCustomLink = navLocation + '|' + primaryMenuItemId + '|' + cleanedLinktxt;\n        datastr = pageName + '|' + pageCustomLink;\n      } else if ('login' === linkTrackingType) {\n        navItem = 'login:' + navNameLowerCase;\n        pageCustomLink = navLocation + '|Login|' + cleanedLinktxt;\n        datastr = pageName + '|' + pageCustomLink;\n      } else if ('search' === linkTrackingType) {\n        navItem = 'site search';\n      } else if ('logo' === linkTrackingType) {\n        navItem = 'home:logo';\n      } else if ('undefined' === navItem && navNameLowerCase) {\n        navItem = navNameLowerCase;\n      } // prevent carryover for multiple clicks on same page\n\n\n      window.digitalData.page.navItem = undefined;\n      window.digitalData.page.navItemClickText = undefined;\n      window.digitalData.page.navItemClickHref = undefined;\n      window.digitalData.page.navItemInternalDriver = undefined; // set values for custEv_navigationClick event\n\n      utils.addPageData('navItem', navItem);\n      utils.addPageData('navItemClickText', navName);\n      utils.addPageData('navItemClickHref', currentHref);\n      utils.addPageData('navItemInternalDriver', internalDriver);\n      utils.addBehavior('currenttopnavigationclicks');\n      utils.addPageData('moduletracking', datastr);\n      utils.addPageData('customlink', pageCustomLink);\n\n      if (typeof utils.trackBehavior === 'function') {\n        utils.trackBehavior(datastr, ['topnavigationclicks', 'customlink'], ['page.moduletracking', 'user[0].profile[0].usertype', 'page.customlink']);\n      }\n    }\n  }\n\n}\n\n(0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerDecorators)(HgfGlobalnavigation, {\n  publicProps: {\n    showFreeTrial: {\n      config: 0\n    },\n    navData: {\n      config: 0\n    },\n    origin: {\n      config: 0\n    },\n    search: {\n      config: 0\n    }\n  },\n  track: {\n    navItems: 1,\n    _codeBlockRendered: 1\n  },\n  fields: [\"drawerAttrs\", \"svgMapping\"]\n})\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,lwc__WEBPACK_IMPORTED_MODULE_0__.registerComponent)(HgfGlobalnavigation, {\n  tmpl: _globalnavigation_html__WEBPACK_IMPORTED_MODULE_1__.default\n})); // close Class\n\n//# sourceURL=webpack://mfe-nav/./node_modules/@sfdc-www/hgf-lwc-components/src/hgf/globalnavigation/globalnavigation.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.js");
/******/ 	
/******/ })()
;